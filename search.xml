<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>CyberSecurityFundemental</title>
    <url>/2023/05/11/CyberSecurityFundemental/</url>
    <content><![CDATA[]]></content>
  </entry>
  <entry>
    <title>First blog</title>
    <url>/2023/02/12/First-blog/</url>
    <content><![CDATA[<h1 id="Git-study"><a href="#Git-study" class="headerlink" title="Git study"></a>Git study</h1><p><img src="/../images/WeChatb22903d041669c31bc759fe2fce96683.png"></p>
]]></content>
      <tags>
        <tag>First blog</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2022/09/22/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>data analyst</title>
    <url>/2023/04/18/data-analyst/</url>
    <content><![CDATA[<ul>
<li>Have completed an undergraduate degree to a (2.1 minimum) with a Mathematical or Scientific background</li>
<li>Knowledge in SQL or Power BI</li>
<li>Strong analytical and numerical skills</li>
<li>Experience preparing, consolidating and normalising data :ETL processes</li>
<li>Experience &#x2F; knowledge of data visualisation and dashboard tools e.g. Qlikview, Tableau or Power BI</li>
<li>Strong communication skills to work comfortable with all levels of users</li>
<li>Be within commuting distance to Croydon</li>
</ul>
]]></content>
      <categories>
        <category>Data Engineering</category>
      </categories>
      <tags>
        <tag>tech</tag>
      </tags>
  </entry>
  <entry>
    <title>mall developing</title>
    <url>/2023/03/31/mall-developing/</url>
    <content><![CDATA[<h2 id="Bug-shooting"><a href="#Bug-shooting" class="headerlink" title="Bug shooting"></a>Bug shooting</h2><h3 id="Bug1"><a href="#Bug1" class="headerlink" title="Bug1."></a>Bug1.</h3><p><strong>captcha disappearance</strong></p>
<p><a href="https://www.javazxz.com/thread-7116-1-1.html">https://www.javazxz.com/thread-7116-1-1.html</a></p>
<h3 id="Bug2"><a href="#Bug2" class="headerlink" title="Bug2."></a>Bug2.</h3><p><strong>com.mysql.cj.jdbc.exceptions.CommunicationsException: Communications link failure</strong></p>
<p>network problem. The student.gla.ac.uk network filed cannot access to tencent server.</p>
<h3 id="Bug3"><a href="#Bug3" class="headerlink" title="Bug3."></a>Bug3.</h3><p><strong>No spring.config.import property has been defined</strong></p>
<p>产生问题的原因是bootstrap.properties比application.properties的优先级要高<br>由于bootstrap.properties是系统级的资源配置文件，是用在程序引导执行时更加早期配置信息读取；<br>而application.properties是用户级的资源配置文件，是用来后续的一些配置所需要的公共参数。<br>但是在SpringCloud 2020.* 版本把bootstrap禁用了，导致在读取文件的时候读取不到而报错，所以我们只要把bootstrap从新导入进来就会生效了。</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.clouds<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-bootstrap<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">version</span>&gt;</span>3.0.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>在全部使用nacos配置后，就不用引用这个了</p>
<h3 id="Bug4"><a href="#Bug4" class="headerlink" title="Bug4"></a>Bug4</h3><p>java: 找不到符号 符号：方法 XXX() 位置: 类型为io.renren.modules.sys.entity</p>
<p><strong>Solution:</strong></p>
<ol>
<li>这是因为你的idea中内置lombok和项目中pom文件的版本不兼容的原因，简单说就是这两个发生冲突了，大部分的出现在idea2020和2021版本上可能会出现问题。</li>
<li>因为lombok版本是一般是受springboot版本管理的，也可以通过升级springboot的版本来提高lombok版本，只要你springboot中引用的Lombok高于上面的版本就可以。</li>
</ol>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--Lombok--&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">version</span>&gt;</span>1.18.14<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">scope</span>&gt;</span>provided<span class="tag">&lt;/<span class="name">scope</span>&gt;</span>//注意这行代码一定要加上去，我的问题就是出现在没有加这行代码还是会报错、</span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h2 id="Config"><a href="#Config" class="headerlink" title="Config:"></a>Config:</h2><h3 id="1-redis"><a href="#1-redis" class="headerlink" title="1. redis"></a>1. redis</h3><p>Remote configuration:![image-20230403164112175](&#x2F;Users&#x2F;joshua&#x2F;Library&#x2F;Application Support&#x2F;typora-user-images&#x2F;image-20230403164112175.png)</p>
<h3 id="mysql"><a href="#mysql" class="headerlink" title="mysql"></a>mysql</h3><p>![image-20230403164158804](&#x2F;Users&#x2F;joshua&#x2F;Library&#x2F;Application Support&#x2F;typora-user-images&#x2F;image-20230403164158804.png)</p>
<p>![image-20230403164227851](&#x2F;Users&#x2F;joshua&#x2F;Library&#x2F;Application Support&#x2F;typora-user-images&#x2F;image-20230403164227851.png)</p>
<p><strong>JDBC</strong></p>
<p>Info:</p>
<p>Url:jdbc:mysql:&#x2F;&#x2F;47.98.63.250:3306&#x2F;mall_pms</p>
<p><em>use the server’s public ip addr</em></p>
<p>DBMS: MySQL (ver. 5.7.41)<br>Case sensitivity: plain&#x3D;exact, delimited&#x3D;exact<br>Driver: MySQL Connector&#x2F;J (ver. mysql-connector-java-8.0.25 (Revision: 08be9e9b4cba6aa115f9b27b215887af40b159e0), JDBC4.2)</p>
<p>Ping: 1 sec, 25 ms<br>SSL: yes</p>
<p><strong>nacos:</strong></p>
<p>nacos配置按照最新版本的springcloud alibaba来</p>
<p>不用使用bootstrap的配置文件来定位nacos</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-alibaba-nacos-config<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 排除 bootstrap, 未来版本 spring-cloud-alibaba 应该在 spring boot &gt;= 2.4.0 时将该依赖设置为 optional --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">exclusions</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">exclusion</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-bootstrap<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">exclusion</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">exclusions</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>



<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">cloud:</span></span><br><span class="line">    <span class="attr">nacos:</span></span><br><span class="line">      <span class="attr">config:</span></span><br><span class="line">        <span class="attr">server-addr:</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span><span class="string">:8848</span></span><br><span class="line">        <span class="attr">namespace:</span> <span class="string">2e40d043-66f9-4a92-acc1-af90e80b9204</span></span><br><span class="line">        <span class="attr">group:</span> <span class="string">dev</span></span><br><span class="line">  <span class="attr">config:</span></span><br><span class="line">    <span class="attr">import:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">optional:nacos:mall-coupon.yml?group=dev</span> <span class="comment"># 监听 DEFAULT_GROUP:mall-coupon.yml覆盖默认 group, 监听 group_01:test01.yml</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">optional:nacos:datasource.yml?group=dev&amp;refreshEnabled=false</span> <span class="comment"># 不开启动态刷新</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">optional:nacos:mybatis.yml?group=dev</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">optional:nacos:other.yml?group=dev</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><strong>容器重启数据丢失问题:</strong></p>
<p><strong>MySQL</strong> <strong>配置</strong> </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vi /mydata/mysql/conf/my.cnf </span><br></pre></td></tr></table></figure>



<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[client] </span><br><span class="line"></span><br><span class="line">default-character-set=utf8 </span><br><span class="line"></span><br><span class="line">[mysql] </span><br><span class="line"></span><br><span class="line">default-character-set=utf8 </span><br><span class="line"></span><br><span class="line">[mysqld] </span><br><span class="line"></span><br><span class="line">init_connect=<span class="string">&#x27;SET collation_connection = utf8_unicode_ci&#x27;</span> </span><br><span class="line"></span><br><span class="line">init_connect=<span class="string">&#x27;SET NAMES utf8&#x27;</span> </span><br><span class="line"></span><br><span class="line">character-set-server=utf8 </span><br><span class="line"></span><br><span class="line">collation-server=utf8_unicode_ci </span><br><span class="line"></span><br><span class="line">skip-character-set-client-handshake </span><br><span class="line"></span><br><span class="line">skip-name-resolve</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker run -p 3306:3306 \</span><br><span class="line">--name mysql \</span><br><span class="line">-v /mydata/mysql/log:/var/log/mysql \</span><br><span class="line">-v /mydata/mysql/data:/var/lib/mysql \</span><br><span class="line">-v /mydata/mysql/conf:/etc/mysql/my.cnf  \</span><br><span class="line">-e MYSQL_ROOT_PASSWORD=root \</span><br><span class="line">-d mysql:5.7 </span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><strong>通过容器的</strong> <strong>mysql</strong> <strong>命令行工具连接</strong> </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker <span class="built_in">exec</span> -it mysql mysql -uroot -proot</span><br></pre></td></tr></table></figure>



<p><strong>设置</strong> <strong>root</strong> <strong>远程访问</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">grant all privileges on *.* to <span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;%&#x27;</span> identified by <span class="string">&#x27;root&#x27;</span> with grant option; </span><br><span class="line"></span><br><span class="line">flush privileges;</span><br></pre></td></tr></table></figure>



<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker <span class="built_in">exec</span> -it mysql /bin/bash</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> /etc/mysql</span><br><span class="line"><span class="built_in">ls</span></span><br></pre></td></tr></table></figure>

<p>解决方法<br>了解上面的介绍后，解决它就很简单了。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker ps -a 找到我们上次运行的容器<span class="built_in">id</span></span><br><span class="line">docker restart <span class="built_in">id</span> 即可</span><br></pre></td></tr></table></figure>

<p>你没看错就这样就完了。</p>
<p>我这里创建了volume容器来对其进行持久化，位置在&#x2F;var&#x2F;lib&#x2F;docker&#x2F;volumes&#x2F;mysql-data&#x2F;_data，从mysql容器中mount在我的cloud server上的路径为my&#x2F;own</p>
]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>tech</tag>
      </tags>
  </entry>
  <entry>
    <title>travel</title>
    <url>/2023/05/04/travel/</url>
    <content><![CDATA[<p><strong>Glasgow</strong></p>
<p><img src="/../images/webs/UoG_bkgrnd_2021.jpg" alt="391667424236_.pic"></p>
<p><strong>Edinburgh</strong></p>
<p><img src="/../images/391667424236_.pic.jpg" alt="IMG_6792"></p>
<p><img src="/../images/IMG_6792.jpeg" alt="IMG_6792"></p>
<p><strong>Munich</strong></p>
<p><img src="/../images/webs/C4B30D74-1139-4945-B8F9-F6A74834CFCD_1_102_o.jpeg" alt="IMG_6792"></p>
<p><img src="/../images/IMG_8419.jpeg" alt="IMG_8419"></p>
<p><strong>Swiss</strong></p>
<p><img src="/../images/IMG_7862.jpeg" alt="IMG_7867"></p>
<p><img src="/../images/IMG_7867.jpeg" alt="IMG_7867"></p>
<p><strong>Paris</strong></p>
<p><img src="/../images/IMG_7410.jpeg" alt="IMG_7410"></p>
<p><img src="/../images/IMG_7577.jpeg" alt="IMG_7577"></p>
]]></content>
      <categories>
        <category>travel</category>
      </categories>
      <tags>
        <tag>travel</tag>
      </tags>
  </entry>
  <entry>
    <title>job seek</title>
    <url>/2023/05/26/job-seek/</url>
    <content><![CDATA[<ol>
<li>intern</li>
<li></li>
</ol>
]]></content>
  </entry>
  <entry>
    <title>Csharp</title>
    <url>/2023/04/15/Csharp/</url>
    <content><![CDATA[<h1 id="C-Get-started"><a href="#C-Get-started" class="headerlink" title="C# Get started"></a>C# Get started</h1><p>hello guys, follow me and let’s studying the C#.</p>
<ul>
<li>Commercial experience of software development in C#</li>
<li>Experience with source code version control such as Git</li>
<li>Experience with software development tools such as Visual Studio, JIRA, MSBuild, Jenkins</li>
<li>Experience with unit test frameworks such as NUnit or MSTest</li>
<li>Experience designing user interfaces. (Exposure to DevExpress an advantage).</li>
<li>Exposure to Iterative or Agile development methodologies (Scrum &#x2F; Kanban)</li>
<li>Understanding of OOP</li>
<li>Understanding of SOLID</li>
</ul>
<h2 id="Chapter1-Basic"><a href="#Chapter1-Basic" class="headerlink" title="Chapter1: Basic"></a>Chapter1: Basic</h2><ul>
<li><strong>using</strong>: The keyword is used to include the <strong>System</strong> namespace in the program. A program usually has multiple using <strong>statements</strong>.</li>
<li><strong>namespace</strong>: which contains different classes.</li>
<li><strong>class</strong>: declariation of the class.</li>
<li><strong>Main</strong>: Is the entry point for all C# programs. What does the class do when executed</li>
<li><strong>Formatted</strong> <strong>output aka interpolation</strong>：Console.WriteLine(<strong>$</strong>“Hello World! The counter is <strong>{counter}</strong>“); By using $ dollar symbol.</li>
</ul>
<hr>
<p><strong>Here are a few things to note:</strong></p>
<ul>
<li>C# is case sensitive.</li>
<li>All statements and expressions must start with a semicolon (;). The end.</li>
<li>Execution of the program starts with the Main method.</li>
<li>Unlike Java, the file name can be different from the name of the class.</li>
</ul>
<p><strong>Numbers and Math in C#: Int,float,double,decimal,string..</strong></p>
<figure class="highlight c#"><table><tr><td class="code"><pre><span class="line"><span class="built_in">int</span> minVal = <span class="built_in">int</span>.MinValue; <span class="comment">// -2147483648</span></span><br><span class="line"><span class="built_in">int</span> maxVal = <span class="built_in">int</span>.MaxValue; <span class="comment">// 2147483647</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">double</span> min = <span class="built_in">double</span>.MinValue <span class="comment">// -1.79769313486232E+308</span></span><br><span class="line"><span class="built_in">double</span> max = <span class="built_in">double</span>.MaxValue <span class="comment">// 1.79769313486232E+308</span></span><br><span class="line">  </span><br><span class="line"><span class="built_in">decimal</span> min = <span class="built_in">decimal</span>.MinValue; <span class="comment">//-79228162514264337593543950335</span></span><br><span class="line"><span class="built_in">decimal</span> max = <span class="built_in">decimal</span>.MaxValue; <span class="comment">// 79228162514264337593543950335</span></span><br></pre></td></tr></table></figure>

<p>The <code>decimal</code> type has a smaller range but greater precision than <code>double</code>. </p>
<p>The <code>M</code> suffix on the numbers is how you indicate that a constant should use the <code>decimal</code> type. For example:</p>
<figure class="highlight c#"><table><tr><td class="code"><pre><span class="line"><span class="built_in">decimal</span> c = <span class="number">1.0</span>M;</span><br><span class="line"><span class="built_in">decimal</span> d = <span class="number">3.0</span>M;</span><br><span class="line">Console.WriteLine(c / d);</span><br></pre></td></tr></table></figure>

<p><strong>Arrays</strong>:</p>
<figure class="highlight c#"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 定义一个整型数组，长度为3</span></span><br><span class="line"><span class="built_in">int</span>[] nums = <span class="keyword">new</span> <span class="built_in">int</span>[<span class="number">3</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">// 定义一个字符串数组，长度为4，初始化数组元素</span></span><br><span class="line"><span class="built_in">string</span>[] names = <span class="keyword">new</span> <span class="built_in">string</span>[] &#123; <span class="string">&quot;Tom&quot;</span>, <span class="string">&quot;Jerry&quot;</span>, <span class="string">&quot;Alice&quot;</span>, <span class="string">&quot;Bob&quot;</span> &#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用 var 关键字定义数组</span></span><br><span class="line"><span class="keyword">var</span> scores = <span class="keyword">new</span> <span class="built_in">int</span>[] &#123; <span class="number">90</span>, <span class="number">80</span>, <span class="number">95</span>, <span class="number">85</span>, <span class="number">70</span> &#125;;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>以上示例中，第一个定义创建了一个长度为 3 的整型数组，数组中的元素初始值为 0；第二个定义创建了一个长度为 4 的字符串数组，并初始化了每个元素的值；第三个定义使用 var 关键字根据初始化值推断出数组的类型，并创建了一个长度为 5 的整型数组</p>
<p>　<strong>Common Math function</strong></p>
<ul>
<li>Math.Abs: Returns the absolute value of a number.</li>
<li>Math.Ceiling: Rounds up a number and returns the smallest integer greater than or equal to that number.</li>
<li>Math.Floor: Rounds down a number and returns the largest integer less than or equal to the number.</li>
<li>Math.Max: Returns the maximum of two numbers.</li>
<li>Math.Min: Returns the minimum of two numbers.</li>
<li>Math.Pow: Returns the specified power of a number.</li>
<li>Math.Round: Round to the nearest whole number or number of specified decimal places.</li>
<li>Math.Sqrt: Returns the square root of a number.</li>
<li>Math.Log: Returns the natural log base e of a number.</li>
<li>Math.Exp: Returns e to the specified power.</li>
<li>Math.Truncate: Truncates a number into its integer part.</li>
</ul>
<h2 id="Chapter2-if-x2F-else-x2F-loop"><a href="#Chapter2-if-x2F-else-x2F-loop" class="headerlink" title="Chapter2. if&#x2F;else&#x2F;loop"></a>Chapter2. if&#x2F;else&#x2F;loop</h2><h3 id="1-if-statement"><a href="#1-if-statement" class="headerlink" title="1. if statement"></a>1. if statement</h3><p><strong>bool</strong> carries true and false. which is different from java</p>
<figure class="highlight c#"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(condition)&#123;</span><br><span class="line">execution <span class="keyword">when</span> condition <span class="keyword">is</span> <span class="literal">true</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">execution <span class="keyword">when</span> condition <span class="keyword">is</span> <span class="literal">false</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>Logical AND Operator:<strong>&amp;&amp;</strong> </p>
<p>Logical OR Operator:<strong>||</strong> </p>
<p>Logical NOT Operator: <strong>!</strong></p>
<p>Equality Operator: <strong>&#x3D;&#x3D;</strong></p>
<h3 id="2-loop"><a href="#2-loop" class="headerlink" title="2. loop"></a>2. loop</h3><ol>
<li><p><strong>while loop</strong></p>
<p>same with java</p>
<figure class="highlight c#"><table><tr><td class="code"><pre><span class="line"><span class="built_in">int</span> counter = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> (counter &lt; <span class="number">10</span>)</span><br><span class="line">&#123;</span><br><span class="line">  Console.WriteLine(<span class="string">$&quot;Hello World! The counter is <span class="subst">&#123;counter&#125;</span>&quot;</span>);</span><br><span class="line">  counter++;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>


</li>
<li><p><strong>do while</strong></p>
<p>same with java</p>
<figure class="highlight c#"><table><tr><td class="code"><pre><span class="line"><span class="built_in">int</span> counter = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">&#123;</span><br><span class="line">  Console.WriteLine(<span class="string">$&quot;Hello World! The counter is <span class="subst">&#123;counter&#125;</span>&quot;</span>);</span><br><span class="line">  counter++;</span><br><span class="line">&#125; <span class="keyword">while</span> (counter &lt; <span class="number">10</span>);</span><br></pre></td></tr></table></figure>


</li>
<li><p><strong>for loop</strong></p>
</li>
</ol>
<p>​	Same with java</p>
<figure class="highlight c#"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="built_in">int</span> counter = <span class="number">0</span>; counter &lt; <span class="number">10</span>; counter++)</span><br><span class="line">&#123;</span><br><span class="line">  Console.WriteLine(<span class="string">$&quot;Hello World! The counter is <span class="subst">&#123;counter&#125;</span>&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>(for initializer;for condition;for iterator)</strong> same with java</p>
<p><strong>Nested for loop</strong> which can be used to create matrix, e.g:</p>
<figure class="highlight c#"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="built_in">int</span> row = <span class="number">1</span>; row &lt; <span class="number">11</span>; row++)</span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">for</span> (<span class="built_in">char</span> column = <span class="string">&#x27;a&#x27;</span>; column &lt; <span class="string">&#x27;k&#x27;</span>; column++)</span><br><span class="line">  &#123;</span><br><span class="line">    Console.WriteLine(<span class="string">$&quot;The cell is (<span class="subst">&#123;row&#125;</span>, <span class="subst">&#123;column&#125;</span>)&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h2 id="Chapter3-Lists-collection"><a href="#Chapter3-Lists-collection" class="headerlink" title="Chapter3. Lists collection"></a>Chapter3. Lists collection</h2><p>Example:</p>
<figure class="highlight c#"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> names = <span class="keyword">new</span> List&lt;<span class="built_in">string</span>&gt; &#123; <span class="string">&quot;Joshua&quot;</span>, <span class="string">&quot;Ana&quot;</span>, <span class="string">&quot;Felipe&quot;</span> &#125;;</span><br><span class="line"><span class="keyword">foreach</span> (<span class="keyword">var</span> name <span class="keyword">in</span> names)</span><br><span class="line">&#123;</span><br><span class="line">  Console.WriteLine(<span class="string">$&quot;Hello <span class="subst">&#123;name.ToUpper()&#125;</span>!&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>You specify the type of the elements between the angle brackets, &lt;&gt;.</li>
<li>One important aspect of this <a href="https://learn.microsoft.com/en-us/dotnet/api/system.collections.generic.list-1">List</a> type is that it can grow or shrink, enabling you to add or remove elements.</li>
</ul>
<figure class="highlight c#"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> names = <span class="keyword">new</span> List&lt;<span class="built_in">string</span>&gt; &#123; <span class="string">&quot;Joshua&quot;</span>, <span class="string">&quot;Ana&quot;</span>, <span class="string">&quot;Felipe&quot;</span> &#125;;</span><br><span class="line">Console.WriteLine();</span><br><span class="line">names.Add(<span class="string">&quot;Joshua&quot;</span>);</span><br><span class="line">names.Add(<span class="string">&quot;Bill&quot;</span>);</span><br><span class="line">names.RemoveAll(name=&gt;name==<span class="string">&quot;Joshua&quot;</span>);</span><br><span class="line"><span class="keyword">foreach</span> (<span class="keyword">var</span> name <span class="keyword">in</span> names)</span><br><span class="line">&#123;</span><br><span class="line">  Console.WriteLine(<span class="string">$&quot;Hello <span class="subst">&#123;name.ToUpper()&#125;</span>!&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>RemoveAll method is different from that in Java. It is provided by list<T></T></p>
<figure class="highlight c#"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="built_in">int</span> <span class="title">RemoveAll</span>(<span class="params">Predicate&lt;T&gt; match</span>)</span>;</span><br></pre></td></tr></table></figure>

<ul>
<li><p>list<T> allows you reference the individual items by <strong>index</strong> directly which is different from java&#x3D;&gt;”list.get()”.</T></p>
</li>
<li><p>list<T> also provides <strong>Count</strong> method which allows you to count the numbers of elements in the list. <strong>xxx.Count</strong></T></p>
</li>
<li><p>list<T> provides you a IndexOf method which allows you to find the index of the specific element.</T></p>
</li>
<li><p>The items in your list can be sorted as well. The <a href="https://learn.microsoft.com/en-us/dotnet/api/system.collections.generic.list-1.sort">Sort</a> method sorts all the items in the list in their normal order (alphabetically for strings). Add this code and run again: Quite similar with the Collection.sort();</p>
</li>
</ul>
<figure class="highlight c#"><table><tr><td class="code"><pre><span class="line"><span class="comment">//print fibonacci numbers</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> fibonacciNumbers = <span class="keyword">new</span> List&lt;<span class="built_in">int</span>&gt; &#123;<span class="number">1</span>, <span class="number">1</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> (fibonacciNumbers.Count &lt; <span class="number">20</span>)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">var</span> previous = fibonacciNumbers[fibonacciNumbers.Count - <span class="number">1</span>];</span><br><span class="line">    <span class="keyword">var</span> previous2 = fibonacciNumbers[fibonacciNumbers.Count - <span class="number">2</span>];</span><br><span class="line"></span><br><span class="line">    fibonacciNumbers.Add(previous + previous2);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">foreach</span>(<span class="keyword">var</span> item <span class="keyword">in</span> fibonacciNumbers)</span><br><span class="line">&#123;</span><br><span class="line">    Console.WriteLine(item);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h2 id="Fundamentals"><a href="#Fundamentals" class="headerlink" title="Fundamentals."></a>Fundamentals.</h2><h3 id="1-Program-Structure"><a href="#1-Program-Structure" class="headerlink" title="1. Program Structure."></a>1. Program Structure.</h3><h4 id="1-Overview"><a href="#1-Overview" class="headerlink" title="1. Overview"></a>1. Overview</h4><figure class="highlight c#"><table><tr><td class="code"><pre><span class="line"><span class="comment">// A skeleton of a C# program</span></span><br><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Your program starts here:</span></span><br><span class="line">Console.WriteLine(<span class="string">&quot;Hello world!&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">YourNamespace</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">YourClass</span></span><br><span class="line">    &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">struct</span> YourStruct</span><br><span class="line">    &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">interface</span> <span class="title">IYourInterface</span></span><br><span class="line">    &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="built_in">delegate</span> <span class="built_in">int</span> <span class="title">YourDelegate</span>()</span>;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">enum</span> YourEnum</span><br><span class="line">    &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">namespace</span> <span class="title">YourNestedNamespace</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">struct</span> YourStruct</span><br><span class="line">        &#123;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>The preceding example uses <em>top-level statements</em> for the program’s entry point. This feature was added in C# 9. Prior to C# 9, the entry point was a static method named <code>Main</code>, as shown in the following example:</p>
<figure class="highlight c#"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">// A skeleton of a C# program</span></span><br><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">namespace</span> <span class="title">YourNamespace</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">YourClass</span></span><br><span class="line">    &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">struct</span> YourStruct</span><br><span class="line">    &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">interface</span> <span class="title">IYourInterface</span></span><br><span class="line">    &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="built_in">delegate</span> <span class="built_in">int</span> <span class="title">YourDelegate</span>()</span>;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">enum</span> YourEnum</span><br><span class="line">    &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">namespace</span> <span class="title">YourNestedNamespace</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">struct</span> YourStruct</span><br><span class="line">        &#123;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] args</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//Your program starts here...</span></span><br><span class="line">            Console.WriteLine(<span class="string">&quot;Hello world!&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>Prefix of the c# file is .cs.</strong></p>
<h4 id="2-Main-method"><a href="#2-Main-method" class="headerlink" title="2. Main method"></a>2. Main method</h4><p>The <code>Main</code> method is the entry point of a C# application. (Libraries and services do not require a <code>Main</code> method as an entry point.) When the application is started, the <code>Main</code> method is the first method that is invoked.</p>
<p>There can only be one entry point in a C# program. If you have more than one class that has a <code>Main</code> method, you must compile your program with the <strong>StartupObject</strong> compiler option to specify which <code>Main</code> method to use as the entry point. For more information, see <a href="https://learn.microsoft.com/en-us/dotnet/csharp/language-reference/compiler-options/advanced#mainentrypoint-or-startupobject"><strong>StartupObject</strong> (C# Compiler Options)</a>.</p>
<p>Starting in C# 9, you can omit the <code>Main</code> method, and write C# statements as if they were in the <code>Main</code> method (<strong>this is similar with Python</strong>), as in the following example:</p>
<figure class="highlight c#"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"></span><br><span class="line">StringBuilder builder = <span class="keyword">new</span>();</span><br><span class="line">builder.AppendLine(<span class="string">&quot;Hello&quot;</span>);</span><br><span class="line">builder.AppendLine(<span class="string">&quot;World!&quot;</span>);</span><br><span class="line"></span><br><span class="line">Console.WriteLine(builder.ToString());</span><br></pre></td></tr></table></figure>

<p>For information about how to write application code with an implicit entry point method, see <a href="https://learn.microsoft.com/en-us/dotnet/csharp/fundamentals/program-structure/top-level-statements">Top-level statements</a>.</p>
<ul>
<li>The <code>Main</code> method is the entry point of an executable program; it is where the program control starts and ends.</li>
<li><code>Main</code> is declared inside a class or struct. <code>Main</code> must be <a href="https://learn.microsoft.com/en-us/dotnet/csharp/language-reference/keywords/static"><code>static</code></a> and it need not be <a href="https://learn.microsoft.com/en-us/dotnet/csharp/language-reference/keywords/public"><code>public</code></a>. (In the earlier example, it receives the default access of <a href="https://learn.microsoft.com/en-us/dotnet/csharp/language-reference/keywords/private"><code>private</code></a>.) The enclosing class or struct is not required to be static.</li>
<li><code>Main</code> can either have a <code>void</code>, <code>int</code>, <code>Task</code>, or <code>Task&lt;int&gt;</code> return type.</li>
<li>If and only if <code>Main</code> returns a <code>Task</code> or <code>Task&lt;int&gt;</code>, the declaration of <code>Main</code> may include the <a href="https://learn.microsoft.com/en-us/dotnet/csharp/language-reference/keywords/async"><code>async</code></a> modifier. This specifically excludes an <code>async void Main</code> method.</li>
<li>The <code>Main</code> method can be declared with or without a <code>string[]</code> parameter that contains command-line arguments. When using Visual Studio to create Windows applications, you can add the parameter manually or else use the <a href="https://learn.microsoft.com/en-us/dotnet/api/system.environment.getcommandlineargs#system-environment-getcommandlineargs">GetCommandLineArgs()</a> method to obtain the command-line arguments. Parameters are read as zero-indexed command-line arguments. Unlike C and C++, the name of the program is not treated as the first command-line argument in the <code>args</code> array, but it is the first element of the <a href="https://learn.microsoft.com/en-us/dotnet/api/system.environment.getcommandlineargs#system-environment-getcommandlineargs">GetCommandLineArgs()</a> method.</li>
</ul>
<p><strong>Valid main declariation:</strong></p>
<figure class="highlight c#"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>()</span> &#123; &#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="built_in">int</span> <span class="title">Main</span>()</span> &#123; &#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] args</span>)</span> &#123; &#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="built_in">int</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] args</span>)</span> &#123; &#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">async</span> Task <span class="title">Main</span>()</span> &#123; &#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">async</span> Task&lt;<span class="built_in">int</span>&gt; <span class="title">Main</span>()</span> &#123; &#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">async</span> Task <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] args</span>)</span> &#123; &#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">async</span> Task&lt;<span class="built_in">int</span>&gt; <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] args</span>)</span> &#123; &#125;</span><br></pre></td></tr></table></figure>

<p>The preceding examples all use the <code>public</code> accessor modifier. That’s typical, but not required. (which means they can be <strong>private</strong>).</p>
<p>The addition of <code>async</code> and <code>Task</code>, <code>Task&lt;int&gt;</code> return types simplifies program code when console applications need to start and <code>await</code> asynchronous operations in <code>Main</code></p>
<p><strong>Main() return values:</strong></p>
<p>You can return an <code>int</code> from the <code>Main</code> method by defining the method in one of the following ways:</p>
<table>
<thead>
<tr>
<th align="left"><code>Main</code> method code</th>
<th align="left"><code>Main</code> signature</th>
</tr>
</thead>
<tbody><tr>
<td align="left">No use of <code>args</code> or <code>await</code></td>
<td align="left"><code>static int Main()</code></td>
</tr>
<tr>
<td align="left">Uses <code>args</code>, no use of <code>await</code></td>
<td align="left"><code>static int Main(string[] args)</code></td>
</tr>
<tr>
<td align="left">No use of <code>args</code>, uses <code>await</code></td>
<td align="left"><code>static async Task&lt;int&gt; Main()</code></td>
</tr>
<tr>
<td align="left">Uses <code>args</code> and <code>await</code></td>
<td align="left"><code>static async Task&lt;int&gt; Main(string[] args)</code></td>
</tr>
</tbody></table>
<p>If the return value from <code>Main</code> is not used, returning <code>void</code> or <code>Task</code> allows for slightly simpler code.</p>
<table>
<thead>
<tr>
<th align="left"><code>Main</code> method code</th>
<th align="left"><code>Main</code> signature</th>
</tr>
</thead>
<tbody><tr>
<td align="left">No use of <code>args</code> or <code>await</code></td>
<td align="left"><code>static void Main()</code></td>
</tr>
<tr>
<td align="left">Uses <code>args</code>, no use of <code>await</code></td>
<td align="left"><code>static void Main(string[] args)</code></td>
</tr>
<tr>
<td align="left">No use of <code>args</code>, uses <code>await</code></td>
<td align="left"><code>static async Task Main()</code></td>
</tr>
<tr>
<td align="left">Uses <code>args</code> and <code>await</code></td>
<td align="left"><code>static async Task Main(string[] args)</code></td>
</tr>
</tbody></table>
<p>However, returning <code>int</code> or <code>Task&lt;int&gt;</code> enables the program to communicate status information to other programs or scripts that invoke the executable file.</p>
<p>The following example shows how the exit code for the process can be accessed.</p>
<p>This example uses <a href="https://learn.microsoft.com/en-us/dotnet/core/introduction">.NET Core</a> command-line tools. If you are unfamiliar with .NET Core command-line tools, you can learn about them in this <a href="https://learn.microsoft.com/en-us/dotnet/core/tutorials/with-visual-studio-code">get-started article</a>.</p>
<p>Create a new application by running <code>dotnet new console</code>. Modify the <code>Main</code> method in <em>Program.cs</em> as follows:</p>
<figure class="highlight c#"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Save this program as MainReturnValTest.cs.</span></span><br><span class="line"><span class="keyword">class</span> <span class="title">MainReturnValTest</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">static</span> <span class="built_in">int</span> <span class="title">Main</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//...</span></span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>When a program is executed in Windows OS, <strong>any value returned</strong> from the <code>Main</code> function is stored in an <strong>environment variable</strong>. This environment variable can be retrieved using <code>ERRORLEVEL</code> from a batch file, or <code>$LastExitCode</code> from PowerShell. </p>
<p>You can build the application using the <a href="https://learn.microsoft.com/en-us/dotnet/core/tools/dotnet">dotnet CLI</a> <code>dotnet build</code> command.</p>
<p>Next, create a PowerShell script to run the application and display the result. Paste the following code into a text file and save it as <code>test.ps1</code> in the folder that contains the project. Run the PowerShell script by typing <code>test.ps1</code> at the PowerShell prompt.</p>
<p>Because the code returns zero, the batch file will report success. However, if you change MainReturnValTest.cs to return a non-zero value and then recompile the program, subsequent execution of the PowerShell script will report failure.</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">dotnet run</span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$LastExitCode</span> <span class="operator">-eq</span> <span class="number">0</span>) &#123;</span><br><span class="line">    <span class="built_in">Write-Host</span> <span class="string">&quot;Execution succeeded&quot;</span></span><br><span class="line">&#125; <span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">Write-Host</span> <span class="string">&quot;Execution Failed&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">Write-Host</span> <span class="string">&quot;Return value = &quot;</span> <span class="variable">$LastExitCode</span></span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Execution succeeded</span><br><span class="line">Return value = 0</span><br></pre></td></tr></table></figure>

<p><strong>Async Main return values</strong></p>
<p>When you declare an <code>async</code> return value for <code>Main</code>, the compiler generates the boilerplate code for calling asynchronous methods in <code>Main</code>. If you don’t specify the <code>async</code> keyword, you need to write that code yourself, as shown in the following example. The code in the example ensures that your program runs until the asynchronous operation is completed:</p>
<figure class="highlight c#"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    AsyncConsoleWork().GetAwaiter().GetResult();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">async</span> Task&lt;<span class="built_in">int</span>&gt; <span class="title">AsyncConsoleWork</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// Main body here</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>This boilerplate code can be replaced by:</p>
<figure class="highlight c#"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">async</span> Task&lt;<span class="built_in">int</span>&gt; <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] args</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">await</span> AsyncConsoleWork();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>An advantage of declaring <code>Main</code> as <code>async</code> is that the compiler always generates the correct code.	</p>
<p>When the application entry point returns a <code>Task</code> or <code>Task&lt;int&gt;</code>, the compiler generates a new entry point that calls the entry point method declared in the application code. Assuming that this entry point is called <code>$GeneratedMain</code>, the compiler generates the following code for these entry points:</p>
<ul>
<li><code>static Task Main()</code> results in the compiler emitting the equivalent of <code>private static void $GeneratedMain() =&gt; Main().GetAwaiter().GetResult();</code></li>
<li><code>static Task Main(string[])</code> results in the compiler emitting the equivalent of <code>private static void $GeneratedMain(string[] args) =&gt; Main(args).GetAwaiter().GetResult();</code></li>
<li><code>static Task&lt;int&gt; Main()</code> results in the compiler emitting the equivalent of <code>private static int $GeneratedMain() =&gt; Main().GetAwaiter().GetResult();</code></li>
<li><code>static Task&lt;int&gt; Main(string[])</code> results in the compiler emitting the equivalent of <code>private static int $GeneratedMain(string[] args) =&gt; Main(args).GetAwaiter().GetResult();</code></li>
</ul>
<p><strong>Noted: If the examples used <code>async</code> modifier on the <code>Main</code> method, the compiler would generate the same code.</strong></p>
<p><strong>Command-Line Arguments</strong></p>
<p>You can send arguments to the <code>Main</code> method by defining the method in one of the following ways:</p>
<table>
<thead>
<tr>
<th align="left"><code>Main</code> method code</th>
<th align="left"><code>Main</code> signature</th>
</tr>
</thead>
<tbody><tr>
<td align="left">No return value, no use of <code>await</code></td>
<td align="left"><code>static void Main(string[] args)</code></td>
</tr>
<tr>
<td align="left">Return value, no use of <code>await</code></td>
<td align="left"><code>static int Main(string[] args)</code></td>
</tr>
<tr>
<td align="left">No return value, uses <code>await</code></td>
<td align="left"><code>static async Task Main(string[] args)</code></td>
</tr>
<tr>
<td align="left">Return value, uses <code>await</code></td>
<td align="left"><code>static async Task&lt;int&gt; Main(string[] args)</code></td>
</tr>
</tbody></table>
<p>If the arguments are not used, you can omit <code>args</code> from the method signature for slightly simpler code:</p>
<table>
<thead>
<tr>
<th align="left"><code>Main</code> method code</th>
<th align="left"><code>Main</code> signature</th>
</tr>
</thead>
<tbody><tr>
<td align="left">No return value, no use of <code>await</code></td>
<td align="left"><code>static void Main()</code></td>
</tr>
<tr>
<td align="left">Return value, no use of <code>await</code></td>
<td align="left"><code>static int Main()</code></td>
</tr>
<tr>
<td align="left">No return value, uses <code>await</code></td>
<td align="left"><code>static async Task Main()</code></td>
</tr>
<tr>
<td align="left">Return value, uses <code>await</code></td>
<td align="left"><code>static async Task&lt;int&gt; Main()</code></td>
</tr>
</tbody></table>
<p> Note</p>
<p>You can also use <a href="https://learn.microsoft.com/en-us/dotnet/api/system.environment.commandline">Environment.CommandLine</a> or <a href="https://learn.microsoft.com/en-us/dotnet/api/system.environment.getcommandlineargs">Environment.GetCommandLineArgs</a> to access the command-line arguments from any point in a console or Windows Forms application. To enable command-line arguments in the <code>Main</code> method signature in a Windows Forms application, you must manually modify the signature of <code>Main</code>. The code generated by the Windows Forms designer creates <code>Main</code> without an input parameter.</p>
<p>The parameter of the <code>Main</code> method is a <a href="https://learn.microsoft.com/en-us/dotnet/api/system.string">String</a> array that represents the command-line arguments. Usually you determine whether arguments exist by testing the <code>Length</code> property, for example:</p>
<p>C#Copy</p>
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (args.Length == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">    System.Console.WriteLine(<span class="string">&quot;Please enter a numeric argument.&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p> Tip</p>
<p>The <code>args</code> array can’t be null. So, it’s safe to access the <code>Length</code> property without null checking.</p>
<p>You can also convert the string arguments to numeric types by using the <a href="https://learn.microsoft.com/en-us/dotnet/api/system.convert">Convert</a> class or the <code>Parse</code> method. For example, the following statement converts the <code>string</code> to a <code>long</code> number by using the <a href="https://learn.microsoft.com/en-us/dotnet/api/system.int64.parse">Parse</a> method:</p>
<p>C#Copy</p>
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="built_in">long</span> num = Int64.Parse(args[<span class="number">0</span>]);</span><br></pre></td></tr></table></figure>

<p>It is also possible to use the C# type <code>long</code>, which aliases <code>Int64</code>:</p>
<p>C#Copy</p>
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="built_in">long</span> num = <span class="built_in">long</span>.Parse(args[<span class="number">0</span>]);</span><br></pre></td></tr></table></figure>

<p>You can also use the <code>Convert</code> class method <code>ToInt64</code> to do the same thing:</p>
<p>C#Copy</p>
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="built_in">long</span> num = Convert.ToInt64(s);</span><br></pre></td></tr></table></figure>

<p>For more information, see <a href="https://learn.microsoft.com/en-us/dotnet/api/system.int64.parse">Parse</a> and <a href="https://learn.microsoft.com/en-us/dotnet/api/system.convert">Convert</a>.</p>
<p>The following example shows how to use command-line arguments in a console application. The application takes one argument at run time, converts the argument to an integer, and calculates the factorial of the number. If no arguments are supplied, the application issues a message that explains the correct usage of the program.</p>
<p>To compile and run the application from a command prompt, follow these steps:</p>
<ol>
<li><p>Paste the following code into any text editor, and then save the file as a text file with the name <em>Factorial.cs</em>.</p>
<p>C#Copy</p>
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Functions</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="built_in">long</span> <span class="title">Factorial</span>(<span class="params"><span class="built_in">int</span> n</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// Test for invalid input.</span></span><br><span class="line">        <span class="keyword">if</span> ((n &lt; <span class="number">0</span>) || (n &gt; <span class="number">20</span>))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Calculate the factorial iteratively rather than recursively.</span></span><br><span class="line">        <span class="built_in">long</span> tempResult = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            tempResult *= i;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> tempResult;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title">MainClass</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">static</span> <span class="built_in">int</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] args</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// Test if input arguments were supplied.</span></span><br><span class="line">        <span class="keyword">if</span> (args.Length == <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;Please enter a numeric argument.&quot;</span>);</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;Usage: Factorial &lt;num&gt;&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Try to convert the input arguments to numbers. This will throw</span></span><br><span class="line">        <span class="comment">// an exception if the argument is not a number.</span></span><br><span class="line">        <span class="comment">// num = int.Parse(args[0]);</span></span><br><span class="line">        <span class="built_in">int</span> num;</span><br><span class="line">        <span class="built_in">bool</span> test = <span class="built_in">int</span>.TryParse(args[<span class="number">0</span>], <span class="keyword">out</span> num);</span><br><span class="line">        <span class="keyword">if</span> (!test)</span><br><span class="line">        &#123;</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;Please enter a numeric argument.&quot;</span>);</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;Usage: Factorial &lt;num&gt;&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Calculate factorial.</span></span><br><span class="line">        <span class="built_in">long</span> result = Functions.Factorial(num);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Print result.</span></span><br><span class="line">        <span class="keyword">if</span> (result == <span class="number">-1</span>)</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;Input must be &gt;= 0 and &lt;= 20.&quot;</span>);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            Console.WriteLine(<span class="string">$&quot;The Factorial of <span class="subst">&#123;num&#125;</span> is <span class="subst">&#123;result&#125;</span>.&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// If 3 is entered on command line, the</span></span><br><span class="line"><span class="comment">// output reads: The factorial of 3 is 6.</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>From the <strong>Start</strong> screen or <strong>Start</strong> menu, open a Visual Studio <strong>Developer Command Prompt</strong> window, and then navigate to the folder that contains the file that you created.</p>
</li>
<li><p>Enter the following command to compile the application.</p>
<p><code>dotnet build</code></p>
<p>If your application has no compilation errors, an executable file that’s named <em>Factorial.exe</em> is created.</p>
</li>
<li><p>Enter the following command to calculate the factorial of 3:</p>
<p><code>dotnet run -- 3</code></p>
</li>
<li><p>The command produces this output: <code>The factorial of 3 is 6.</code></p>
</li>
</ol>
<p> Note</p>
<p>When running an application in Visual Studio, you can specify command-line arguments in the <a href="https://learn.microsoft.com/en-us/visualstudio/ide/reference/debug-page-project-designer">Debug Page, Project Designer</a>.</p>
<h4 id="3-Top-level-statements"><a href="#3-Top-level-statements" class="headerlink" title="3. Top-level statements"></a>3. Top-level statements</h4>]]></content>
      <categories>
        <category>C#</category>
      </categories>
      <tags>
        <tag>tech</tag>
      </tags>
  </entry>
  <entry>
    <title>java studying</title>
    <url>/2023/04/01/java/</url>
    <content><![CDATA[<h1 id="Java"><a href="#Java" class="headerlink" title="Java"></a>Java</h1><h2 id="1-Comparable-vs-comparator"><a href="#1-Comparable-vs-comparator" class="headerlink" title="(1).Comparable vs comparator"></a>(1).Comparable vs comparator</h2><ul>
<li><h4 id="第一，字面含义不同"><a href="#第一，字面含义不同" class="headerlink" title="第一，字面含义不同"></a>第一，字面含义不同</h4></li>
</ul>
<p>我们先从二者的字面含义来理解它，Comparable翻译为中文是“比较”的意思，而Comparator是“比较器”的意思。Comparable是以-able结尾的，表示它自身具备着某种能力，而Comparator是以-or结尾，表示自身是比较的参与者，这是从字面含义先来理解二者的不同。</p>
<ul>
<li><h4 id="第二，用法不同"><a href="#第二，用法不同" class="headerlink" title="第二，用法不同"></a>第二，用法不同</h4></li>
</ul>
<p>二者都是顶级的接口，但拥有的方法和用法是不同的，下面我们分别来看。</p>
<h3 id="Comparable用法"><a href="#Comparable用法" class="headerlink" title="Comparable用法"></a>Comparable用法</h3><p>Comparable接口只有一个方法compareTo，实现Comparable接口并重写compareTo方法就可以实现某个类的排序了，它支持Collections.sort和Arrays.sort的排序。 </p>
<p>在我们没有使用Comparable时，程序的执行是这样的</p>
<p><img src="/../images/v2-227ef5bbf20b532f1bb342573b7ebef5_1440w.png" alt="v2-227ef5bbf20b532f1bb342573b7ebef5_1440w"></p>
<p><img src="/../images/v2-6c8292dea0e393ceffffabc72cdae6e3_1440w.png" alt="v2-6c8292dea0e393ceffffabc72cdae6e3_1440w"></p>
<p>从上图可以看出，当自定义类Person没有实现Comparable时，List集合是没有排序的，只能以元素的插入顺序作为输出的顺序。 </p>
<p>然而这个时候，老板有一个需求：需要根据Person对象的年龄age属性进行倒序，也就是根据age属性从大到小进行排序，这个时候就可以请出，我们本文的主角：Comparable出场了。 </p>
<p>Comparable的使用是在自定义对象的类中实现Comparable接口，并重写compareTo方法来实现自定义排序规则的，具体实现代码如下：</p>
<p><img src="/../images/v2-1cbf6d14a01aa2489f5a8a5a3e80b4d2_1440w.png" alt="v2-1cbf6d14a01aa2489f5a8a5a3e80b4d2_1440w"></p>
<p>程序的执行结果如下图所示：</p>
<p><img src="/../images/v2-724747d21c4f51c7b37ab98df34f5db7_1440w.png" alt="v2-724747d21c4f51c7b37ab98df34f5db7_1440w"></p>
<h4 id="compareTo排序方法说明"><a href="#compareTo排序方法说明" class="headerlink" title="compareTo排序方法说明"></a>compareTo排序方法说明</h4><p>compareTo方法接收的参数p是要对比的对象，排序规则是用当前对象和要对比的对象进行比较，然后返回一个int类型的值。正序从小到大的排序规则是：使用当前的对象值减去要对比对象的值；而倒序从大到小的排序规则刚好相反：是用对比对象的值减去当前对象的值。 </p>
<p>注意事项：如果自定义对象没有实现Comparable接口，那么它是不能使用Collections.sort方法进行排序的</p>
<h3 id="Comparator用法"><a href="#Comparator用法" class="headerlink" title="Comparator用法"></a>Comparator用法</h3><p>Comparator和Comparable的排序方法是不同的，Comparable排序的方法是compareTo，而Comparator排序的方法是compare，具体实现代码如下：</p>
<p><img src="/../images/v2-f742089317861a254770a57c2a41f0ee_1440w.png" alt="v2-f742089317861a254770a57c2a41f0ee_1440w"></p>
<p>程序的执行结果如下图所示：</p>
<p><img src="/../images/v2-dd7e3161f5eb2d2055f73a9796cf81ff_1440w.png" alt="v2-dd7e3161f5eb2d2055f73a9796cf81ff_1440w"></p>
<p>匿名类:</p>
<p><img src="/../images/v2-53099add8da4513a445681f7f835d05a_1440w.png" alt="v2-53099add8da4513a445681f7f835d05a_1440w"></p>
<h3 id="第三，使用场景不同"><a href="#第三，使用场景不同" class="headerlink" title="第三，使用场景不同"></a>第三，使用场景不同</h3><p>通过上面示例的实现代码我们可以看出，使用Comparable必须要修改原有的类，也就是你要排序那个类，就要在那个中实现Comparable接口并重写compareTo方法，所以Comparable更像是“对内”进行排序的接口。 </p>
<p>而Comparator的使用则不相同，Comparator无需修改原有类。也就是在最极端情况下，即使Person类是第三方提供的，我们依然可以通过创建新的自定义比较器Comparator，来实现对第三方类Person的排序功能。也就是说通过Comparator接口可以实现和原有类的解耦，在不修改原有类的情况下实现排序功能，所以Comparator可以看作是“对外”提供排序的接口。</p>
<h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>Comparable和Comparator都是用来实现元素排序的，它们二者的区别如下：</p>
<ul>
<li>Comparable是“比较”的意思，而Comparator是“比较器”的意思；</li>
<li>Comparable是通过重写compareTo方法实现排序的，而Comparator是通过重写compare方法实现排序的；</li>
<li>Comparable必须由自定义类内部实现排序方法，而Comparator是外部定义并实现排序的。</li>
</ul>
<p>所以用一句话总结二者的区别：Comparable可以看作是“对内”进行排序接口，而Comparator是“对外”进行排序的接口。</p>
<h3 id="2-List-list-x3D-new-ArrayList-lt-gt"><a href="#2-List-list-x3D-new-ArrayList-lt-gt" class="headerlink" title="(2).List list &#x3D; new ArrayList&lt;&gt;();"></a>(2).List<Integer> list &#x3D; new ArrayList&lt;&gt;();</Integer></h3><p>在Java中，List是一种接口类型，它定义了一组用于操作列表（List）数据结构的方法。ArrayList是List接口的一个实现类，它使用数组来实现List接口中定义的方法。在这里，使用List<Integer> list &#x3D; new ArrayList&lt;&gt;();这样的语法是因为：</Integer></p>
<ol>
<li>泛型：List<Integer>中的Integer表示这个List只能存储Integer类型的元素。这是Java泛型的一种应用，它可以在编译时检查类型错误，避免在运行时出现类型不匹配的错误。</Integer></li>
<li>多态性：使用List接口作为类型声明，而不是具体的ArrayList类，可以让代码更具有可扩展性。这样，如果需要更改实现方式，只需要更改赋值右侧的实现类，而不需要更改其余代码。</li>
<li>简洁性：使用diamond运算符（&lt;&gt;）可以让代码更简洁。在Java 7之前，需要写成List<Integer> list &#x3D; new ArrayList<Integer>();这样的形式。</Integer></Integer></li>
</ol>
<h3 id="Collection-sort"><a href="#Collection-sort" class="headerlink" title="Collection.sort()"></a>Collection.sort()</h3><p>如果要给自定义泛型的集合排序，需要确保该泛型类实现了 <code>Comparable</code> 接口，并重写 <code>compareTo</code> 方法。 <code>compareTo</code> 方法用于比较两个对象的大小关系，以便于排序。<strong>或者</strong>通过实现<code>Comparator</code>接口来给自定义范型的集合排序。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//1</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Person</span> <span class="keyword">implements</span> <span class="title class_">Comparable</span>&lt;Person&gt; &#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> age;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// constructor, getter and setter methods</span></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">compareTo</span><span class="params">(Person other)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> Integer.compare(<span class="built_in">this</span>.age, other.age);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//2</span></span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Person</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> age;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Person</span><span class="params">(String name, <span class="type">int</span> age)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">        <span class="built_in">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getName</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getAge</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> age;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">AgeComparator</span> <span class="keyword">implements</span> <span class="title class_">Comparator</span>&lt;Person&gt; &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">compare</span><span class="params">(Person p1, Person p2)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> Integer.compare(p1.getAge(), p2.getAge());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        List&lt;Person&gt; persons = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        persons.add(<span class="keyword">new</span> <span class="title class_">Person</span>(<span class="string">&quot;John&quot;</span>, <span class="number">25</span>));</span><br><span class="line">        persons.add(<span class="keyword">new</span> <span class="title class_">Person</span>(<span class="string">&quot;Alice&quot;</span>, <span class="number">30</span>));</span><br><span class="line">        persons.add(<span class="keyword">new</span> <span class="title class_">Person</span>(<span class="string">&quot;Bob&quot;</span>, <span class="number">20</span>));</span><br><span class="line"></span><br><span class="line">        Collections.sort(persons, <span class="keyword">new</span> <span class="title class_">AgeComparator</span>());</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (Person p : persons) &#123;</span><br><span class="line">            System.out.println(p.getName() + <span class="string">&quot; &quot;</span> + p.getAge());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="JAVA-OO"><a href="#JAVA-OO" class="headerlink" title="JAVA OO"></a>JAVA OO</h2><p><img src="/../images/java/Page1.jpg" alt="Page1"></p>
<p><img src="/../images/java/Page2.jpg" alt="Page2"></p>
<p><img src="/../images/java/Page3.jpg" alt="Page3"></p>
<p><img src="/../images/java/Page4.jpg" alt="Page4"></p>
<p><img src="/../images/java/Page5.jpg" alt="Page5"></p>
<p><img src="/../images/java/Page6.jpg" alt="Page6"></p>
<p><img src="/../images/java/Page7.jpg" alt="Page7"></p>
<p><img src="/../images/java/Page8.jpg" alt="Page8"></p>
<p><img src="/../images/java/Page9.jpg" alt="Page9"></p>
<h2 id="IO"><a href="#IO" class="headerlink" title="IO"></a>IO</h2><h3 id="File-object"><a href="#File-object" class="headerlink" title="File object"></a>File object</h3><p>import <strong>Java.io.</strong>*;</p>
<p>File f &#x3D; new File(Absolute path&#x2F;Relative Path);</p>
<p>注意Windows平台使用<code>\</code>作为路径分隔符，在Java字符串中需要用<code>\\</code>表示一个<code>\</code>。Linux平台使用<code>/</code>作为路径分隔符：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">File</span> <span class="variable">f</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(<span class="string">&quot;/usr/bin/javac&quot;</span>);</span><br></pre></td></tr></table></figure>

<p>传入相对路径时，相对路径前面加上当前目录就是绝对路径：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">// 假设当前目录是C:\Docs</span><br><span class="line">File f1 = new File(&quot;sub\\javac&quot;); // 绝对路径是C:\Docs\sub\javac</span><br><span class="line">File f3 = new File(&quot;.\\sub\\javac&quot;); // 绝对路径是C:\Docs\sub\javac</span><br><span class="line">File f3 = new File(&quot;..\\sub\\javac&quot;); // 绝对路径是C:\sub\javac</span><br></pre></td></tr></table></figure>

<p>This is can help to find the separator of the currect system.</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">File.separator</span><br></pre></td></tr></table></figure>



<h3 id="InputStream"><a href="#InputStream" class="headerlink" title="InputStream"></a>InputStream</h3><h2 id="Collection"><a href="#Collection" class="headerlink" title="Collection"></a>Collection</h2><p>在Java中，如果一个Java对象可以在内部持有若干其他Java对象，并对外提供访问接口，我们把这种Java对象称为集合</p>
<p>Java的数组可以看作是一种集合</p>
<ul>
<li>数组初始化后大小不可变；</li>
<li>数组只能按索引顺序存取。</li>
</ul>
<p>Java标准库自带的<code>java.util</code>包提供了集合类：<code>Collection</code>. 它是除<code>Map</code>外所有其他集合类的根接口。Java的<code>java.util</code>包主要提供了以下三种类型的集合：</p>
<ul>
<li><code>List</code>：一种有序列表的集合，例如，按索引排列的<code>Student</code>的<code>List</code>；</li>
<li><code>Set</code>：一种保证没有重复元素的集合，例如，所有无重复名称的<code>Student</code>的<code>Set</code>；</li>
<li><code>Map</code>：一种通过键值（key-value）查找的映射表集合，例如，根据<code>Student</code>的<code>name</code>查找对应<code>Student</code>的<code>Map</code>。</li>
</ul>
<h3 id="List"><a href="#List" class="headerlink" title="List"></a>List</h3><p><code>ArrayList</code>在内部使用了数组来存储所有元素。例如，一个<code>ArrayList</code>拥有5个元素，实际数组大小为<code>6</code>(即有一个空位)</p>
<p><code>ArrayList</code>把添加和删除的操作封装起来，让我们操作<code>List</code>类似于操作数组，却不用关心内部元素如何移动。</p>
<p>我们考察<code>List&lt;E&gt;</code>接口，可以看到几个主要的接口方法：</p>
<ul>
<li>在末尾添加一个元素：<code>boolean add(E e)</code></li>
<li>在指定索引添加一个元素：<code>boolean add(int index, E e)</code></li>
<li>删除指定索引的元素：<code>E remove(int index)</code></li>
<li>删除某个元素：<code>boolean remove(Object e)</code></li>
<li>获取指定索引的元素：<code>E get(int index)</code></li>
<li>获取链表大小（包含元素的个数）：<code>int size()</code></li>
</ul>
<p><code>LinkedList</code>通过“链表”也实现了List接口。在<code>LinkedList</code>中，它的内部每个元素都指向下一个元素。</p>
<p>【遍历集合list】</p>
<p>我们要始终坚持使用迭代器<code>Iterator</code>来访问<code>List</code>。<code>Iterator</code>本身也是一个对象，但它是由<code>List</code>的实例调用<code>iterator()</code>方法的时候创建的。<code>Iterator</code>对象知道如何遍历一个<code>List</code>，并且不同的<code>List</code>类型，返回的<code>Iterator</code>对象实现也是不同的，但总是具有最高的访问效率。</p>
<p><code>Iterator</code>对象有两个方法：<code>boolean hasNext()</code>判断是否有下一个元素，<code>E next()</code>返回下一个元素。因此，使用<code>Iterator</code>遍历<code>List</code>代码如下：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">List&lt;String&gt; list = List.of(<span class="string">&quot;apple&quot;</span>, <span class="string">&quot;pear&quot;</span>, <span class="string">&quot;banana&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (Iterator&lt;String&gt; it = list.iterator(); it.hasNext(); ) &#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">s</span> <span class="operator">=</span> it.next();</span><br><span class="line">            System.out.println(s);</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure>

<p>Java的<code>for each</code>循环本身就可以帮我们使用<code>Iterator</code>遍历。上面的代码再改写如下：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">List&lt;String&gt; list = List.of(<span class="string">&quot;apple&quot;</span>, <span class="string">&quot;pear&quot;</span>, <span class="string">&quot;banana&quot;</span>);</span><br><span class="line">   <span class="keyword">for</span> (String s : list) &#123;</span><br><span class="line">       System.out.println(s);</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure>

<p>【list转化为array】</p>
<p>把<code>List</code>变为<code>Array</code>有三种方法，第一种是调用<code>toArray()</code>方法直接返回一个<code>Object[]</code>数组</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">List&lt;String&gt; list = List.of(<span class="string">&quot;apple&quot;</span>, <span class="string">&quot;pear&quot;</span>, <span class="string">&quot;banana&quot;</span>);</span><br><span class="line">Object[] array = list.toArray();</span><br><span class="line"><span class="keyword">for</span> (Object s : array) &#123;</span><br><span class="line">    System.out.println(s);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>第二种方式是给<code>toArray(T[])</code>传入一个类型相同的<code>Array</code>，<code>List</code>内部自动把元素复制到传入的<code>Array</code>中：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">List&lt;Integer&gt; list = List.of(<span class="number">12</span>, <span class="number">34</span>, <span class="number">56</span>);</span><br><span class="line">       Integer[] array = list.toArray(<span class="keyword">new</span> <span class="title class_">Integer</span>[<span class="number">3</span>]);</span><br><span class="line">       <span class="keyword">for</span> (Integer n : array) &#123;</span><br><span class="line">           System.out.println(n);</span><br><span class="line">       &#125;</span><br></pre></td></tr></table></figure>

<p>最后一种更简洁的写法是通过<code>List</code>接口定义的<code>T[] toArray(IntFunction&lt;T[]&gt; generator)</code>方法：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Integer[] array = list.toArray(Integer[]::<span class="keyword">new</span>);</span><br></pre></td></tr></table></figure>



<h3 id="Map"><a href="#Map" class="headerlink" title="Map"></a>Map</h3><p><code>Map</code>也是一个接口，最常用的实现类是<code>HashMap</code>。</p>
<p><strong>始终牢记：Map中不存在重复的key，因为放入相同的key，只会把原有的key-value对应的value给替换掉。</strong></p>
<p><strong>此外，在一个<code>Map</code>中，虽然<code>key</code>不能重复，但<code>value</code>是可以重复的</strong></p>
<ul>
<li><code>put(K key, V value)</code>: 将指定的键值对存储到HashMap中。</li>
<li><code>get(Object key)</code>: 返回与指定键关联的值，如果键不存在，则返回null。</li>
<li><code>containsKey(Object key)</code>: 检查HashMap中是否包含指定的键。</li>
<li><code>containsValue(Object value)</code>: 检查HashMap中是否包含指定的值。</li>
<li><code>remove(Object key)</code>: 从HashMap中删除指定键对应的键值对。</li>
<li><code>size()</code>: 返回HashMap中键值对的数量。</li>
<li><code>isEmpty()</code>: 检查HashMap是否为空。</li>
<li><code>clear()</code>: 清空HashMap，删除所有的键值对。</li>
<li><code>keySet()</code>: 返回HashMap中所有键构成的Set集合。</li>
<li><code>values()</code>: 返回HashMap中所有值构成的Collection集合。</li>
<li><code>entrySet()</code>: 返回HashMap中所有键值对构成的Set集合。</li>
<li><code>putAll(Map&lt;? extends K, ? extends V&gt; m)</code>: 将另一个Map中的所有键值对添加到HashMap中。</li>
<li><code>replaceAll(BiFunction&lt;? super K, ? super V, ? extends V&gt; function)</code>: 使用指定的函数对HashMap中的每个键值对进行替换操作。</li>
<li><code>computeIfAbsent(K key, Function&lt;? super K, ? extends V&gt; mappingFunction)</code>: 如果指定的键尚未与值关联，则使用给定函数计算一个值，并将其存储到HashMap中。</li>
<li><code>computeIfPresent(K key, BiFunction&lt;? super K, ? super V, ? extends V&gt; remappingFunction)</code>: 如果指定的键存在且与非空值关联，则使用给定函数重新计算该值，</li>
</ul>
<p><strong>在map中使用的作为key的对象也需要自己重新正确的编写equals()方法</strong></p>
<p>通过<code>key</code>计算索引的方式就是调用<code>key</code>对象的<code>hashCode()</code>方法，它返回一个<code>int</code>整数。<code>HashMap</code>正是通过这个方法直接定位<code>key</code>对应的<code>value</code>的索引，继而直接返回<code>value</code>。</p>
<p>因此，正确使用<code>Map</code>必须保证：</p>
<ol>
<li>作为<code>key</code>的对象必须正确覆写<code>equals()</code>方法，相等的两个<code>key</code>实例调用<code>equals()</code>必须返回<code>true</code>；</li>
<li>作为<code>key</code>的对象还必须正确覆写<code>hashCode()</code>方法，且<code>hashCode()</code>方法要严格遵循以下规范：</li>
</ol>
<ul>
<li>如果两个对象相等，则两个对象的<code>hashCode()</code>必须相等；</li>
<li>如果两个对象不相等，则两个对象的<code>hashCode()</code>尽量不要相等。</li>
</ul>
<p><strong>如何编写正确的equals()？</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Person</span> &#123;</span><br><span class="line">    String firstName;</span><br><span class="line">    String lastName;</span><br><span class="line">    <span class="type">int</span> age;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>把需要比较的字段找出来：</p>
<ul>
<li>firstName</li>
<li>lastName</li>
<li>age</li>
</ul>
<p>然后，引用类型使用<code>Objects.equals()</code>比较，基本类型使用<code>==</code>比较。</p>
<p>在正确实现<code>equals()</code>的基础上，我们还需要正确实现<code>hashCode()</code>，即上述3个字段分别相同的实例，<code>hashCode()</code>返回的<code>int</code>必须相同：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Person</span> &#123;</span><br><span class="line">    String firstName;</span><br><span class="line">    String lastName;</span><br><span class="line">    <span class="type">int</span> age;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="type">int</span> <span class="title function_">hashCode</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">h</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        h = <span class="number">31</span> * h + firstName.hashCode();</span><br><span class="line">        h = <span class="number">31</span> * h + lastName.hashCode();</span><br><span class="line">        h = <span class="number">31</span> * h + age;</span><br><span class="line">        <span class="keyword">return</span> h;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>注意到<code>String</code>类已经正确实现了<code>hashCode()</code>方法，我们在计算<code>Person</code>的<code>hashCode()</code>时，反复使用<code>31*h</code>，这样做的目的是为了尽量把不同的<code>Person</code>实例的<code>hashCode()</code>均匀分布到整个<code>int</code>范围。</p>
<p>和实现<code>equals()</code>方法遇到的问题类似，如果<code>firstName</code>或<code>lastName</code>为<code>null</code>，上述代码工作起来就会抛<code>NullPointerException</code>。为了解决这个问题，我们在计算<code>hashCode()</code>的时候，经常借助<code>Objects.hash()</code>来计算：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">hashCode</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> Objects.hash(firstName, lastName, age);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>所以，编写<code>equals()</code>和<code>hashCode()</code>遵循的原则是：</p>
<p><strong><code>equals()</code>用到的用于比较的每一个字段，都必须在<code>hashCode()</code>中用于计算；<code>equals()</code>中没有使用到的字段，绝不可放在<code>hashCode()</code>中计算。</strong></p>
<p><strong>Extension</strong></p>
<ol>
<li>hashCode()返回的<code>int</code>范围高达±21亿，先不考虑负数，<code>HashMap</code>内部使用的数组得有多大？</li>
</ol>
<p>既然<code>HashMap</code>内部使用了数组，通过计算<code>key</code>的<code>hashCode()</code>直接定位<code>value</code>所在的索引，那么第一个问题来了：hashCode()返回的<code>int</code>范围高达±21亿，先不考虑负数，<code>HashMap</code>内部使用的数组得有多大？</p>
<p>实际上<code>HashMap</code>初始化时默认的数组大小只有16，任何<code>key</code>，无论它的<code>hashCode()</code>有多大，都可以简单地通过</p>
<p>把索引确定在0～15，即永远不会超出数组范围，上述算法只是一种最简单的实现。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> <span class="variable">index</span> <span class="operator">=</span> key.hashCode() &amp; <span class="number">0xf</span>; <span class="comment">// 0xf = 15</span></span><br></pre></td></tr></table></figure>

<ol start="2">
<li>如果添加超过16个<code>key-value</code>到<code>HashMap</code>，数组不够用了怎么办？</li>
</ol>
<p>添加超过一定数量的<code>key-value</code>时，<code>HashMap</code>会在内部自动扩容，每次扩容一倍，即长度为16的数组扩展为长度32，相应地，需要重新确定<code>hashCode()</code>计算的索引位置。例如，对长度为32的数组计算<code>hashCode()</code>对应的索引，计算方式要改为：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> <span class="variable">index</span> <span class="operator">=</span> key.hashCode() &amp; <span class="number">0x1f</span>; <span class="comment">// 0x1f = 31</span></span><br></pre></td></tr></table></figure>

<p>由于扩容会导致重新分布已有的<code>key-value</code>，所以，频繁扩容对<code>HashMap</code>的性能影响很大。如果我们确定要使用一个容量为<code>10000</code>个<code>key-value</code>的<code>HashMap</code>，更好的方式是创建<code>HashMap</code>时就指定容量：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Map&lt;String, Integer&gt; map = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;(<span class="number">10000</span>);</span><br></pre></td></tr></table></figure>

<p>虽然指定容量是<code>10000</code>，但<code>HashMap</code>内部的数组长度总是2n，因此，实际数组长度被初始化为比<code>10000</code>大的<code>16384</code> which is 2^14.</p>
<ol start="3">
<li>如果不同的两个<code>key</code>，例如<code>&quot;a&quot;</code>和<code>&quot;b&quot;</code>，它们的<code>hashCode()</code>恰好是相同的（这种情况是完全可能的，因为不相等的两个实例，只要求<code>hashCode()</code>尽量不相等），那么，当我们放入：</li>
</ol>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">map.put(<span class="string">&quot;a&quot;</span>, <span class="keyword">new</span> <span class="title class_">Person</span>(<span class="string">&quot;Xiao Ming&quot;</span>));</span><br><span class="line">map.put(<span class="string">&quot;b&quot;</span>, <span class="keyword">new</span> <span class="title class_">Person</span>(<span class="string">&quot;Xiao Hong&quot;</span>));</span><br></pre></td></tr></table></figure>

<p>时，由于计算出的数组索引相同，后面放入的<code>&quot;Xiao Hong&quot;</code>会不会把<code>&quot;Xiao Ming&quot;</code>覆盖了？</p>
<p>当然不会！使用<code>Map</code>的时候，只要<code>key</code>不相同，它们映射的<code>value</code>就互不干扰。但是，在<code>HashMap</code>内部，确实可能存在不同的<code>key</code>，映射到相同的<code>hashCode()</code>，即相同的数组索引上，肿么办？</p>
<p>我们就假设<code>&quot;a&quot;</code>和<code>&quot;b&quot;</code>这两个<code>key</code>最终计算出的索引都是5，那么，在<code>HashMap</code>的数组中，实际存储的不是一个<code>Person</code>实例，而是一个<code>List</code>，它包含两个<code>Entry</code>，一个是<code>&quot;a&quot;</code>的映射，一个是<code>&quot;b&quot;</code>的映射：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">  ┌───┐</span><br><span class="line">0 │   │</span><br><span class="line">  ├───┤</span><br><span class="line">1 │   │</span><br><span class="line">  ├───┤</span><br><span class="line">2 │   │</span><br><span class="line">  ├───┤</span><br><span class="line">3 │   │</span><br><span class="line">  ├───┤</span><br><span class="line">4 │   │</span><br><span class="line">  ├───┤</span><br><span class="line">5 │ ●─┼───&gt; List&lt;Entry&lt;String, Person&gt;&gt;</span><br><span class="line">  ├───┤</span><br><span class="line">6 │   │</span><br><span class="line">  ├───┤</span><br><span class="line">7 │   │</span><br><span class="line">  └───┘</span><br></pre></td></tr></table></figure>

<p>在查找的时候，例如：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Person p = map.get(&quot;a&quot;);</span><br></pre></td></tr></table></figure>

<p>HashMap内部通过<code>&quot;a&quot;</code>找到的实际上是<code>List&lt;Entry&lt;String, Person&gt;&gt;</code>，它还需要遍历这个<code>List</code>，并找到一个<code>Entry</code>，它的<code>key</code>字段是<code>&quot;a&quot;</code>，才能返回对应的<code>Person</code>实例。</p>
<p>我们把不同的<code>key</code>具有相同的<code>hashCode()</code>的情况称之为哈希冲突。在冲突的时候，一种最简单的解决办法是用<code>List</code>存储<code>hashCode()</code>相同的<code>key-value</code>。显然，如果冲突的概率越大，这个<code>List</code>就越长，<code>Map</code>的<code>get()</code>方法效率就越低，这就是为什么要尽量满足条件二：</p>
<p> 如果两个对象不相等，则两个对象的hashCode()尽量不要相等。</p>
<h3 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h3><p>要正确使用<code>HashMap</code>，作为<code>key</code>的类必须正确覆写<code>equals()</code>和<code>hashCode()</code>方法；</p>
<p>一个类如果覆写了<code>equals()</code>，就必须覆写<code>hashCode()</code>，并且覆写规则是：</p>
<ul>
<li>如果<code>equals()</code>返回<code>true</code>，则<code>hashCode()</code>返回值必须相等；</li>
<li>如果<code>equals()</code>返回<code>false</code>，则<code>hashCode()</code>返回值尽量不要相等。</li>
</ul>
<p>实现<code>hashCode()</code>方法可以通过<code>Objects.hashCode()</code>辅助方法实现。</p>
<h3 id="TreeMap"><a href="#TreeMap" class="headerlink" title="TreeMap"></a>TreeMap</h3><p>还有一种<code>Map</code>，它在内部会对Key进行排序，这种<code>Map</code>就是<code>SortedMap</code>。注意到<code>SortedMap</code>是接口，它的实现类是<code>TreeMap</code>。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">       ┌───┐</span><br><span class="line">       │Map│</span><br><span class="line">       └───┘</span><br><span class="line">         ▲</span><br><span class="line">    ┌────┴─────┐</span><br><span class="line">    │          │</span><br><span class="line">┌───────┐ ┌─────────┐</span><br><span class="line">│HashMap│ │SortedMap│</span><br><span class="line">└───────┘ └─────────┘</span><br><span class="line">               ▲</span><br><span class="line">               │</span><br><span class="line">          ┌─────────┐</span><br><span class="line">          │ TreeMap │</span><br><span class="line">          └─────────┘</span><br></pre></td></tr></table></figure>

<p><code>SortedMap</code>保证遍历时以Key的顺序来进行排序。例如，放入的Key是<code>&quot;apple&quot;</code>、<code>&quot;pear&quot;</code>、<code>&quot;orange&quot;</code>，遍历的顺序一定是<code>&quot;apple&quot;</code>、<code>&quot;orange&quot;</code>、<code>&quot;pear&quot;</code>，因为<code>String</code>默认按字母排序：</p>
<p>使用<code>TreeMap</code>时，放入的Key必须实现<code>Comparable</code>接口。<code>String</code>、<code>Integer</code>这些类已经实现了<code>Comparable</code>接口，因此可以直接作为Key使用。作为Value的对象则没有任何要求。</p>
<p>如果作为Key的class没有实现<code>Comparable</code>接口，那么，必须在创建<code>TreeMap</code>时同时指定一个自定义排序算法：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        Map&lt;Person, Integer&gt; map = <span class="keyword">new</span> <span class="title class_">TreeMap</span>&lt;&gt;(<span class="keyword">new</span> <span class="title class_">Comparator</span>&lt;Person&gt;() &#123;</span><br><span class="line">            <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">compare</span><span class="params">(Person p1, Person p2)</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> p1.name.compareTo(p2.name);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        map.put(<span class="keyword">new</span> <span class="title class_">Person</span>(<span class="string">&quot;Tom&quot;</span>), <span class="number">1</span>);</span><br><span class="line">        map.put(<span class="keyword">new</span> <span class="title class_">Person</span>(<span class="string">&quot;Bob&quot;</span>), <span class="number">2</span>);</span><br><span class="line">        map.put(<span class="keyword">new</span> <span class="title class_">Person</span>(<span class="string">&quot;Lily&quot;</span>), <span class="number">3</span>);</span><br><span class="line">        <span class="keyword">for</span> (Person key : map.keySet()) &#123;</span><br><span class="line">            System.out.println(key);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// &#123;Person: Bob&#125;, &#123;Person: Lily&#125;, &#123;Person: Tom&#125;</span></span><br><span class="line">        System.out.println(map.get(<span class="keyword">new</span> <span class="title class_">Person</span>(<span class="string">&quot;Bob&quot;</span>))); <span class="comment">// 2</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Person</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> String name;</span><br><span class="line">    Person(String name) &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">toString</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;&#123;Person: &quot;</span> + name + <span class="string">&quot;&#125;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>注意到<code>Comparator</code>接口要求实现一个比较方法，它负责比较传入的两个元素<code>a</code>和<code>b</code>，如果<code>a&lt;b</code>，则返回负数，通常是<code>-1</code>，如果<code>a==b</code>，则返回<code>0</code>，如果<code>a&gt;b</code>，则返回正数，通常是<code>1</code>。<code>TreeMap</code>内部根据比较结果对Key进行排序。</p>
<p>从上述代码执行结果可知，打印的Key确实是按照<code>Comparator</code>定义的顺序排序的。如果要根据Key查找Value，我们可以传入一个<code>new Person(&quot;Bob&quot;)</code>作为Key，它会返回对应的<code>Integer</code>值<code>2</code>。</p>
<p>另外，注意到<code>Person</code>类并未覆写<code>equals()</code>和<code>hashCode()</code>，因为<code>TreeMap</code>不使用<code>equals()</code>和<code>hashCode()</code>。</p>
<p>我们来看一个稍微复杂的例子：这次我们定义了<code>Student</code>类，并用分数<code>score</code>进行排序，高分在前：</p>
]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>tech</tag>
      </tags>
  </entry>
  <entry>
    <title>DSA</title>
    <url>/2023/04/25/DSA/</url>
    <content><![CDATA[<h1 id="DSA"><a href="#DSA" class="headerlink" title="DSA"></a>DSA</h1><h2 id="Concepts"><a href="#Concepts" class="headerlink" title="Concepts"></a>Concepts</h2><h3 id="Time-complexity"><a href="#Time-complexity" class="headerlink" title="Time complexity:"></a>Time complexity:</h3><p>This paper analyzes from the following five points:</p>
<ul>
<li>What is time complexity anyway</li>
<li>What’s a big O</li>
<li>Differences in data sizes</li>
<li>Simplification of complex expressions</li>
<li>What is the base of log in -O (log n)?</li>
</ul>
<h3 id="究竟什么是时间复杂度"><a href="#究竟什么是时间复杂度" class="headerlink" title="究竟什么是时间复杂度"></a>究竟什么是时间复杂度</h3><p><strong>时间复杂度是一个函数，它定性描述该算法的运行时间</strong>。</p>
<p>我们在软件开发中，时间复杂度就是用来方便开发者估算出程序运行的答题时间。</p>
<p>那么该如何估计程序运行时间呢，通常会估算算法的操作单元数量来代表程序消耗的时间，这里默认CPU的每个单元运行消耗的时间都是相同的。</p>
<p>假设算法的问题规模为n，那么操作单元数量便用函数f(n)来表示，随着数据规模n的增大，算法执行时间的增长率和f(n)的增长率相同，这称作为算法的渐近时间复杂度，简称时间复杂度，记为 O(f(n))。</p>
<h3 id="什么是大O"><a href="#什么是大O" class="headerlink" title="什么是大O"></a>什么是大O</h3><p>这里的大O是指什么呢，说到时间复杂度，<strong>大家都知道O(n)，O(n^2)，却说不清什么是大O</strong>。</p>
<p>算法导论给出的解释：<strong>大O用来表示上界的</strong>，当用它作为算法的最坏情况运行时间的上界，就是对任意数据输入的运行时间的上界。</p>
<p>同样算法导论给出了例子：拿插入排序来说，插入排序的时间复杂度我们都说是O(n^2) 。</p>
<p>输入数据的形式对程序运算时间是有很大影响的，在数据本来有序的情况下时间复杂度是O(n)，但如果数据是逆序的话，插入排序的时间复杂度就是O(n^2)，也就对于所有输入情况来说，最坏是O(n^2) 的时间复杂度，所以称插入排序的时间复杂度为O(n^2)。</p>
<p>同样的同理再看一下快速排序，都知道快速排序是O(nlogn)，但是当数据已经有序情况下，快速排序的时间复杂度是O(n^2) 的，**所以严格从大O的定义来讲，快速排序的时间复杂度应该是O(n^2)**。</p>
<p><strong>但是我们依然说快速排序是O(nlogn)的时间复杂度，这个就是业内的一个默认规定，这里说的O代表的就是一般情况，而不是严格的上界</strong>。如图所示： <img src="/../images/20200728185745611-20230310123844306.png" alt="时间复杂度4，一般情况下的时间复杂度"></p>
<p>我们主要关心的还是一般情况下的数据形式。</p>
<p><strong>面试中说道算法的时间复杂度是多少指的都是一般情况</strong>。但是如果面试官和我们深入探讨一个算法的实现以及性能的时候，就要时刻想着数据用例的不一样，时间复杂度也是不同的，这一点是一定要注意的。</p>
<h3 id="不同数据规模的差异"><a href="#不同数据规模的差异" class="headerlink" title="#不同数据规模的差异"></a><a href="https://programmercarl.com/%E5%89%8D%E5%BA%8F/%E5%85%B3%E4%BA%8E%E6%97%B6%E9%97%B4%E5%A4%8D%E6%9D%82%E5%BA%A6%EF%BC%8C%E4%BD%A0%E4%B8%8D%E7%9F%A5%E9%81%93%E7%9A%84%E9%83%BD%E5%9C%A8%E8%BF%99%E9%87%8C%EF%BC%81.html#%E4%B8%8D%E5%90%8C%E6%95%B0%E6%8D%AE%E8%A7%84%E6%A8%A1%E7%9A%84%E5%B7%AE%E5%BC%82">#</a>不同数据规模的差异</h3><p>如下图中可以看出不同算法的时间复杂度在不同数据输入规模下的差异。</p>
<p><img src="/../images/20200728191447384-20230310124015324.png" alt="时间复杂度，不同数据规模的差异"></p>
<p>在决定使用哪些算法的时候，不是时间复杂越低的越好（因为简化后的时间复杂度忽略了常数项等等），要考虑数据规模，如果数据规模很小甚至可以用O(n^2)的算法比O(n)的更合适（在有常数项的时候）。</p>
<p>就像上图中 O(5n^2) 和 O(100n) 在n为20之前 很明显 O(5n^2)是更优的，所花费的时间也是最少的。</p>
<p>那为什么在计算时间复杂度的时候要忽略常数项系数呢，也就说O(100n) 就是O(n)的时间复杂度，O(5n^2) 就是O(n^2)的时间复杂度，而且要默认O(n) 优于O(n^2) 呢 ？</p>
<p>这里就又涉及到大O的定义，<strong>因为大O就是数据量级突破一个点且数据量级非常大的情况下所表现出的时间复杂度，这个数据量也就是常数项系数已经不起决定性作用的数据量</strong>。</p>
<p>例如上图中20就是那个点，n只要大于20 常数项系数已经不起决定性作用了。</p>
<p><strong>所以我们说的时间复杂度都是省略常数项系数的，是因为一般情况下都是默认数据规模足够的大，基于这样的事实，给出的算法时间复杂的的一个排行如下所示</strong>：</p>
<p>O(1)常数阶 &lt; O(logn)对数阶 &lt; O(n)线性阶 &lt; O(nlogn)线性对数阶 &lt; O(n^2)平方阶 &lt; O(n^3)立方阶 &lt; O(2^n)指数阶</p>
<p>但是也要注意大常数，如果这个常数非常大，例如10^7 ，10^9 ，那么常数就是不得不考虑的因素了。</p>
<h3 id="复杂表达式的化简"><a href="#复杂表达式的化简" class="headerlink" title="#复杂表达式的化简"></a><a href="https://programmercarl.com/%E5%89%8D%E5%BA%8F/%E5%85%B3%E4%BA%8E%E6%97%B6%E9%97%B4%E5%A4%8D%E6%9D%82%E5%BA%A6%EF%BC%8C%E4%BD%A0%E4%B8%8D%E7%9F%A5%E9%81%93%E7%9A%84%E9%83%BD%E5%9C%A8%E8%BF%99%E9%87%8C%EF%BC%81.html#%E5%A4%8D%E6%9D%82%E8%A1%A8%E8%BE%BE%E5%BC%8F%E7%9A%84%E5%8C%96%E7%AE%80">#</a>复杂表达式的化简</h3><p>有时候我们去计算时间复杂度的时候发现不是一个简单的O(n) 或者O(n^2)， 而是一个复杂的表达式，例如：</p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">O(2*n^2 + 10*n + 1000)</span><br></pre></td></tr></table></figure>

<p>1</p>
<p>那这里如何描述这个算法的时间复杂度呢，一种方法就是简化法。</p>
<p>去掉运行时间中的加法常数项 （因为常数项并不会因为n的增大而增加计算机的操作次数）。</p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">O(2*n^2 + 10*n)</span><br></pre></td></tr></table></figure>

<p>1</p>
<p>去掉常数系数（上文中已经详细讲过为什么可以去掉常数项的原因）。</p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">O(n^2 + n)</span><br></pre></td></tr></table></figure>

<p>1</p>
<p>只保留保留最高项，去掉数量级小一级的n （因为n^2 的数据规模远大于n），最终简化为：</p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">O(n^2)</span><br></pre></td></tr></table></figure>

<p>1</p>
<p>如果这一步理解有困难，那也可以做提取n的操作，变成O(n(n+1)) ，省略加法常数项后也就别变成了：</p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">O(n^2)</span><br></pre></td></tr></table></figure>

<p>1</p>
<p>所以最后我们说：这个算法的算法时间复杂度是O(n^2) 。</p>
<p>也可以用另一种简化的思路，其实当n大于40的时候， 这个复杂度会恒小于O(3 × n^2)， O(2 × n^2 + 10 × n + 1000) &lt; O(3 × n^2)，所以说最后省略掉常数项系数最终时间复杂度也是O(n^2)。</p>
<h3 id="O-logn-中的log是以什么为底？"><a href="#O-logn-中的log是以什么为底？" class="headerlink" title="#O(logn)中的log是以什么为底？"></a><a href="https://programmercarl.com/%E5%89%8D%E5%BA%8F/%E5%85%B3%E4%BA%8E%E6%97%B6%E9%97%B4%E5%A4%8D%E6%9D%82%E5%BA%A6%EF%BC%8C%E4%BD%A0%E4%B8%8D%E7%9F%A5%E9%81%93%E7%9A%84%E9%83%BD%E5%9C%A8%E8%BF%99%E9%87%8C%EF%BC%81.html#o-logn-%E4%B8%AD%E7%9A%84log%E6%98%AF%E4%BB%A5%E4%BB%80%E4%B9%88%E4%B8%BA%E5%BA%95">#</a>O(logn)中的log是以什么为底？</h3><p>平时说这个算法的时间复杂度是logn的，那么一定是log 以2为底n的对数么？</p>
<p>其实不然，也可以是以10为底n的对数，也可以是以20为底n的对数，<strong>但我们统一说 logn，也就是忽略底数的描述</strong>。</p>
<p>为什么可以这么做呢？如下图所示：</p>
<p><img src="/../images/20200728191447349-20230310124032001.png" alt="时间复杂度1.png"></p>
<p>假如有两个算法的时间复杂度，分别是log以2为底n的对数和log以10为底n的对数，那么这里如果还记得高中数学的话，应该不难理解<code>以2为底n的对数 = 以2为底10的对数 * 以10为底n的对数</code>。</p>
<p>而以2为底10的对数是一个常数，在上文已经讲述了我们计算时间复杂度是忽略常数项系数的。</p>
<p>抽象一下就是在时间复杂度的计算过程中，log以i为底n的对数等于log 以j为底n的对数，所以忽略了i，直接说是logn。</p>
<p>这样就应该不难理解为什么忽略底数了。</p>
<h3 id="举一个例子"><a href="#举一个例子" class="headerlink" title="#举一个例子"></a><a href="https://programmercarl.com/%E5%89%8D%E5%BA%8F/%E5%85%B3%E4%BA%8E%E6%97%B6%E9%97%B4%E5%A4%8D%E6%9D%82%E5%BA%A6%EF%BC%8C%E4%BD%A0%E4%B8%8D%E7%9F%A5%E9%81%93%E7%9A%84%E9%83%BD%E5%9C%A8%E8%BF%99%E9%87%8C%EF%BC%81.html#%E4%B8%BE%E4%B8%80%E4%B8%AA%E4%BE%8B%E5%AD%90">#</a>举一个例子</h3><p>通过这道面试题目，来分析一下时间复杂度。题目描述：找出n个字符串中相同的两个字符串（假设这里只有两个相同的字符串）。</p>
<p>如果是暴力枚举的话，时间复杂度是多少呢，是O(n^2)么？</p>
<p>这里一些同学会忽略了字符串比较的时间消耗，这里并不像int 型数字做比较那么简单，除了n^2 次的遍历次数外，字符串比较依然要消耗m次操作（m也就是字母串的长度），所以时间复杂度是O(m × n × n)。</p>
<p>接下来再想一下其他解题思路。</p>
<p>先排对n个字符串按字典序来排序，排序后n个字符串就是有序的，意味着两个相同的字符串就是挨在一起，然后在遍历一遍n个字符串，这样就找到两个相同的字符串了。</p>
<p>那看看这种算法的时间复杂度，快速排序时间复杂度为O(nlogn)，依然要考虑字符串的长度是m，那么快速排序每次的比较都要有m次的字符比较的操作，就是O(m × n × log n) 。</p>
<p>之后还要遍历一遍这n个字符串找出两个相同的字符串，别忘了遍历的时候依然要比较字符串，所以总共的时间复杂度是 O(m × n × logn + n × m)。</p>
<p>我们对O(m × n × log n + n × m) 进行简化操作，把m × n提取出来变成 O(m × n × (logn + 1))，再省略常数项最后的时间复杂度是 O(m × n × log n)。</p>
<p>最后很明显O(m × n × logn) 要优于O(m × n × n)！</p>
<p>所以先把字符串集合排序再遍历一遍找到两个相同字符串的方法要比直接暴力枚举的方式更快。</p>
<p>这就是我们通过分析两种算法的时间复杂度得来的。</p>
<p><strong>当然这不是这道题目的最优解，我仅仅是用这道题目来讲解一下时间复杂度</strong>。</p>
<h3 id="总结"><a href="#总结" class="headerlink" title="#总结"></a><a href="https://programmercarl.com/%E5%89%8D%E5%BA%8F/%E5%85%B3%E4%BA%8E%E6%97%B6%E9%97%B4%E5%A4%8D%E6%9D%82%E5%BA%A6%EF%BC%8C%E4%BD%A0%E4%B8%8D%E7%9F%A5%E9%81%93%E7%9A%84%E9%83%BD%E5%9C%A8%E8%BF%99%E9%87%8C%EF%BC%81.html#%E6%80%BB%E7%BB%93">#</a>总结</h3><p>本篇讲解了什么是时间复杂度，复杂度是用来干什么，以及数据规模对时间复杂度的影响。</p>
<p>还讲解了被大多数同学忽略的大O的定义以及log究竟是以谁为底的问题。</p>
<p>再分析了如何简化复杂的时间复杂度，最后举一个具体的例子，把本篇的内容串起来。</p>
<p>相信看完本篇，大家对时间复杂度的认识会深刻很多！</p>
<h2 id="Questions"><a href="#Questions" class="headerlink" title="Questions"></a>Questions</h2><h3 id="Greedy-algorithm"><a href="#Greedy-algorithm" class="headerlink" title="Greedy algorithm:"></a>Greedy algorithm:</h3><h4 id="1-455-Assign-Cookies-Easy"><a href="#1-455-Assign-Cookies-Easy" class="headerlink" title="1. 455. Assign Cookies (Easy)"></a>1. 455. Assign Cookies (Easy)</h4><p>题目描述：每个孩子都有一个满足度 grid，每个饼干都有一个大小 size，只有饼干的大小大于等于一个孩子的满足度，该孩子才会获得满足。求解最多可以获得满足的孩子数量。</p>
<ol>
<li>给一个孩子的饼干应当尽量小并且又能满足该孩子，这样大饼干才能拿来给满足度比较大的孩子。</li>
<li>因为满足度最小的孩子最容易得到满足，所以先满足满足度最小的孩子。</li>
</ol>
<p>在以上的解法中，我们只在每次分配时饼干时选择一种看起来是当前最优的分配方法，但无法保证这种局部最优的分配方法最后能得到全局最优解。我们假设能得到全局最优解，并使用反证法进行证明，即假设存在一种比我们使用的贪心策略更优的最优策略。如果不存在这种最优策略，表示贪心策略就是最优策略，得到的解也就是全局最优解。</p>
<p>证明：假设在某次选择中，贪心策略选择给当前满足度最小的孩子分配第 m 个饼干，第 m 个饼干为可以满足该孩子的最小饼干。假设存在一种最优策略，可以给该孩子分配第 n 个饼干，并且 m &lt; n。我们可以发现，经过这一轮分配，贪心策略分配后剩下的饼干一定有一个比最优策略来得大。因此在后续的分配中，贪心策略一定能满足更多的孩子。也就是说不存在比贪心策略更优的策略，即贪心策略就是最优策略。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="type">int</span> <span class="title function_">findContentChildren</span><span class="params">(<span class="type">int</span>[] g, <span class="type">int</span>[] s)</span> &#123;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span>(g==<span class="literal">null</span>||s==<span class="literal">null</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">      Arrays.sort(g);</span><br><span class="line"></span><br><span class="line">      Arrays.sort(s);</span><br><span class="line"></span><br><span class="line">      <span class="type">int</span> gi=<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">      <span class="type">int</span> si=<span class="number">0</span>;</span><br><span class="line">  </span><br><span class="line">     <span class="keyword">while</span>(gi&lt;g.length&amp;&amp;si&lt;s.length)&#123;</span><br><span class="line"></span><br><span class="line">          <span class="keyword">if</span>(s[si]&gt;=g[gi])&#123;</span><br><span class="line"></span><br><span class="line">             gi++;</span><br><span class="line"></span><br><span class="line">             si++;</span><br><span class="line"></span><br><span class="line">          &#125;</span><br><span class="line"></span><br><span class="line">         <span class="keyword">else</span> si++;</span><br><span class="line"></span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">return</span> gi;</span><br><span class="line"></span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>

<h4 id="2-435-Non-overlapping-Intervals-Medium"><a href="#2-435-Non-overlapping-Intervals-Medium" class="headerlink" title="2. 435. Non-overlapping Intervals (Medium)"></a>2. 435. Non-overlapping Intervals (Medium)</h4><p>给定一个区间的集合 intervals ，其中 intervals[i] &#x3D; [starti, endi] 。返回 需要移除区间的最小数量，使剩余区间互不重叠 。</p>
<p>示例 1:</p>
<p>输入: intervals &#x3D; [[1,2],[2,3],[3,4],[1,3]]<br>输出: 1<br>解释: 移除 [1,3] 后，剩下的区间没有重叠。<br>示例 2:</p>
<p>输入: intervals &#x3D; [ [1,2], [1,2], [1,2] ]<br>输出: 2<br>解释: 你需要移除两个 [1,2] 来使剩下的区间没有重叠。<br>示例 3:</p>
<p>输入: intervals &#x3D; [ [1,2], [2,3] ]<br>输出: 0<br>解释: 你不需要移除任何区间，因为它们已经是无重叠的了。</p>
<p>solution:</p>
<p>先计算最多能组成的不重叠区间个数，然后用区间总个数减去不重叠区间的个数。</p>
<p>在每次选择中，区间的结尾最为重要，选择的区间结尾越小，留给后面的区间的空间越大，那么后面能够选择的区间个数也就越大。</p>
<p>按区间的结尾进行排序，每次选择结尾最小，并且和前一个区间不重叠的区间。结束时间越早越好</p>
<iframe src="//player.bilibili.com/player.html?aid=304892488&bvid=BV1yP411F7EX&cid=884932350&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="type">int</span> <span class="title function_">eraseOverlapIntervals</span><span class="params">(<span class="type">int</span>[][] intervals)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (intervals.length == <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    Arrays.sort(intervals, Comparator.comparingInt(o -&gt; o[<span class="number">1</span>]));</span><br><span class="line">    <span class="type">int</span> <span class="variable">cnt</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line">    <span class="type">int</span> <span class="variable">end</span> <span class="operator">=</span> intervals[<span class="number">0</span>][<span class="number">1</span>];</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt; intervals.length; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (intervals[i][<span class="number">0</span>] &lt; end) &#123;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        end = intervals[i][<span class="number">1</span>];</span><br><span class="line">        cnt++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> intervals.length - cnt;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Arrays.sort(intervals, <span class="keyword">new</span> <span class="title class_">Comparator</span>&lt;<span class="type">int</span>[]&gt;() &#123;</span><br><span class="line">     <span class="meta">@Override</span></span><br><span class="line">     <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">compare</span><span class="params">(<span class="type">int</span>[] o1, <span class="type">int</span>[] o2)</span> &#123;</span><br><span class="line">         <span class="keyword">return</span> (o1[<span class="number">1</span>] &lt; o2[<span class="number">1</span>]) ? -<span class="number">1</span> : ((o1[<span class="number">1</span>] == o2[<span class="number">1</span>]) ? <span class="number">0</span> : <span class="number">1</span>);</span><br><span class="line">     &#125;</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">//这里是让数组中，各个区间的末尾按照正序也就是升序来排序，所以是用o1[1]&lt;o2[1],也可以用return o1[1]-o2[1],但可能会溢出</span></span><br></pre></td></tr></table></figure>



<h4 id="3-452-Minimum-Number-of-Arrows-to-Burst-Balloons"><a href="#3-452-Minimum-Number-of-Arrows-to-Burst-Balloons" class="headerlink" title="3. 452. Minimum Number of Arrows to Burst Balloons"></a>3. 452. Minimum Number of Arrows to Burst Balloons</h4><p>有一些球形气球贴在一堵用 XY 平面表示的墙面上。墙面上的气球记录在整数数组 <code>points</code> ，其中<code>points[i] = [xstart, xend]</code> 表示水平直径在 <code>xstart</code> 和 <code>xend</code>之间的气球。你不知道气球的确切 y 坐标。</p>
<p>一支弓箭可以沿着 x 轴从不同点 <strong>完全垂直</strong> 地射出。在坐标 <code>x</code> 处射出一支箭，若有一个气球的直径的开始和结束坐标为 <code>x``start</code>，<code>x``end</code>， 且满足 <code>xstart ≤ x ≤ x``end</code>，则该气球会被 <strong>引爆</strong> 。可以射出的弓箭的数量 <strong>没有限制</strong> 。 弓箭一旦被射出之后，可以无限地前进。</p>
<p>给你一个数组 <code>points</code> ，<em>返回引爆所有气球所必须射出的 <strong>最小</strong> 弓箭数</em> 。</p>
<p><strong>示例 1：</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">输入：points = [[10,16],[2,8],[1,6],[7,12]]</span><br><span class="line">输出：2</span><br><span class="line">解释：气球可以用2支箭来爆破:</span><br><span class="line">-在x = 6处射出箭，击破气球[2,8]和[1,6]。</span><br><span class="line">-在x = 11处发射箭，击破气球[10,16]和[7,12]。</span><br></pre></td></tr></table></figure>

<p>该题思路基本和第二题一致，只是要求最多不重叠的区间数，然后射出这么多箭即可。而且注意边界值。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title class_">myComparator</span> <span class="keyword">implements</span> <span class="title class_">Comparator</span>&lt;<span class="type">int</span>[]&gt;&#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">compare</span><span class="params">(<span class="type">int</span>[] o1,<span class="type">int</span>[] o2)</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> (o1[<span class="number">1</span>] &lt; o2[<span class="number">1</span>]) ? -<span class="number">1</span> : ((o1[<span class="number">1</span>] == o2[<span class="number">1</span>]) ? <span class="number">0</span> : <span class="number">1</span>);</span><br><span class="line">          <span class="comment">//如果使用return o1[1]-o2[1],可能会出现int越界的问题，所以用比较符号来</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">findMinArrowShots</span><span class="params">(<span class="type">int</span>[][] points)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span>(points==<span class="literal">null</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    Arrays.sort(points,<span class="keyword">new</span> <span class="title class_">Solution</span>.myComparator());</span><br><span class="line">    <span class="type">int</span> cnt=<span class="number">1</span>;</span><br><span class="line">    <span class="type">int</span> end=points[<span class="number">0</span>][<span class="number">1</span>];</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;points.length;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(points[i][<span class="number">0</span>]&lt;=end)&#123;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        cnt++;</span><br><span class="line">        end=points[i][<span class="number">1</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> cnt;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h4 id="4-406-Queue-Reconstruction-by-Height-Medium"><a href="#4-406-Queue-Reconstruction-by-Height-Medium" class="headerlink" title="4. 406. Queue Reconstruction by Height(Medium)"></a>4. 406. Queue Reconstruction by Height(Medium)</h4><p>假设有打乱顺序的一群人站成一个队列，数组 people 表示队列中一些人的属性（不一定按顺序）。每个 people[i] &#x3D; [hi, ki] 表示第 i 个人的身高为 hi ，前面 正好 有 ki 个身高大于或等于 hi 的人。</p>
<p>请你重新构造并返回输入数组 people 所表示的队列。返回的队列应该格式化为数组 queue ，其中 queue[j] &#x3D; [hj, kj] 是队列中第 j 个人的属性（queue[0] 是排在队列前面的人）。</p>
<p>示例 1：</p>
<p>输入：people &#x3D; [[7,0],[4,4],[7,1],[5,0],[6,1],[5,2]]<br>输出：[[5,0],[7,0],[5,2],[6,1],[4,4],[7,1]]</p>
<p>思路: 为了使插入操作不影响后续的操作，身高较高的学生应该先做插入操作，否则身高较小的学生原先正确插入的第 k 个位置可能会变成第 k+1 个位置。</p>
<p>身高 h 降序、个数 k 值升序，然后将某个学生插入队列的第 k 个位置中。</p>
<p>Solution:</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title class_">myComparator</span> <span class="keyword">implements</span> <span class="title class_">Comparator</span>&lt;<span class="type">int</span>[]&gt; &#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">compare</span><span class="params">(<span class="type">int</span>[] o1,<span class="type">int</span>[] o2)</span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(o1[<span class="number">0</span>]!=o2[<span class="number">0</span>])&#123;</span><br><span class="line">                <span class="keyword">return</span> o2[<span class="number">0</span>]-o1[<span class="number">0</span>];</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">return</span> o1[<span class="number">1</span>]-o2[<span class="number">1</span>];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span>[][] reconstructQueue(<span class="type">int</span>[][] people) &#123;</span><br><span class="line">        <span class="keyword">if</span> (people == <span class="literal">null</span> || people.length == <span class="number">0</span> || people[<span class="number">0</span>].length == <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">0</span>][<span class="number">0</span>];</span><br><span class="line">        &#125;</span><br><span class="line">        Arrays.sort(people,<span class="keyword">new</span> <span class="title class_">myComparator</span>());<span class="comment">// equals to Arrays.sort(people, (a, b) -&gt; (a[0] == b[0] ? a[1] - b[1] : b[0] - a[0]));</span></span><br><span class="line">        List&lt;<span class="type">int</span>[]&gt; queue = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span>[] p:people)&#123;</span><br><span class="line">            queue.add(p[<span class="number">1</span>],p);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> queue.toArray(<span class="keyword">new</span> <span class="title class_">int</span>[queue.size()][]);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h4 id="5-121-Best-Time-to-Buy-and-Sell-Stock-Easy"><a href="#5-121-Best-Time-to-Buy-and-Sell-Stock-Easy" class="headerlink" title="5. 121. Best Time to Buy and Sell Stock (Easy)"></a>5. 121. Best Time to Buy and Sell Stock (Easy)</h4><p>给定一个数组 prices ，它的第 i 个元素 prices[i] 表示一支给定股票第 i 天的价格。</p>
<p>你只能选择 某一天 买入这只股票，并选择在 未来的某一个不同的日子 卖出该股票。设计一个算法来计算你所能获取的最大利润。</p>
<p>返回你可以从这笔交易中获取的最大利润。如果你不能获取任何利润，返回 0 。</p>
<p><strong>示例 1：</strong></p>
<p><code>输入：[7,1,5,3,6,4]</code><br><code>输出：5</code><br><code>解释：在第 2 天（股票价格 = 1）的时候买入，在第 5 天（股票价格 = 6）的时候卖出，最大利润 = 6-1 = 5 。      注意利润不能是 7-1 = 6, 因为卖出价格需要大于买入价格；同时，你不能在买入前卖出股票。</code></p>
<p><strong>Idea:</strong></p>
<p>只要记录前面的最小价格，将这个最小价格作为买入价格，然后将当前的价格作为售出价格，查看当前收益是不是最大收益。</p>
<p><strong>Solution:</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="type">int</span> <span class="title function_">maxProfit</span><span class="params">(<span class="type">int</span>[] prices)</span> &#123;</span><br><span class="line">   <span class="type">int</span> <span class="variable">n</span> <span class="operator">=</span> prices.length;</span><br><span class="line">   <span class="keyword">if</span> (n == <span class="number">0</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">   <span class="type">int</span> <span class="variable">soFarMin</span> <span class="operator">=</span> prices[<span class="number">0</span>];</span><br><span class="line">   <span class="type">int</span> <span class="variable">max</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">   <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt; n; i++) &#123;</span><br><span class="line">       <span class="keyword">if</span> (soFarMin &gt; prices[i]) soFarMin = prices[i];</span><br><span class="line">       <span class="keyword">else</span> max = Math.max(max, prices[i] - soFarMin);</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">return</span> max;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure>



<h4 id="6-122-Best-Time-to-Buy-and-Sell-Stock-II-Easy"><a href="#6-122-Best-Time-to-Buy-and-Sell-Stock-II-Easy" class="headerlink" title="6. 122. Best Time to Buy and Sell Stock II (Easy)"></a>6. 122. Best Time to Buy and Sell Stock II (Easy)</h4><p>给你一个整数数组 prices ，其中 prices[i] 表示某支股票第 i 天的价格。</p>
<p>在每一天，你可以决定是否购买和&#x2F;或出售股票。你在任何时候 最多 只能持有 一股 股票。你也可以先购买，然后在 同一天 出售。</p>
<p>返回 你能获得的 最大 利润 。</p>
<p><code>输入：prices = [7,1,5,3,6,4]</code><br><code>输出：7</code><br><code>解释：在第 2 天（股票价格 = 1）的时候买入，在第 3 天（股票价格 = 5）的时候卖出, 这笔交易所能获得利润 = 5 - 1 = 4。 随后，在第 4 天（股票价格 = 3）的时候买入，在第 5 天（股票价格 = 6）的时候卖出, 这笔交易所能获得利润 = 6 - 3 = 3。总利润为 4 + 3 = 7 。</code></p>
<p><strong>Idea:</strong></p>
<p>题目描述：可以进行多次交易，多次交易之间不能交叉进行，可以进行多次交易。</p>
<p>对于 [a, b, c, d]，如果有 a &lt;&#x3D; b &lt;&#x3D; c &lt;&#x3D; d ，那么最大收益为 d - a。而 d - a &#x3D; (d - c) + (c - b) + (b - a) ，因此当访问到一个 prices[i] 且 prices[i] - prices[i-1] &gt; 0，那么就把 prices[i] - prices[i-1] 添加到收益中。</p>
<p><strong>Solution:</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">maxProfit</span><span class="params">(<span class="type">int</span>[] prices)</span> &#123;</span><br><span class="line">    <span class="type">int</span> <span class="variable">profit</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt; prices.length; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (prices[i] &gt; prices[i - <span class="number">1</span>]) &#123;</span><br><span class="line">            profit += (prices[i] - prices[i - <span class="number">1</span>]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> profit;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="Linked-List"><a href="#Linked-List" class="headerlink" title="Linked List"></a>Linked List</h3><p>什么是链表，链表是一种通过指针串联在一起的线性结构，每一个节点由两部分组成，一个是数据域一个是指针域（存放指向下一个节点的指针），最后一个节点的指针域指向null（空指针的意思）。</p>
<p>链表的入口节点称为链表的头结点也就是head。</p>
<p>如图所示： <img src="/../images/20200806194529815.png" alt="链表1"></p>
<p>了解完链表的类型，再来说一说链表在内存中的存储方式。</p>
<p>数组是在内存中是连续分布的，但是链表在内存中可不是连续分布的。</p>
<p>链表是通过指针域的指针链接在内存中各个节点。</p>
<p>所以链表中的节点在内存中不是连续分布的 ，而是散乱分布在内存中的某地址上，分配机制取决于操作系统的内存管理。</p>
<p>如图所示：</p>
<p><img src="/../images/20200806194613920.png" alt="链表3"></p>
<p>这个链表起始节点为2， 终止节点为7， 各个节点分布在内存的不同地址空间上，通过指针串联在一起。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ListNode</span> &#123;</span><br><span class="line">    <span class="comment">// 结点的值</span></span><br><span class="line">    <span class="type">int</span> val;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 下一个结点</span></span><br><span class="line">    ListNode next;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 节点的构造函数(无参)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">ListNode</span><span class="params">()</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 节点的构造函数(有一个参数)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">ListNode</span><span class="params">(<span class="type">int</span> val)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.val = val;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 节点的构造函数(有两个参数)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">ListNode</span><span class="params">(<span class="type">int</span> val, ListNode next)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.val = val;</span><br><span class="line">        <span class="built_in">this</span>.next = next;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">JavaScript:</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">ListNode</span> &#123;</span><br><span class="line">  val;</span><br><span class="line">  next = <span class="literal">null</span>;</span><br><span class="line">  constructor(value) &#123;</span><br><span class="line">    <span class="built_in">this</span>.val = value;</span><br><span class="line">    <span class="built_in">this</span>.next = <span class="literal">null</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<p><img src="/../images/DSA/Page1.jpg" alt="Page1"></p>
<p><img src="/.com//Page2.jpg" alt="Page2"><img src="/../images/DSA/Page3.jpg" alt="Page1"></p>
<p><img src="/../images/DSA/Page4.jpg" alt="Page3"><img src="/../images/DSA/Page5.jpg" alt="Page4"><img src="/../images/DSA/Page6.jpg" alt="Page5"><img src="/../images/DSA/Page7.jpg" alt="Page6"><img src="/../images/DSA/Page8.jpg" alt="Page7"><img src="/../images/DSA/Page8.jpg" alt="Page8"><img src="/../images/DSA/Page9.jpg" alt="Page9"><img src="/../images/DSA/Page10.jpg" alt="Page10"><img src="/../images/DSA/Page11.jpg" alt="Page11"><img src="/../images/DSA/Page12.jpg" alt="Page12"></p>
<h3 id="Trees"><a href="#Trees" class="headerlink" title="Trees"></a>Trees</h3><h4 id="leetcode-104"><a href="#leetcode-104" class="headerlink" title="leetcode 104"></a>leetcode 104</h4><p><img src="/../images/DSA/Page13.jpg" alt="Page13"><img src="/../images/DSA/Page14.jpg" alt="Page14"><img src="/../images/DSA/Page15.jpg" alt="Page15"><img src="/../images/DSA/Page16.jpg" alt="Page16"><img src="/../images/DSA/Page17.jpg" alt="Page17"><img src="/../images/DSA/Page18.jpg" alt="Page18"><img src="/../images/DSA/Page19.jpg" alt="Page19"><img src="/../images/DSA/Page20.jpg" alt="Page20"><img src="/../images/DSA/Page21.jpg" alt="Page21"><img src="/../images/DSA/Page22.jpg" alt="Page22"><img src="/../images/DSA/Page23.jpg" alt="Page23"><img src="/../images/DSA/Page24.jpg" alt="Page24"><img src="/../images/DSA/Page25.jpg" alt="Page25"><img src="/../images/DSA/Page26.jpg" alt="Page26"><img src="/../images/DSA/Page27.jpg" alt="Page27"></p>
<h3 id="Double-pointers"><a href="#Double-pointers" class="headerlink" title="Double pointers"></a>Double pointers</h3><h4 id="leetcode-167"><a href="#leetcode-167" class="headerlink" title="leetcode 167"></a>leetcode 167</h4><p><img src="/../images/DSA/p1.jpg" alt="p1"></p>
<p><img src="/../images/DSA/p2.jpg" alt="p2"></p>
<h3 id="Sorting"><a href="#Sorting" class="headerlink" title="Sorting"></a>Sorting</h3><p><img src="/../images/DSA/p3.jpg" alt="p3"></p>
<p><img src="/../images/DSA/p4.jpg" alt="p4"></p>
<p><img src="/../images/p5.jpg" alt="p5"></p>
<p><img src="/../images/DSA/p6.jpg" alt="p6"></p>
<p><img src="/../images/DSA/p7.jpg" alt="p7"></p>
<p><img src="/../images/DSA/p8.jpg" alt="p8"></p>
<p><img src="/../images/DSA/p9.jpg" alt="p9"></p>
<p><img src="/../images/DSA/p10.jpg" alt="p10"></p>
<p><img src="/../images/DSA/p11.jpg" alt="p11"></p>
<p><img src="/../images/DSA/p12.jpg" alt="p12"></p>
<p><img src="/../images/DSA/p13.jpg" alt="p13"></p>
<p><img src="/../images/DSA/p14.jpg" alt="p14"></p>
<p><img src="/../images/DSA/p15.jpg" alt="p15"></p>
<p><img src="/../images/DSA/p16.jpg" alt="p16"></p>
<p><img src="/../images/DSA/p17.jpg" alt="p17"></p>
<p><img src="/../images/DSA/p18.jpg" alt="p18"></p>
<p><img src="/../images/DSA/p19.jpg" alt="p19"></p>
<p><img src="/../images/DSA/p20.jpg" alt="p20"></p>
<p><img src="/../images/DSA/p21.jpg" alt="p21"></p>
<h3 id="Arrays"><a href="#Arrays" class="headerlink" title="Arrays"></a>Arrays</h3><h4 id="leetcode-704"><a href="#leetcode-704" class="headerlink" title="leetcode 704"></a>leetcode 704</h4><p>我们定义 target 是在一个在左闭右闭的区间里，<strong>也就是[left, right] （这个很重要非常重要）</strong>。</p>
<p>区间的定义这就决定了二分法的代码应该如何写，<strong>因为定义target在[left, right]区间，所以有如下两点：</strong></p>
<ul>
<li>while (left &lt;&#x3D; right) 要使用 &lt;&#x3D; ，因为left &#x3D;&#x3D; right是有意义的，所以使用 &lt;&#x3D;</li>
<li>if (nums[middle] &gt; target) right 要赋值为 middle - 1，因为当前这个nums[middle]一定不是target，那么接下来要查找的左区间结束下标位置就是 middle - 1</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="type">int</span> <span class="title function_">search</span><span class="params">(<span class="type">int</span>[] nums, <span class="type">int</span> target)</span> &#123;</span><br><span class="line">  <span class="type">int</span> <span class="variable">left</span> <span class="operator">=</span> <span class="number">0</span>, right = nums.length-<span class="number">1</span>;</span><br><span class="line">  <span class="keyword">while</span>(left&lt;=right)&#123;</span><br><span class="line">  <span class="type">int</span> <span class="variable">mid</span> <span class="operator">=</span> left + ((right - left) &gt;&gt; <span class="number">1</span>);</span><br><span class="line">  <span class="keyword">if</span>(target&gt;nums[mid]) left = mid+<span class="number">1</span>;</span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">if</span>(target&lt;nums[mid]) right = mid-<span class="number">1</span>;</span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">return</span> mid;</span><br><span class="line">	&#125;</span><br><span class="line"><span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure>

<h3 id="leetcode-27"><a href="#leetcode-27" class="headerlink" title="leetcode 27"></a>leetcode 27</h3><p><strong>Brute</strong></p>
<p>0,1,2,3,3,0,4,2</p>
<p>0,1,3,3,0,4,2,[2]</p>
<p>0,1,3,3,0,4,[2,2]</p>
<p>1,3,3,4,5 i&#x3D;1 result &#x3D; 5</p>
<p>1,3,4,5,[5] i&#x3D;1 result &#x3D; 4</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="type">int</span> <span class="title function_">removeElement</span><span class="params">(<span class="type">int</span>[] nums, <span class="type">int</span> val)</span> &#123;</span><br><span class="line">    <span class="type">int</span> result=nums.length;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>;i&lt;result;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(nums[i]==val)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j=i+<span class="number">1</span>;j&lt;result;j++)&#123;</span><br><span class="line">                nums[j-<span class="number">1</span>]=nums[j];</span><br><span class="line">            &#125;</span><br><span class="line">            result--;</span><br><span class="line">            i--;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>Fast and slow pointer</strong></p>
<p><img src="/../images/gif0_dsa.gif" alt="gif0_dsa"></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"> <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">removeElement</span><span class="params">(<span class="type">int</span>[] nums, <span class="type">int</span> val)</span> &#123;</span><br><span class="line"><span class="comment">// 快慢指针</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">slowIndex</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">fastIndex</span> <span class="operator">=</span> <span class="number">0</span>; fastIndex &lt; nums.length; fastIndex++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (nums[fastIndex] != val) &#123;</span><br><span class="line">                nums[slowIndex] = nums[fastIndex];</span><br><span class="line">                slowIndex++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> slowIndex;</span><br><span class="line">    </span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//相向双指针法</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">removeElement</span><span class="params">(<span class="type">int</span>[] nums, <span class="type">int</span> val)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">left</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">right</span> <span class="operator">=</span> nums.length - <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span>(right &gt;= <span class="number">0</span> &amp;&amp; nums[right] == val) right--; <span class="comment">//将right移到从右数第一个值不为val的位置</span></span><br><span class="line">        <span class="keyword">while</span>(left &lt;= right) &#123;</span><br><span class="line">            <span class="keyword">if</span>(nums[left] == val) &#123; <span class="comment">//left位置的元素需要移除</span></span><br><span class="line">                <span class="comment">//将right位置的元素移到left（覆盖），right位置移除</span></span><br><span class="line">                nums[left] = nums[right];</span><br><span class="line">                right--;</span><br><span class="line">            &#125;</span><br><span class="line">            left++;</span><br><span class="line">            <span class="keyword">while</span>(right &gt;= <span class="number">0</span> &amp;&amp; nums[right] == val) right--;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> left;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<iframe src="//player.bilibili.com/player.html?aid=896973525&bvid=BV12A4y1Z7LP&cid=731188361&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe>



<h3 id="Leetcode-977"><a href="#Leetcode-977" class="headerlink" title="Leetcode 977"></a>Leetcode 977</h3><p>给你一个按 <strong>非递减顺序</strong> 排序的整数数组 <code>nums</code>，返回 <strong>每个数字的平方</strong> 组成的新数组，要求也按 <strong>非递减顺序</strong> 排序。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">输入：nums = [-4,-1,0,3,10]</span><br><span class="line">输出：[0,1,9,16,100]</span><br><span class="line">解释：平方后，数组变为 [16,1,0,9,100]</span><br><span class="line">排序后，数组变为 [0,1,9,16,100]</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> <span class="variable">right</span> <span class="operator">=</span> nums.length-<span class="number">1</span>;</span><br><span class="line"><span class="type">int</span> <span class="variable">left</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"><span class="comment">//construct a new array to store otherwise it will cause o(n^2) in time complexity</span></span><br><span class="line"><span class="type">int</span>[] result = <span class="keyword">new</span> <span class="title class_">int</span>[nums.length];</span><br><span class="line"><span class="type">int</span> <span class="variable">index</span> <span class="operator">=</span> result.length - <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(left&lt;=right)&#123;</span><br><span class="line"><span class="keyword">if</span>(nums[left]*nums[left]&gt;nums[right]*nums[right])&#123;</span><br><span class="line">    result[index]=nums[left]*nums[left];</span><br><span class="line">    index--;</span><br><span class="line">    left++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    result[index]=nums[right]*nums[right];</span><br><span class="line">    index--;</span><br><span class="line">    right--;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<iframe src="//player.bilibili.com/player.html?aid=597240875&bvid=BV1QB4y1D7ep&cid=737799572&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe>



<h3 id="Leetcode-209"><a href="#Leetcode-209" class="headerlink" title="Leetcode 209"></a>Leetcode 209</h3><p>给定一个含有 n 个正整数的数组和一个正整数 target 。</p>
<p>找出该数组中满足其和 ≥ target 的长度最小的 连续子数组 [nums_l, nums_l+1, …, nums_r-1, nums_r] ，并返回其长度。如果不存在符合条件的子数组，返回 0 。</p>
<p>示例 1：</p>
<p>输入：target &#x3D; 7, nums &#x3D; [2,3,1,2,4,3]<br>输出：2<br>解释：子数组 [4,3] 是该条件下的长度最小的子数组。<br>示例 2：</p>
<p>输入：target &#x3D; 4, nums &#x3D; [1,4,4]<br>输出：1<br>示例：3</p>
<p>输入：target &#x3D; 11, nums &#x3D; [1,1,1,1,1,1,1,1]<br>输出：0</p>
<p><strong>Brute</strong></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">minSubArrayLen</span><span class="params">(<span class="type">int</span> s, vector&lt;<span class="type">int</span>&gt;&amp; nums)</span> </span>&#123;</span><br><span class="line">        <span class="type">int</span> result = INT32_MAX; <span class="comment">// 最终的结果</span></span><br><span class="line">        <span class="type">int</span> sum = <span class="number">0</span>; <span class="comment">// 子序列的数值之和</span></span><br><span class="line">        <span class="type">int</span> subLength = <span class="number">0</span>; <span class="comment">// 子序列的长度</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; nums.<span class="built_in">size</span>(); i++) &#123; <span class="comment">// 设置子序列起点为i</span></span><br><span class="line">            sum = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> j = i; j &lt; nums.<span class="built_in">size</span>(); j++) &#123; <span class="comment">// 设置子序列终止位置为j</span></span><br><span class="line">                sum += nums[j];</span><br><span class="line">                <span class="keyword">if</span> (sum &gt;= s) &#123; <span class="comment">// 一旦发现子序列和超过了s，更新result</span></span><br><span class="line">                    subLength = j - i + <span class="number">1</span>; <span class="comment">// 取子序列的长度</span></span><br><span class="line">                    result = result &lt; subLength ? result : subLength;</span><br><span class="line">                    <span class="keyword">break</span>; <span class="comment">// 因为我们是找符合条件最短的子序列，所以一旦符合条件就break</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 如果result没有被赋值的话，就返回0，说明没有符合条件的子序列</span></span><br><span class="line">        <span class="keyword">return</span> result == INT32_MAX ? <span class="number">0</span> : result;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>



<p><strong>Sliding Windows:</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"> <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">minSubArrayLen</span><span class="params">(<span class="type">int</span> s, <span class="type">int</span>[] nums)</span> &#123;</span><br><span class="line">    <span class="type">int</span> <span class="variable">left</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> <span class="variable">sum</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> <span class="variable">result</span> <span class="operator">=</span> Integer.MAX_VALUE;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">right</span> <span class="operator">=</span> <span class="number">0</span>; right &lt; nums.length; right++) &#123;</span><br><span class="line">        sum += nums[right];</span><br><span class="line">        <span class="keyword">while</span> (sum &gt;= s) &#123;</span><br><span class="line">            result = Math.min(result, right - left + <span class="number">1</span>);</span><br><span class="line">            sum -= nums[left];</span><br><span class="line">          	left++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> result == Integer.MAX_VALUE ? <span class="number">0</span> : result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><img src="/../images/gif1_dsa.gif" alt="gif1_dsa"></p>
<h3 id="Leetcode-59"><a href="#Leetcode-59" class="headerlink" title="Leetcode 59"></a>Leetcode 59</h3><p>注意边界条件, 坚持左闭右开的原则.</p>
<p>循环的次数等于n&#x2F;2</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="type">int</span>[][] generateMatrix(<span class="type">int</span> n) &#123;</span><br><span class="line">        <span class="type">int</span> start=<span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span> count=<span class="number">1</span>;</span><br><span class="line">        <span class="type">int</span> loop=<span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span>[][] nums = <span class="keyword">new</span> <span class="title class_">int</span>[n][n]; </span><br><span class="line">        <span class="type">int</span> i,j;</span><br><span class="line">        <span class="keyword">while</span>(loop++&lt;n/<span class="number">2</span>)&#123;</span><br><span class="line">            <span class="keyword">for</span>(j = start ; j&lt;n-loop ; j++)&#123;</span><br><span class="line">               nums[start][j] = count++;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">for</span>(i = start;i&lt;n-loop;i++)&#123;</span><br><span class="line">                nums[i][j]=count++;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">for</span>(;j&gt;=loop;j--)&#123;</span><br><span class="line">                nums[i][j]=count++;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">for</span>(;i&gt;=loop;i--)&#123;</span><br><span class="line">                nums[i][j]=count++;</span><br><span class="line">            &#125;</span><br><span class="line">            start++;</span><br><span class="line">        &#125;</span><br><span class="line">           <span class="keyword">if</span>(n%<span class="number">2</span>==<span class="number">1</span>)&#123;</span><br><span class="line">                nums[n/<span class="number">2</span>][n/<span class="number">2</span>]=n*n;</span><br><span class="line">            &#125;</span><br><span class="line">        <span class="keyword">return</span> nums;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>



<h3 id="Summary-of-Array"><a href="#Summary-of-Array" class="headerlink" title="Summary of Array"></a>Summary of Array</h3><ul>
<li><strong>数组下标都是从0开始的。</strong></li>
<li><strong>数组内存空间的地址是连续的</strong></li>
</ul>
<p>正是<strong>因为数组的在内存空间的地址是连续的，所以我们在删除或者增添元素的时候，就难免要移动其他元素的地址。</strong></p>
<p>我们来举一个Java的例子，例如： <code>int[][] rating = new int[3][4];</code> ， 这个二维数组在内存空间可不是一个 <code>3*4</code> 的连续地址空间</p>
<p>看了下图，就应该明白了：</p>
<p><img src="/../images/%E7%AE%97%E6%B3%95%E9%80%9A%E5%85%B3%E6%95%B0%E7%BB%843.png" alt="算法通关数组3"></p>
<p>所以<strong>Java的二维数组在内存中不是 <code>3\*4</code> 的连续地址空间，而是四条连续的地址空间组成！</strong></p>
<h3 id="Hash-table"><a href="#Hash-table" class="headerlink" title="Hash table"></a>Hash table</h3><h3 id="哈希碰撞"><a href="#哈希碰撞" class="headerlink" title="哈希碰撞"></a>哈希碰撞</h3><p>如图所示，小李和小王都映射到了索引下标 1 的位置，<strong>这一现象叫做哈希碰撞</strong>。</p>
<p><img src="/../images/2021010423494884.png" alt="哈希表3"></p>
<p>一般哈希碰撞有两种解决方法， 拉链法和线性探测法。</p>
<h3 id="拉链法"><a href="#拉链法" class="headerlink" title="#拉链法"></a><a href="https://programmercarl.com/%E5%93%88%E5%B8%8C%E8%A1%A8%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80.html#%E6%8B%89%E9%93%BE%E6%B3%95">#</a>拉链法</h3><p>刚刚小李和小王在索引1的位置发生了冲突，发生冲突的元素都被存储在链表中。 这样我们就可以通过索引找到小李和小王了</p>
<p><img src="/../images/20210104235015226.png" alt="哈希表4"></p>
<p>（数据规模是dataSize， 哈希表的大小为tableSize）</p>
<p>其实拉链法就是要选择适当的哈希表的大小，这样既不会因为数组空值而浪费大量内存，也不会因为链表太长而在查找上浪费太多时间。</p>
<h3 id="线性探测法"><a href="#线性探测法" class="headerlink" title="#线性探测法"></a><a href="https://programmercarl.com/%E5%93%88%E5%B8%8C%E8%A1%A8%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80.html#%E7%BA%BF%E6%80%A7%E6%8E%A2%E6%B5%8B%E6%B3%95">#</a>线性探测法</h3><p>使用线性探测法，一定要保证tableSize大于dataSize。 我们需要依靠哈希表中的空位来解决碰撞问题。</p>
<p>例如冲突的位置，放了小李，那么就向下找一个空位放置小王的信息。所以要求tableSize一定要大于dataSize ，要不然哈希表上就没有空置的位置来存放 冲突的数据了。如图所示：</p>
<p><img src="https://code-thinking-1253855093.file.myqcloud.com/pics/20210104235109950.png" alt="哈希表5"></p>
<p>其实关于哈希碰撞还有非常多的细节，感兴趣的同学可以再好好研究一下，这里我就不再赘述了。</p>
<p>hash表是牺牲空间减少时间cost</p>
<h3 id="Leetcode-242"><a href="#Leetcode-242" class="headerlink" title="Leetcode 242"></a>Leetcode 242</h3><p>给定两个字符串 s 和 t ，编写一个函数来判断 t 是否是 s 的字母异位词。</p>
<p>示例 1: 输入: s &#x3D; “anagram”, t &#x3D; “nagaram” 输出: true</p>
<p>示例 2: 输入: s &#x3D; “rat”, t &#x3D; “car” 输出: false</p>
<p><strong>说明:</strong> 你可以假设字符串只包含小写字母。</p>
<p><img src="/../images/242.%E6%9C%89%E6%95%88%E7%9A%84%E5%AD%97%E6%AF%8D%E5%BC%82%E4%BD%8D%E8%AF%8D.gif" alt="242.有效的字母异位词"></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isAnagram</span><span class="params">(String s, String t)</span> &#123;</span><br><span class="line">        Map&lt;Character,Integer&gt; map = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">char</span> c:s.toCharArray())&#123;</span><br><span class="line">            map.put(c,map.getOrDefault(c,<span class="number">0</span>)+<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; t.length(); i++) &#123;</span><br><span class="line">            <span class="type">char</span> <span class="variable">c</span> <span class="operator">=</span> t.charAt(i);</span><br><span class="line">            <span class="type">int</span> <span class="variable">count</span> <span class="operator">=</span> map.getOrDefault(c, <span class="number">0</span>);</span><br><span class="line">            <span class="keyword">if</span> (count == <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (count == <span class="number">1</span>) &#123;</span><br><span class="line">                map.remove(c);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                map.put(c, count - <span class="number">1</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> map.isEmpty();</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<p>更简单的做法是用数组</p>
<p><strong>数组其实就是一个简单哈希表</strong>，而且这道题目中字符串只有小写字符，那么就可以定义一个数组，来记录字符串s里字符出现的次数。需要定义一个多大的数组呢，定一个数组叫做record，大小为26 就可以了，初始化为0，因为字符a到字符z的ASCII也是26个连续的数值。</p>
<p>定义一个数组叫做record用来上记录字符串s里字符出现的次数。</p>
<p>需要把字符映射到数组也就是哈希表的索引下标上，<strong>因为字符a到字符z的ASCII是26个连续的数值，所以字符a映射为下标0，相应的字符z映射为下标25。</strong></p>
<p>再遍历 字符串s的时候，<strong>只需要将 s[i] - ‘a’ 所在的元素做+1 操作即可，并不需要记住字符a的ASCII，只要求出一个相对数值就可以了。</strong> 这样就将字符串s中字符出现的次数，统计出来了。</p>
<p>那看一下如何检查字符串t中是否出现了这些字符，同样在遍历字符串t的时候，对t中出现的字符映射哈希表索引上的数值再做-1的操作。</p>
<p>那么最后检查一下，<strong>record数组如果有的元素不为零0，说明字符串s和t一定是谁多了字符或者谁少了字符，return false。</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 242. 有效的字母异位词 字典解法</span></span><br><span class="line"><span class="comment"> * 时间复杂度O(m+n) 空间复杂度O(1)</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isAnagram</span><span class="params">(String s, String t)</span> &#123;</span><br><span class="line">        <span class="type">int</span>[] record = <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">26</span>];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; s.length(); i++) &#123;</span><br><span class="line">            record[s.charAt(i) - <span class="string">&#x27;a&#x27;</span>]++;     <span class="comment">// 并不需要记住字符a的ASCII，只要求出一个相对数值就可以了</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; t.length(); i++) &#123;</span><br><span class="line">            record[t.charAt(i) - <span class="string">&#x27;a&#x27;</span>]--;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> count: record) &#123;</span><br><span class="line">            <span class="keyword">if</span> (count != <span class="number">0</span>) &#123;               <span class="comment">// record数组如果有的元素不为零0，说明字符串s和t 一定是谁多了字符或者谁少了字符。</span></span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;                        <span class="comment">// record数组所有元素都为零0，说明字符串s和t是字母异位词</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h3 id="Leetcode-349"><a href="#Leetcode-349" class="headerlink" title="Leetcode 349"></a>Leetcode 349</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="type">int</span>[] intersection(<span class="type">int</span>[] nums1, <span class="type">int</span>[] nums2) &#123;</span><br><span class="line">    <span class="keyword">if</span>(nums1==<span class="literal">null</span>||nums2==<span class="literal">null</span>||nums1.length==<span class="number">0</span>||nums2.length==<span class="number">0</span>)&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">0</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    Set&lt;Integer&gt; set = <span class="keyword">new</span> <span class="title class_">HashSet</span>&lt;&gt;();</span><br><span class="line">    Set&lt;Integer&gt; resSet = <span class="keyword">new</span> <span class="title class_">HashSet</span>&lt;&gt;();</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i:nums1)&#123;</span><br><span class="line">        set.add(i);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i:nums2)&#123;</span><br><span class="line">        <span class="keyword">if</span>(set.contains(i))&#123;</span><br><span class="line">            resSet.add(i);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">     <span class="type">int</span>[] arr = <span class="keyword">new</span> <span class="title class_">int</span>[resSet.size()];</span><br><span class="line">        <span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i : resSet)&#123;</span><br><span class="line">            arr[j++] = i;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> arr;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>



<h3 id="Leetcode-202"><a href="#Leetcode-202" class="headerlink" title="Leetcode 202"></a>Leetcode 202</h3><p>这个题讨论3种假设情况</p>
<ol>
<li>最后n1-&gt;n2-&gt;…-&gt;1 true</li>
<li>最后循环下来了,n1-&gt;n2-&gt;…-&gt;n1 false</li>
<li>越加越大</li>
</ol>
<p>但是事实上不会越加越大，拿9来举例，9^2&#x3D;81,99-&gt;162, ….999-&gt;243,9999-&gt;324,99999-&gt;405这样加下去，不会超其本身，所以不会越加越大。所以我们只需要讨论前两种方案，只要在循环过程中出现了重复的，就停止循环并返回，出现1了也停止循环并返回。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isHappy</span><span class="params">(<span class="type">int</span> n)</span> &#123;</span><br><span class="line">        Set&lt;Integer&gt; record = <span class="keyword">new</span> <span class="title class_">HashSet</span>&lt;&gt;();</span><br><span class="line">        <span class="keyword">while</span> (n != <span class="number">1</span> &amp;&amp; !record.contains(n)) &#123;</span><br><span class="line">            record.add(n);</span><br><span class="line">            n = getNextNumber(n);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> n == <span class="number">1</span>;</span><br><span class="line">         </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> <span class="title function_">getNextNumber</span><span class="params">(<span class="type">int</span> n)</span>&#123;</span><br><span class="line">    <span class="type">int</span> res=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(n&gt;<span class="number">0</span>)&#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">temp</span> <span class="operator">=</span> n%<span class="number">10</span>;</span><br><span class="line">        res+=temp*temp;</span><br><span class="line">        n=n/<span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h3 id="Leetcode-1"><a href="#Leetcode-1" class="headerlink" title="Leetcode 1"></a>Leetcode 1</h3><p><strong>Brute force:</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"> <span class="keyword">public</span> <span class="type">int</span>[] twoSum(<span class="type">int</span>[] nums, <span class="type">int</span> target) &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;nums.length;i++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;nums.length;j++)&#123;</span><br><span class="line">                <span class="keyword">if</span>(i==j)&#123;</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span>((nums[i]+nums[j])==target)&#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">int</span>[]&#123;i,j&#125;;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<p><strong>HashMap:</strong></p>
<p>本解法有四个重点：</p>
<ul>
<li>为什么会想到用哈希表</li>
<li>哈希表为什么用map</li>
<li>本题map是用来存什么的</li>
<li>map中的key和value用来存什么的</li>
</ul>
<p>map目的用来存放我们访问过的元素，因为遍历数组的时候，需要记录我们之前遍历过哪些元素和对应的下标，这样才能找到与当前元素相匹配的（也就是相加等于target）</p>
<p>接下来是map中key和value分别表示什么。</p>
<p>这道题 我们需要 给出一个元素，判断这个元素是否出现过，如果出现过，返回这个元素的下标。</p>
<p>那么判断元素是否出现，这个元素就要作为key，所以数组中的元素作为key，有key对应的就是value，value用来存下标。</p>
<p>所以 map中的存储结构为 {key：数据元素，value：数组元素对应的下标}。</p>
<p>在遍历数组的时候，只需要向map去查询是否有和目前遍历元素匹配的数值，如果有，就找到的匹配对，如果没有，就把目前遍历的元素放进map中，因为map存放的就是我们访问过的元素。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="type">int</span>[] twoSum(<span class="type">int</span>[] nums, <span class="type">int</span> target) &#123;</span><br><span class="line">    <span class="type">int</span>[] res = <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">2</span>];</span><br><span class="line">    <span class="keyword">if</span>(nums==<span class="literal">null</span>||nums.length==<span class="number">0</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">    Map&lt;Integer,Integer&gt; map = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;nums.length;i++)&#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">temp</span> <span class="operator">=</span> target-nums[i];</span><br><span class="line">        <span class="keyword">if</span>(map.containsKey(temp))&#123;</span><br><span class="line">            res[<span class="number">0</span>]=i;</span><br><span class="line">            res[<span class="number">1</span>]=map.get(temp);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        map.put(nums[i],i);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br></pre></td></tr></table></figure>



<h3 id="Leetcode-454"><a href="#Leetcode-454" class="headerlink" title="Leetcode 454"></a>Leetcode 454</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"> <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">fourSumCount</span><span class="params">(<span class="type">int</span>[] nums1, <span class="type">int</span>[] nums2, <span class="type">int</span>[] nums3, <span class="type">int</span>[] nums4)</span> &#123;</span><br><span class="line">        Map&lt;Integer,Integer&gt; map = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">        <span class="type">int</span> temp;</span><br><span class="line">        <span class="type">int</span> res=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i:nums1)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j:nums2)&#123;</span><br><span class="line">                temp=i+j;</span><br><span class="line">                <span class="keyword">if</span> (map.containsKey(temp)) &#123;</span><br><span class="line">                    map.put(temp, map.get(temp) + <span class="number">1</span>);</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    map.put(temp, <span class="number">1</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i:nums3)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j:nums4)&#123;</span><br><span class="line">                temp=i+j;</span><br><span class="line">                <span class="keyword">if</span> (map.containsKey(<span class="number">0</span> - temp)) &#123;</span><br><span class="line">                    res += map.get(<span class="number">0</span> - temp);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>tech</tag>
      </tags>
  </entry>
  <entry>
    <title>Secured Software Engineering</title>
    <url>/2023/04/21/Secured-Software-Engineering/</url>
    <content><![CDATA[<p>The below case studies are given here in advance, they will be part of the final exam. </p>
<p><strong>Case Study 1:</strong> You are part of a team that has been tasked with developing a web-based application for a healthcare organisation. The application will allow doctors to view patient information, including medical history, test results and treatment plans. Patients will also be able to access the application to view their own medical information and communicate with their doctors. The application will be used by a large number of healthcare providers and patients, and therefore security is a top priority. (Provided ahead of the exam) </p>
<p><strong>Case Study 2:</strong> ABC airlines operates a large number of flights globally. In 2021, the airline suffered a significant data breach that affected the personal information of thousands of customers. In response to this breach, ABC airlines invested in a new approach to secure software engineering, including implementing secure coding practices, testing and validating software, and conducting regular security audits. The company has a complex network infrastructure that includes several web servers, database servers, and application servers. (Provided ahead of the exam)</p>
<p><strong>案例研究1</strong>： 你是一个团队的成员，他们的任务是为一个医疗机构开发一个基于网络的应用程序。该应用程序将允许医生查看病人信息，包括病史、测试结果和治疗计划。病人也可以访问该应用程序，查看他们自己的医疗信息，并与他们的医生沟通。该应用程序将被大量的医疗服务提供者和病人使用，因此安全性是重中之重。(该案例研究是期末考试的一部分，在考试前提供给大家)</p>
<p><strong>案例研究2：</strong>ABC航空公司在全球范围内运营着大量的航班。2021年，该航空公司遭受了一次重大的数据泄露事件，影响了成千上万的客户的个人信息。为了应对这一漏洞，ABC航空公司投资了一种新的安全软件工程方法，包括实施安全编码实践，测试和验证软件，并定期进行安全审计。该公司有一个复杂的网络基础设施，包括几个网络服务器、数据库服务器和应用服务器。(在考试前提供)</p>
<p><strong>1.</strong> <strong>Case Study:</strong> You are part of a team that has been tasked with developing a web-based application for a healthcare organization. The application will allow doctors to view patient information, including medical history, test results and treatment plans. Patients will also be able to access the application to view their own medical information and communicate with their doctors. The application will be used by a large number of healthcare providers and patients, so security is a top priority. (This case study is part of the final exam, provided ahead of the exam here)</p>
<p><strong>(a)</strong> Identify and list down five use cases and five misuse cases of the system. [5]</p>
<p>Use Cases:</p>
<ol>
<li>Registration: A new patient can securely register on the platform, providing their personal and contact information, and setting up a strong, unique password.</li>
<li>Medical Record Access: A doctor can access a patient’s medical history, including previous diagnoses, treatment plans, medications, and test results, to make informed decisions regarding the patient’s care.</li>
<li>Appointment Scheduling: Patients can use the application to schedule appointments with their healthcare providers, selecting available dates and times and receiving confirmation notifications.</li>
<li>Secure Messaging: Doctors and patients can communicate via a secure messaging platform within the application, discussing treatment plans, symptoms, and other healthcare-related topics.</li>
<li>Prescription Management: Healthcare providers can securely prescribe medications through the application, enabling patients to access their prescriptions and facilitating communication with pharmacies.</li>
</ol>
<p>Misuse Cases:</p>
<ol>
<li>Unauthorized Access: An attacker gains unauthorized access to a patient’s account, potentially viewing, altering, or deleting sensitive medical information, or even impersonating the patient.</li>
<li>Man-in-the-Middle Attack: An attacker intercepts the communication between the patient and the healthcare provider, potentially modifying the messages sent or received or eavesdropping on sensitive information.</li>
<li>Phishing Attacks: An attacker sends phishing emails or messages to patients, posing as a healthcare provider or the application itself, in an attempt to steal login credentials or other sensitive information.</li>
<li>Distributed Denial-of-Service (DDoS) Attack: An attacker overwhelms the application with a large volume of traffic, causing it to become unresponsive or slow, preventing healthcare providers and patients from accessing necessary information and services.</li>
<li>Security Misconfiguration: The application’s security settings are not properly configured, leaving it vulnerable to attacks and exposing sensitive patient data.</li>
</ol>
<p><strong>(b)</strong> List down five actors and five attackers of the system. [5]</p>
<p><strong>Actors:</strong></p>
<p>Patients, Doctors, Admin, Nurses, Patient Family.</p>
<p><strong>Attackers:</strong> </p>
<p>General attackers, Payment gateway attackers, Nurses, Doctors, Patient Family.</p>
<p><strong>(c)</strong> List down five high-level threats to the system. [5]</p>
<ol>
<li>Insecure authentication</li>
<li>DDoS Attacks</li>
<li>Leakage of patients medical information. Implement a chain of custody to monitor on this system.</li>
<li>Attacker modify the information of patients and drug perscription for patients.</li>
<li>Large size file uploads&#x2F;buffer overflow:</li>
</ol>
<p><strong>(d)</strong> Against each threat what would be your countermeasure? [5]</p>
<ol>
<li><p>Introduce multi-factor authentication.</p>
</li>
<li><p>Add defence against DoS&#x2F;DDoS attacks.</p>
</li>
<li><p>Implement a chain of custody to monitor on this system.</p>
</li>
<li><p>implement logging on website against all actions and audit to be performed by doctors.</p>
</li>
<li><p>implement max size limit for file submission and implement defence against buffer overflow.</p>
</li>
</ol>
<p><strong>2.</strong> <strong>(a)</strong> If requirements are introduced at a later stage in the project, what would be its impact on security?</p>
<p>Support your answer with an example. [3]</p>
<p>it often leads to incomplete or insufficient security measures, making the system vulnerable to threats and attacks. </p>
<ol>
<li>Increased complexity: Adding new requirements can make the system more complex, which in turn makes it harder to analyze and secure. Complex systems are more prone to vulnerabilities, as they have more potential points of failure and attack.</li>
</ol>
<p>Example: Imagine a web application that initially only required user authentication via username and password. If the project scope is changed to include multi-factor authentication, this introduces additional components such as SMS or email verification. The complexity of the system increases, making it more difficult to ensure that all security aspects are correctly implemented and that no vulnerabilities are introduced.</p>
<ol start="2">
<li>Insufficient time for security analysis and testing: Introducing new requirements late in the project often means that there is less time available for security analysis and testing, increasing the likelihood of vulnerabilities remaining undetected.</li>
</ol>
<p>Example: If a new payment feature is added to an e-commerce website just before the project’s deadline, there may not be enough time to perform a thorough security analysis and test all potential attack vectors, such as SQL injection or cross-site scripting vulnerabilities.</p>
<ol start="3">
<li>Cost and resource constraints: Late requirement changes can lead to increased costs and put additional strain on resources. This can result in cutting corners on security measures or failing to allocate enough time for thorough security testing.</li>
</ol>
<p>Example: If a new payment feature is added to an e-commerce website just before the project’s deadline, there may not be enough time to perform a thorough security analysis and test all potential attack vectors, such as SQL injection or cross-site scripting vulnerabilities.</p>
<ol start="4">
<li>Incomplete integration of security measures: New requirements might not be fully compatible with existing security measures, requiring rework or additional implementation to ensure that the overall security posture remains strong.</li>
</ol>
<p>Example: An organization decides to migrate its on-premises infrastructure to the cloud during the project’s later stages. This change requires a reassessment of the security measures in place, as cloud environments have different security considerations compared to on-premises infrastructure. If not addressed properly, this can lead to vulnerabilities in the cloud environment.</p>
<p><strong>(b)</strong> An organisation is performing risk analysis during the development stage for their asset having an </p>
<p>estimated value of £100,000. The exposure factor of the asset is estimated to be 0.25 and annual </p>
<p>rate of occurrence is expected to be 0.5. Mitigating the risk will cost the organization £5,000, is it </p>
<p>feasible to fix the vulnerability in the code or not? [5]</p>
<p>If do not fix the vulnerablity, the annual lost will be £12500</p>
<p>So, it is very worthy to spend £5000 to fix this vulnerability.</p>
<p><strong>(c)</strong> A company wants to do the audit of their software for GDPR compliance. Which three <em>Secure</em> </p>
<p><em>Software Engineering</em> methods you would recommend for this purpose? Give a brief explanation </p>
<p>for each method. [6]</p>
<p><strong>Biometric Recognition Multi-factor Authentication</strong></p>
<p><strong>(d)</strong> In the code given on the next page, identify which variables are considered tainted and identify </p>
<p>any two potential security vulnerabilities in the code and suggest how to fix them (write in your </p>
<p>own words, no coding is required). [6]</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">authenticateUser</span>(<span class="params">username, password</span>) &#123;</span><br><span class="line"></span><br><span class="line"> <span class="keyword">var</span> userCredentials = &#123;</span><br><span class="line"></span><br><span class="line"> <span class="attr">username</span>: username, </span><br><span class="line"></span><br><span class="line"> <span class="attr">password</span>: password </span><br><span class="line"></span><br><span class="line"> &#125;;</span><br><span class="line"></span><br><span class="line"> <span class="keyword">var</span> input = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;input&quot;</span>).<span class="property">value</span>; </span><br><span class="line"></span><br><span class="line"> <span class="keyword">if</span> (<span class="title function_">isValidEmail</span>(input)) &#123;</span><br><span class="line"></span><br><span class="line"> userCredentials.<span class="property">email</span> = input; </span><br><span class="line"></span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"> $.<span class="title function_">post</span>(<span class="string">&quot;/login&quot;</span>, userCredentials, <span class="keyword">function</span>(<span class="params">response</span>) &#123;</span><br><span class="line"></span><br><span class="line"> <span class="keyword">if</span> (response.<span class="property">success</span>) &#123;</span><br><span class="line"></span><br><span class="line"> <span class="title function_">alert</span>(<span class="string">&quot;You are logged in!&quot;</span>);</span><br><span class="line"></span><br><span class="line"> &#125; <span class="keyword">else</span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="title function_">alert</span>(<span class="string">&quot;Authentication failed.&quot;</span>);</span><br><span class="line"></span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"> &#125;);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">isValidEmail</span>(<span class="params">email</span>) &#123;</span><br><span class="line"></span><br><span class="line"> <span class="keyword">var</span> emailRegex = <span class="regexp">/^[^\s@]+@[^\s@]+\.[^\s@]+$/</span>;</span><br><span class="line"></span><br><span class="line"> <span class="keyword">return</span> emailRegex.<span class="title function_">test</span>(email); </span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<ol>
<li>tainted varaibles:</li>
</ol>
<p>userCredentials中的username和userpassword可能受污染，因为他是直接从传入的参数中获得的，</p>
<p>input变量同样是直接从页面中获取的，可能收到污染</p>
<ol start="2">
<li>solution</li>
</ol>
<p>对于用户名和密码，进行表单提交，并且进行表单认证，并且对于用户名和密码进行安全编码，同时对用户的输入进行输入检查，如dompurify的库可以帮助做到这一点</p>
<p>对于发送的 POST 请求，应该使用 HTTPS 协议进行通信，并对用户输入的敏感信息进行加密或者哈希处理，避免被劫持或者窃取。可以使用加密算法、哈希算法或者 SSL&#x2F;TLS 协议来保证通信安全。</p>
<p>代码中有两个潜在的安全漏洞:</p>
<p>跨站脚本漏洞:</p>
<p>代码接受用户输入(用户名和密码)，并直接将其发送到服务器，而没有进行适当的验证或处理。如果攻击者将恶意脚本注入到输入字段中，服务器可能会执行这些脚本，从而可能危及应用程序。</p>
<p>要修复此漏洞，您应该在将用户输入发送到服务器之前对其进行清理和验证。您可以使用像DOMPurify这样的库来净化输入，并创建一个验证函数来检查输入字段中的任何无效字符。</p>
<p>敏感数据的不安全传输:</p>
<p>该代码将用户的凭据(用户名和密码)以明文形式发送到服务器，而不进行任何加密。这可能会将敏感信息暴露给潜在的窃听者或攻击者，特别是在连接没有使用HTTPS保护的情况下。</p>
<p>为了解决这个问题，你应该确保你的网站使用HTTPS，它加密客户端和服务器之间传输的数据。此外，考虑实现更安全的身份验证机制(如OAuth2)或使用密码散列技术(如bcrypt)来安全地存储和传输密码。</p>
<p>(e).</p>
<p>(a). You are being asked to consult with a start-up who are looking to put together a security policy for integrity. You are told that there are three security levels for the objects: o1 &lt; o2 &lt;o3 where o3 is the highest and o1 is the lowest security level. The following table present the associated security levels and categories for the objects (o). The subjects S1 lies on Level 1, S2 lies on Level 2 and S3 lies on Level 3. Fill out the following table to indicate all applicable permissions when the Simple Security Property is applied. Write -p’ for read and ‘-w’ for write and ‘-rw’ for both read and write operations. If a Subject is not authorized to perform any action, leave the cell blank. [8] </p>
<table>
<thead>
<tr>
<th></th>
<th>O1</th>
<th>O2</th>
<th>O3</th>
</tr>
</thead>
<tbody><tr>
<td>S1</td>
<td>-r</td>
<td></td>
<td></td>
</tr>
<tr>
<td>S2</td>
<td>-r</td>
<td>-r</td>
<td></td>
</tr>
<tr>
<td>S3</td>
<td>-r</td>
<td>-r</td>
<td>-r</td>
</tr>
</tbody></table>
<p>Table 1: A security model indicating subject and object integrity levels</p>
<p>(b). How an organization can effectively apply confidentiality and integrity in their software products?</p>
<p>Provide a brief explanation of the consequences.</p>
<p>(c). ABC airlines operates a large number of flights globally. In 2021, the airline suffered a significant data breach that affected the personal information of thousands of customers. In response to this breach, ABC airlines invested in a new approach to secure software engineering, including implementing secure coding practices, testing and validating software, and conducting regular security audits. The company has a complex network infrastructure that includes several web servers, database servers, and application servers. Now, the airline company wants to implement confidentiality and integrity in their system, how it will be done? List any three suggestions.</p>
<p>(d). Why it is important to rank stakeholders in the system? Provide an example scenario and rank 3 different stakeholders in it.</p>
<p>Reason: </p>
<p>The ranking is important to satisfy the competing needs,Contradiction of needs e.g., privacy in one case can conflict with requirement to send name and email in other case.</p>
<p>Candidate stakeholders are: end users, project manager, CEO, CIO, team lead, network admin, db manager, marketing department, legal department and sales team.</p>
<p>Number of external stakeholders is limited</p>
<h1 id="revision"><a href="#revision" class="headerlink" title="revision"></a>revision</h1><h2 id="Risk"><a href="#Risk" class="headerlink" title="Risk"></a>Risk</h2><p><strong>Risk and Risk management</strong></p>
<ul>
<li>﻿﻿Risk is the potential that a given threat will exploit vulnerabilities of an asset or group of assets and thereby cause harm to the organization</li>
<li>﻿﻿Risk management— “Process of identifying, controlling and minimizing or eliminating security risks that may affect information systems, for an acceptable cost.”</li>
<li>﻿﻿Risk assessment—“assessment of threats to, impact on and vulnerabilities of information and information processing facilities and the likelihood of their occurrence.”</li>
</ul>
<p><strong>Who is the enemy? Why do they do it?</strong><br>• Offenders</p>
<ul>
<li>Crackers—mostly teenagers doing as intellectual challenge</li>
<li>Information system’s criminals—Espionage and&#x2F;or<br>Fraud&#x2F;abuse—for a nation&#x2F;company to gain a competitive advantage over its rivals</li>
<li>Vandals—authorized users and strangers (cracker or a criminal)—motivated by anger directed at an individual&#x2F;organization&#x2F;life in general</li>
</ul>
<p><strong>Risk &#x3D; Threats × Vulnerabilities</strong></p>
<table>
<thead>
<tr>
<th>Risk</th>
<th>Threats</th>
<th>Vulnerabilities</th>
</tr>
</thead>
<tbody><tr>
<td>business disruption</td>
<td>angry employees</td>
<td>software bugs</td>
</tr>
<tr>
<td>financial losses</td>
<td>dishonest employees</td>
<td>broken processes</td>
</tr>
<tr>
<td>loss of privacy</td>
<td>criminals</td>
<td>ineffective controls</td>
</tr>
<tr>
<td>damage to reputation</td>
<td>governments</td>
<td>hardware flaws</td>
</tr>
<tr>
<td>loss of confidence</td>
<td>terrorists</td>
<td>business change</td>
</tr>
<tr>
<td>legal penalties</td>
<td>the press</td>
<td>legacy systems</td>
</tr>
<tr>
<td>impaired growth</td>
<td>competitors</td>
<td>Inadequate BCP</td>
</tr>
<tr>
<td>loss of life</td>
<td>hackers</td>
<td>human error</td>
</tr>
<tr>
<td></td>
<td>nature</td>
<td></td>
</tr>
</tbody></table>
<p><strong>Types of Damage</strong></p>
<ul>
<li>﻿﻿Interruption—destroyed&#x2F;unavailable services&#x2F;resources</li>
<li>﻿﻿Interception—unauthorized party snooping or getting access to a resource</li>
<li>﻿﻿Modification— unauthorized party modifying<br> a resource</li>
<li>﻿﻿Fabrication—unauthorized party inserts a fake asset&#x2F;resource</li>
</ul>
<p><strong>The purpose of risk management</strong></p>
<ul>
<li>﻿﻿Ensure overall business and business assets are safe</li>
<li>﻿Protect against competitive disadvantage</li>
<li>﻿Compliance with laws and best business practices</li>
<li>﻿Maintain a good public reputation</li>
</ul>
<p><strong>Accountability for Risk Management</strong></p>
<ul>
<li><p>﻿﻿It is the responsibility of each community of interest to manage risks; each community has a role to play:</p>
</li>
<li><p>﻿﻿Information Security - best understands the threats and attacks that introduce risk into the organization</p>
</li>
<li><p>﻿﻿Management and Users - play a part in the early detection and response process - they also insure sufficient resources are allocated</p>
</li>
<li><p>﻿﻿Information Technology - must assist in building secure systems and operating them safely</p>
</li>
</ul>
<p><img src="/../images/image-20230426143138064.png" alt="image-20230426143138064"></p>
<p><strong>Steps of a risk management plan</strong></p>
<ul>
<li>﻿﻿Step 1: Identify Risk</li>
<li>﻿﻿Step 2: Assess Risk</li>
<li>﻿﻿Step 3: Control Risk</li>
<li>﻿﻿Steps are similar regardless of context (InfoSec, Physical Security, Financial, etc.)</li>
<li>﻿﻿This presentation will focus on controlling risk within an InfoSec context</li>
</ul>
<p><strong>Risk Identification</strong></p>
<ul>
<li><p>﻿﻿The steps to risk identification are:</p>
</li>
<li><p>﻿﻿Identify your organization’s information assets</p>
</li>
<li><p>﻿﻿Classify and categorize said assets into useful groups</p>
</li>
<li><p>﻿﻿Rank assets necessity to the organization</p>
</li>
</ul>
<p>To the right is a simplified example of how a company may identify risks</p>
<p><strong>Risk Assessment</strong></p>
<ul>
<li><p>﻿﻿The steps to risk assessment are:</p>
</li>
<li><p>﻿﻿Identify threats and threat agents</p>
</li>
<li><p>﻿﻿Prioritize threats and threat agents</p>
</li>
<li><p>﻿﻿Assess vulnerabilities in current InfoSec plan</p>
</li>
<li><p>﻿﻿Determine risk of each threat</p>
</li>
</ul>
<p>R&#x3D;P*V-M+ U</p>
<p>​	R&#x3D; Risk</p>
<p>​	P&#x3D; Probability of threat attack</p>
<p>​	V &#x3D; Value of Information Asset</p>
<p>​	M &#x3D; Mitigation by current controls</p>
<p>​	U &#x3D; Uncertainty of vulnerability</p>
<p><strong>Risk control</strong></p>
<ul>
<li>﻿﻿The steps to risk control are:</li>
<li>﻿﻿Cost-Benefit Analysis (CBA)<ul>
<li>﻿﻿Single Loss Expectancy (SLE)</li>
<li>﻿﻿Annualized Rate of Occurrence (ARO)</li>
<li>﻿﻿Annual Loss Expectancy (ALE)</li>
<li>﻿﻿Annual Cost of the Safeguard (ASG)</li>
</ul>
</li>
<li>﻿Feasibility Analysis<ul>
<li>﻿﻿Organizational Feasibility</li>
<li>﻿﻿Operational Feasibility</li>
<li>﻿﻿Technical Feasibility</li>
<li>﻿﻿Political Feasibility</li>
</ul>
</li>
<li>﻿Risk Control Strategy Implementation</li>
</ul>
<p><strong>Cost-Benefit analysis</strong></p>
<ul>
<li><p>﻿Determine what risk control strategies are cost effective</p>
</li>
<li><p>﻿﻿Below are some common formulas used to calculate cost-benefit analysis</p>
</li>
<li><p>﻿﻿SLE &#x3D; AV * EF</p>
<ul>
<li>﻿﻿AV &#x3D; Asset Value, EF &#x3D;<br> Exposure factor (% of asset affected)</li>
</ul>
</li>
<li><p>﻿﻿ALE &#x3D; SLE * ARO</p>
</li>
<li><p>﻿﻿CBA &#x3D; ALE (pre-control) -</p>
<p>ALE (post-control) - ACE(Annually Countermeasure Expectancy)</p>
</li>
</ul>
<p>SLE - single loss expectancy, ALE - Annual loss expectancy, CBA – Cost benefit analysis</p>
<p><strong>Feasibility analysis</strong></p>
<p>Organizational: Does the plan correspond to the organization’s objectives? What is in it for the organization? Does it limit the organization’s capabilities in any way?</p>
<p>Operational: Will shareholders (users, managers, etc.) be able&#x2F;willing to accept the plan? Is the system compatible with the new changes? Have the possible changes been communicated to the employees?</p>
<p>Technical: Is the necessary technology owned or obtainable? Are our employees trained and if not can we afford to train them? Should we hire new employees?</p>
<p>Political: Can InfoSec acquire the necessary budget and approval to implement the plan? Is the budget required justifiable? Does InfoSec have to compete with other departments to acquire the desired budget?</p>
<p><strong>Risk control Strategies</strong></p>
<ul>
<li>﻿﻿Defense</li>
<li>﻿﻿Transferal</li>
<li>﻿﻿Mitigation</li>
<li>﻿﻿Acceptance (Abandonment)</li>
<li>﻿﻿Termination</li>
</ul>
<p><strong>Risk control Strategy: defense</strong></p>
<p>• Defense: Prevent the exploitation of the system via application of policy, training&#x2F;education, and technology. Preferably layered security (defense in depth)</p>
<p>% Counter threats</p>
<p>% Remove vulnerabilities from assess</p>
<p>% Limit access to assets</p>
<p>§ Add protective safeguards</p>
<p>Figure 1-Application Security Layered Approach</p>
<p>![image-20230426144850808](..&#x2F;images&#x2F;:Users:joshua:Library:Application Support:typora-user-images:image-20230426144850808.png)</p>
<p><strong>Risk control Strategy: transferal</strong></p>
<ul>
<li>﻿﻿Transferal: Shift risks to other areas or outside entities to handle</li>
<li>﻿﻿Can include:</li>
</ul>
<p>% Purchasing insurance</p>
<p>• Outsourcing to other organizations</p>
<p>* Implementing service contracts with providers<br> § Revising deployment models</p>
<p>![image-20230426145019527](..&#x2F;images&#x2F;:Users:joshua:Library:Application Support:typora-user-images:image-20230426145019527.png)</p>
<p><strong>Risk control Strategy: Mitigation</strong></p>
<p>![image-20230426145147173](..&#x2F;images&#x2F;:Users:joshua:Library:Application Support:typora-user-images:image-20230426145147173.png)</p>
<p><strong>Risk control Strategy: Acceptance</strong></p>
<p>Appropriate when:</p>
<p>% The cost to protect an asset or assets exceeds the cost to replace it&#x2F;them</p>
<ul>
<li>﻿When the probability of risk is very low and the asset is of low priority</li>
<li>﻿﻿Otherwise acceptance &#x3D; negligence</li>
</ul>
<p><strong>Risk control Strategy: Termination</strong></p>
<ul>
<li>﻿﻿Termination: Removing or discontinuing the information asset from the organization</li>
<li>﻿﻿Examples include:</li>
</ul>
<p>Equipment disposal</p>
<p>Discontinuing a provided service</p>
<p>Firing an employee</p>
<p><strong>Pros and cons of each strategy</strong></p>
<p>![image-20230426145601149](..&#x2F;images&#x2F;:Users:joshua:Library:Application Support:typora-user-images:image-20230426145601149.png)</p>
<p><strong>Standard approaches to risk management</strong></p>
<ul>
<li>﻿﻿U.S CERT’s Operationally Critical Threat Assessment<br> Vulnerability Evaluation (OCTAVE) Methods (Original, OCTAVE-S, OCTAVE-Allegro)</li>
<li>﻿﻿ISO 27005 Standard for InfoSec Risk Management</li>
<li>﻿﻿NIST Risk Management Model</li>
<li>﻿﻿Microsoft Risk Management Approach</li>
<li>﻿﻿Jack A. Jones’ Factor Analysis of Information Risk<br> (FAIR)</li>
<li>﻿﻿Delphi Technique</li>
</ul>
<p><strong>Risk Determination</strong></p>
<p>For the purpose of relative risk assessment:</p>
<p>RISK &#x3D;</p>
<p>​	likelihood of vulnerability occurrence times value (or impact)</p>
<p>MINUS</p>
<p>​	percentage risk already controlled	</p>
<p>PLUS</p>
<p>​	an element of uncertainty</p>
<p><strong>Access Controls</strong></p>
<ul>
<li><p>﻿﻿One particular application of controls is in the area of access controls</p>
</li>
<li><p>﻿﻿Access controls are those controls that specifically address admission of a user into a trusted area of the organization</p>
</li>
<li><p>﻿﻿There are a number of approaches to controlling access</p>
</li>
<li><p>﻿﻿Access controls can be</p>
</li>
<li><p>﻿﻿discretionary</p>
</li>
<li><p>﻿﻿mandatory</p>
</li>
<li><p>﻿﻿nondiscretionary</p>
</li>
</ul>
<p><strong>Types of Access Controls</strong></p>
<ul>
<li>﻿﻿Discretionary Access Controls (DAC) are implemented at the discretion or option of the data user</li>
<li>﻿﻿Mandatory Access Controls (MACs) are structured and coordinated with a data classification scheme, and are required</li>
<li>﻿﻿Nondiscretionary Controls are those determined by a central authority in the organization and can be based on that individual’s role</li>
</ul>
<p><strong>Lattice-based Control</strong></p>
<ul>
<li>﻿﻿Another type of nondiscretionary access is lattice-based control, where a lattice structure (or matrix) is created containing subjects and objects, and the boundaries associated with each pair is contained</li>
<li>﻿﻿This specifies the level of access each subiect has to each object</li>
<li>﻿﻿In a lattice-based control the column of attributes associated with a particular object are referred to as an access control list or ACL</li>
<li>﻿﻿The row of attributes associated with a particular subiect (such as a user) is referred to as a capabilities table</li>
<li>This is part of Principles of Information SecurityPrinciples of Information Security</li>
</ul>
<p><strong>Documenting Results of Risk Assessment</strong></p>
<ul>
<li>﻿﻿The goal of this process has been to identify the information assets of the organization that have specific vulnerabilities and create a list of them, ranked for focus on those most needing protection first</li>
<li>﻿﻿In preparing this list we have collected and preserved factual information about the assets, the threats they fac and the vulnerabilities they experience</li>
<li>﻿﻿We should also have collected some information about the controls that are already in place</li>
</ul>
<p><strong>Asset Identification and Valuation</strong></p>
<ul>
<li>﻿﻿This iterative process begins with the identification of assets, including all of the elements of an organization’s system</li>
<li>﻿﻿Then, we classify and categorize the assets adding details as we dig deeper into the analysis</li>
</ul>
<p><strong>Components of an Information System</strong></p>
<p>![image-20230426150102652](..&#x2F;images&#x2F;:Users:joshua:Library:Application Support:typora-user-images:image-20230426150102652.png)</p>
<p><strong>Hardware, Software, and Network Asset Identification</strong></p>
<p>• Automated tools can sometimes uncover the system elements that make up the hardware, software, and network components</p>
<p>Once created, the inventory listing must be kept current, often through a tool that periodically refreshes the data</p>
<ul>
<li>﻿﻿What attributes of each of these information assets should be tracked?</li>
<li>﻿﻿When deciding which information assets to track, consider including these asset attributes:</li>
</ul>
<p>​		Name</p>
<p>​		﻿﻿IP address</p>
<p>​		MAC address</p>
<p>​		Element type</p>
<p>​		﻿﻿Serial number</p>
<p>​	﻿﻿	Manufacturer name</p>
<p><strong>People, Procedures, and Data Asset Identification</strong></p>
<ul>
<li>﻿﻿Unlike the tangible hardware and software elements already described, the human resources, documentation, and data information assets are not as readily discovered and documented</li>
<li>﻿﻿These assets should be identified, described, and evaluated by people using knowledge, experience, and judgment</li>
<li>﻿﻿As these elements are identified, they should also be recorded into some reliable data handling process</li>
</ul>
<p><strong>Asset Information for People</strong></p>
<ul>
<li><p>﻿﻿For People:</p>
<ul>
<li><p>﻿﻿Position name&#x2F;number&#x2F;ID - try to avoid names and stick to identifying positions, roles, or functions</p>
</li>
<li><p>﻿﻿Supervisor</p>
</li>
<li><p>﻿﻿Security clearance level</p>
</li>
<li><p>﻿﻿Special skills</p>
</li>
</ul>
</li>
</ul>
<p><strong>Asset Information for Procedures</strong></p>
<ul>
<li><p>﻿﻿For Procedures:</p>
<ul>
<li><p>﻿﻿Description</p>
</li>
<li><p>﻿﻿Intended purpose</p>
</li>
<li><p>﻿﻿What elements is it tied to</p>
</li>
<li><p>﻿﻿Where is it stored for reference</p>
</li>
<li><p>﻿﻿Where is it stored for update purposes</p>
</li>
</ul>
</li>
</ul>
<p><strong>Asset Information for Data</strong></p>
<ul>
<li><p>﻿﻿For Data:</p>
<ul>
<li><p>﻿﻿Classification</p>
</li>
<li><p>﻿﻿Owner&#x2F;creator&#x2F;manager</p>
</li>
<li><p>﻿﻿Size of data structure</p>
</li>
<li><p>﻿﻿Data structure used - sequential, relational</p>
</li>
<li><p>﻿﻿Online or offline</p>
</li>
<li><p>﻿﻿Where located</p>
</li>
<li><p>﻿﻿Backup procedures employed</p>
</li>
</ul>
</li>
</ul>
<p><strong>Information Asset Classification</strong></p>
<ul>
<li><p>﻿﻿Many organizations already have a classification scheme</p>
</li>
<li><p>﻿﻿Examples of these kinds of classifications are:</p>
<ul>
<li><p>﻿﻿confidential data</p>
</li>
<li><p>﻿﻿internal data</p>
</li>
<li><p>﻿﻿public data</p>
</li>
</ul>
</li>
<li><p>﻿﻿Informal organizations may have to organize themselves to create a useable data classification model</p>
</li>
<li><p>﻿﻿The other side of the data classification scheme is the personnel security clearance structure</p>
</li>
</ul>
<p><strong>Information Asset Valuation</strong></p>
<ul>
<li><p>﻿﻿Each asset is categorized</p>
</li>
<li><p>﻿﻿Questions to assist in developing the criteria to be used for asset valuation:</p>
<ul>
<li><p>﻿﻿Which information asset is the most critical to the success of the organization?</p>
</li>
<li><p>﻿﻿Which information asset generates the most revenue?</p>
</li>
<li><p>﻿﻿Which information asset generates the most profitability?</p>
</li>
<li><p>﻿﻿Which information asset would be the most expensive to replace?</p>
</li>
<li><p>﻿﻿Which information asset would be the most expensive to protect?</p>
</li>
<li><p>﻿﻿Which information asset would be the most embarrassing or cause the greatest liability if revealed?</p>
</li>
</ul>
</li>
</ul>
<p><strong>Examples of Information Security Vulnerabilities</strong></p>
<ul>
<li>﻿﻿Information security vulnerabilities are weaknesses that expose an organization to risk.</li>
<li>﻿﻿Through employees: Social interaction, Customer interaction,<br> Discussing work in public locations,</li>
<li>﻿﻿Through former employees—Former employees working for competitors, Former employees retaining company data,<br> Former employees discussing company matters</li>
<li>﻿﻿Though Technology—Social networking, File sharing, Rapid technological changes, Legacy systems, Storing data on mobile devices such as mobile phones, Internet browsers</li>
<li>﻿﻿Through hardware—. Susceptibility to dust, heat and humidity,<br> Hardware design flaws, Out of date hardware,</li>
<li>Misconfiguration of hardware</li>
</ul>
<p><strong>Examples of Information Security Vulnerabilities (Cont.)</strong></p>
<ul>
<li>﻿﻿Through software—Insufficient testing, Lack of audit trail, Software bugs and design faults, Unchecked user input, Software that fails to consider human factors, Software complexity (bloatware), Software as a service (relinquishing control of data), Software vendors that go out of business or change ownership</li>
<li>﻿Through Network—Unprotected network communications, Open physical connections, IPs and ports, Insecure network architecture, Unused user ids, Excessive privileges, Unnecessary jobs and scripts executing, Wifi networks</li>
<li>﻿﻿Through IT Management—Insufficient IT capacity, Missed security patches, Insufficient incident and problem management, Configuration errors and missed security notices, System operation errors</li>
<li>﻿Partners and suppliers—Disruption of telecom services, Disruption of utility services such as electric, gas, water, Hardware failure, Software failure, Lost mail and courier packages, Supply disruptions, Sharing confidential data with partners and suppliers</li>
</ul>
<p>![image-20230426150722235](..&#x2F;images&#x2F;:Users:joshua:Library:Application Support:typora-user-images:image-20230426150722235.png)</p>
<p><strong>Programme Criticality</strong></p>
<ul>
<li><p>﻿﻿The programme criticality framework is a common<br> United Nations system framework for decision-making that puts in place a systematic structured approach that uses programme criticality as a way to ensure that programme activities can be balanced against security risks.</p>
</li>
<li><p>﻿﻿The concept of criticality means the critical impact of an activity on the population, not necessarily on the organisation.</p>
</li>
<li><p>﻿﻿Programme criticality assessment is mandatory in areas with residual risk levels of ‘high’ and very high,’ as determined in the Security Risk Assessments (SRAs).</p>
</li>
<li><p>﻿﻿Primary accountability for programme criticality is with United Nations senior management at the country level.</p>
</li>
</ul>
<p>A programme criticality assessment has steps as follows:</p>
<ul>
<li><p>﻿﻿1. Establish geographical scope and timeframe</p>
</li>
<li><p>﻿﻿2. List strategic results (SRs)</p>
</li>
<li><p>﻿﻿3. List UN activities&#x2F;outputs (involving UN personnel)</p>
</li>
<li><p>﻿﻿4. Assess contribution to strategic results</p>
</li>
<li><p>﻿﻿5. Assess likelihood of implementation</p>
</li>
<li><p>﻿﻿6. Evaluate activities&#x2F;outputs with PCI criteria</p>
</li>
<li><p>﻿﻿7. View PC level results, form consensus within the UN system and approve final results</p>
</li>
<li><p>﻿﻿8. Agree on a process to address and manage the results of the PC<br> assessment</p>
</li>
<li><p>﻿﻿9. Follow-up and review.</p>
</li>
<li><p>﻿﻿There are two possible criteria for an activity to be considered a PCI activity:</p>
<ul>
<li><p>﻿﻿Either the activity is assessed as lifesaving (humanitarian or non-humanitarian) at scale (defined as any activity to support processes or services, including needs assessments), that would have an immediate and significant impact on mortality; or</p>
</li>
<li><p>﻿﻿The activity is a directed activity that receives the endorsement of the Office of the Secretary-General for this particular situation.</p>
</li>
</ul>
</li>
<li><p>﻿﻿Risk level has no impact on programme criticality.<br> There must be no consideration of risk level when determining PC.</p>
</li>
<li><p>﻿﻿Programme criticality has no impact on risk level.<br> There must be no consideration of PC when determining risk level.</p>
</li>
</ul>
<p>![image-20230426152530740](..&#x2F;images&#x2F;:Users:joshua:Library:Application Support:typora-user-images:image-20230426152530740.png)</p>
<p><strong>Other Processes with Security Implications</strong></p>
<ul>
<li>﻿﻿Intelligence and Information Cycle.</li>
<li>﻿﻿Strategic-level Integrated Mission Planning Process.</li>
<li>﻿﻿Mission-level Integrated Planning, Coordination and implementation.</li>
<li>﻿﻿Mission Component Planning and Implementation<br> Processes.</li>
<li>﻿﻿UN Budget Processes.</li>
<li>﻿﻿Staff Selection and Managed Mobility System.</li>
<li>﻿﻿Any other process that impacts the substance of UN security.</li>
</ul>
<h2 id="Security-Patterns"><a href="#Security-Patterns" class="headerlink" title="Security Patterns"></a><strong>Security Patterns</strong></h2><p><strong>Values of security pattern:</strong></p>
<p>Security patterns can apply <strong>security principles</strong>, <strong>guide the design and implementation</strong>, <strong>guide the use of security mechanisms</strong>,<strong>help understanding and use of complex</strong> **standards (**XACML, WiMax) and <strong>Convenient for teaching</strong> security principles and mechanisms.</p>
<p><strong>An Abstract Security Pattern (ASP)</strong>, describes a conceptual security mechanism that realizes one or more security policies able to control (stop or mitigate) a threat or comply with a security-related regulation or institutional policy (no implementation aspects).</p>
<p><strong>Conceptual security</strong></p>
<ul>
<li>﻿﻿Security is a <strong>quality</strong> aspect that constrains the semantic behavior of applications (by imposing access restrictions), so the requirements stage is the right development stage to start addressing security</li>
<li>﻿﻿However, we only want to indicate at this stage which specific security controls are needed, not their convenient or optimal implementation.</li>
<li>﻿﻿For example, in bank applications we only want to specify the semantic aspects of accounts, customers, and transactions with their corresponding restrictions.</li>
</ul>
<p><strong>An ASP example: Authenticator:</strong></p>
<ul>
<li>﻿﻿This is the Intent section of an Authenticator pattern: “When a user or system (subject) identifies itself to the system, how do we verify that the subject intending to access the system is who it says it is? Present some information that is recognized by the system as identifying this subject.<br> After being recognized, the requestor is given some proof that it has been authenticated.”</li>
<li>﻿﻿Authentication restricts access to a system to only registered users; it handles the threat where an intruder enters a system and may try to perform unauthorized access to information</li>
<li>﻿﻿It is clear that there are many ways to perform this authentication, that go from manual ways, as done in voting places, to purely automatic ways, as when accessing a web site, but all of them must include the requirements of the abstract Authenticator</li>
</ul>
<p><strong>Authentication</strong> as an <strong>abstract</strong> function requires a basic sequence of activities.  Concrete realizations of this sequence implement these steps in different ways but all must perform these two steps: • The subject requests to enter a system indicating its identity and presenting some proof of identity. • If the system recognizes the subject using its identity information, it grants her entrance to the system and provides her with a proof of authentication for further use.  If not, the request is denied. • We can define a hierarchy of authentication patterns starting from the abstract Authenticator</p>
<p><strong>Force os abstract authenticator</strong></p>
<ul>
<li><p><strong>Closed system</strong>. If the authentication information presented by the user is not recognized, there is no access. In an open system all subjects would have access except some who are blacklisted for some reason.</p>
</li>
<li><p><strong>Registration</strong>. Users must register their identity information so that the system can recognize them later.</p>
</li>
<li><p><strong>Flexibility</strong>. There may be a variety of individuals (users) who require access to the system and a variety of system units with different access restrictions. We need to be able to handle all this variety appropriately or we risk security exposures.</p>
</li>
<li><p><strong>Dependability</strong>. We need to authenticate users in a reliable and secure way.</p>
<p>This means a robust protocol and a high degree of availability. Otherwise, users may fool the authentication process or enter when the system authentication is down.</p>
</li>
<li><p><strong>Protection of authentication information</strong>. Users should not be able to read or modify the authentication information. Otherwise, they can give themselves access to the system.</p>
</li>
<li><p>﻿﻿<strong>Simplicity</strong>. The authentication process must be relatively simple or the users or administrators may be confused. User errors are annoying to them but administrator errors may lead to security exposures.</p>
</li>
<li><p>﻿﻿<strong>Reach</strong>. Successful authentication only gives access to the system, not to any specific resource in the system. Access to these resources must be controlled using other mechanisms, typically authorization.</p>
</li>
<li><p><strong>Tamper freedom</strong>. It should be very difficult to falsify the proof of identity presented by the user.</p>
</li>
<li><p>﻿﻿<strong>Cost</strong>. There should be tradeoffs between security and cost, more security can be obtained at a higher cost.</p>
</li>
<li><p>﻿﻿<strong>Performance</strong>. Authentication should not take a long time or users will be annoyed.</p>
</li>
<li><p>﻿﻿<strong>Frequency</strong>. We should not make users authenticate frequently. Frequent authentications waste time and annoy the users.<br> All these properties must be present in the lower-level ways of performing authentication, e.g. in a Password Authenticator (see next slide). A Password Authenticator needs tomake concrete its Authentication Information (list of passwords) and its proof of authentication (a session)</p>
</li>
</ul>
<p><strong>Reference Monitor</strong></p>
<ul>
<li>Authorization rules define who has access to what and how. They must be enforced when a process request a resource</li>
<li>Each request for resources must be intercepted and evaluated for authorized access; this is the concept of Reference Monitor</li>
<li>An abstract concept, implemented as memory access manager, file permission checks, CORBA adapters, etc.</li>
</ul>
<p><strong>Role-Based Access Control</strong></p>
<ul>
<li>﻿﻿Users are assigned roles according to their functions and given the needed rights (access types for specific objects)</li>
<li>﻿﻿When users are assigned by administrators, this is a mandatory model</li>
<li>﻿﻿Can implement least privilege and separation of duty policies</li>
</ul>
<p><strong>XML firewall</strong></p>
<p>• <strong>Controls input&#x2F;output of XML applications</strong></p>
<p>• <strong>Well-formed documents (schema as</strong> <strong>reference)</strong></p>
<p>• <strong>Harmful data (wrong type or length)</strong></p>
<p>• <strong>Encryption&#x2F;decryption</strong></p>
<p>• <strong>Sign and verify signatures in documents</strong></p>
<hr>
<p><strong>Building secure systems</strong></p>
<ul>
<li>﻿﻿Secure systems need to be built in a systematic way where security is an integral part of the lifecycle, and the same applies to safety.</li>
<li>﻿﻿The platform should match the type of application, and all compliance, safety and security constraints should be defined at the application level, where their semantics are understood and propagated to the lower levels.</li>
<li>﻿﻿The lower levels must provide the assurance that the constraints are being followed, i.e., they implement these constraints and enforce that there are no ways to bypass them.</li>
<li>﻿﻿Following these ideas, the Authors of the book in reference developed a secure systems development methodology, which considers all lifecycle stages and all architectural levels. It is expanded with architectural aspects, and recently with process aspects.</li>
</ul>
<p><strong><em>Security methodology</em>:</strong></p>
<p><strong>systematic way of introducing security into a software system</strong> <strong>during the development life-cycle</strong></p>
<p>Consists of two aspects&#x2F;facets:<strong>security process</strong>(SP) and <strong>conceptualsecurity framework</strong> (CF)</p>
<p><strong>ASE:</strong> <strong>a comprehensive security methodology for distributed systems</strong></p>
<ul>
<li>Many methodologies exist with different paradigms</li>
<li>Very important class is methodologies that use security patterns</li>
<li>ASE: a security methodology using patterns and related constructs designed specifically for general distributed systems</li>
</ul>
<p><strong>Basic security principles for system design</strong></p>
<ul>
<li>﻿﻿Security constraints must be defined at the highest layer, where their semantics are clear, and propagated to the lower levels, which enforce them.</li>
<li>﻿﻿All the layers of the architecture must be secure.</li>
<li>﻿﻿We can define patterns at all levels. This allows a designer to make sure that all levels are secured, and also makes easier propagating down the high-level constraints.</li>
<li>﻿﻿We must apply security in all development stages</li>
<li>﻿﻿A two-dimensional approach: time and space</li>
</ul>
<p><strong>Reference Architecture (RA)</strong></p>
<p>• A Reference Architecture (RA) is a generic software architecture, based on one or more domains, with no implementation aspects<br>• An RA is reusable, extendable, and configurable.<br>• It specifies the components of the system, their individual functionalities and their mutual interaction.<br>• An RA can be considered as a compound pattern and its components described as patterns.<br>• In addition to domain models, an RA may include a set of use cases (UC), and a set of Roles (R) corresponding to its stakeholders actors).</p>
<p>We can measure security by <strong>counting the threats that have been</strong> <strong>neutralized by using patterns</strong></p>
<p><strong>Incident Response Plan</strong></p>
<p>• Before system is released, an incident response plan should be created (compromise or failure)</p>
<p>• Contact personnel, availability and procedures for multiple levels of failure</p>
<p>• A minor glitch does not require CEO to be informed but should be documented</p>
<p>• Network admin or security admin to determine an appropriate response when incident occurs</p>
<p><strong>Key elements</strong> of incident response plan:</p>
<ul>
<li><p>﻿﻿Monitoring duties for the software in live operation</p>
</li>
<li><p>﻿﻿A definition for incidents</p>
</li>
<li><p>﻿﻿A contact for incidents</p>
</li>
<li><p>﻿﻿An emergency contact for priority incidents</p>
</li>
<li><p>﻿﻿A clear chain of escalation</p>
</li>
<li><p>﻿﻿Procedures for shutting down the software or components of the software</p>
</li>
<li><p>﻿﻿Procedures for specified exploits or attacks</p>
</li>
<li><p>﻿﻿Security documentation or the references for external ode or hardware used</p>
</li>
</ul>
<p>*It depends on the organization that the person responsible is from development team or outside</p>
<p><strong>evolving attacks &#x2F; periodic review and archiving</strong></p>
<h2 id="Web-Application-Threats"><a href="#Web-Application-Threats" class="headerlink" title="Web Application Threats"></a>Web Application Threats</h2><ul>
<li>﻿﻿Never trust the client at the server side</li>
<li>﻿﻿Never trust the browser on the client side</li>
<li>﻿﻿Never execute client input as code</li>
<li>﻿﻿Never allow client input to pass into the system without validation internally</li>
<li>﻿﻿Scrub client for any known exploits and suspect characters</li>
</ul>
<p><strong>XSS</strong></p>
<p><strong>CSRF</strong></p>
<p><strong>File Upload</strong></p>
<p><strong>Buffer Overflow</strong></p>
<p><strong>SQL Injection</strong></p>
<h2 id="Threat-Modelling"><a href="#Threat-Modelling" class="headerlink" title="Threat Modelling"></a>Threat Modelling</h2><p>• In a nutshell, threat modelling is the use of abstractions to help you consider risks.<br>• Involves developing a shared understanding of a product or service architecture and the problems that could happen.<br>•When you model threats, you typically use one of two types of model.</p>
<ol>
<li>The model for what you are building.</li>
<li>The model for the threats of what you are building.</li>
</ol>
<p>The Four-Step Framework</p>
<ol>
<li><strong>Model System</strong>, Model the system you’re building, deploying or changing.</li>
<li><strong>Find Threats</strong>, Find threats using the model.</li>
<li><strong>Addrasc Inrears</strong>,  Address the threats.</li>
<li><strong>Validate,Validate</strong>, the result for completeness and effectiveness</li>
</ol>
<p>(1) What are you Building?</p>
<ul>
<li>﻿﻿Diagrams are a good way to communicate what you are building.</li>
<li>﻿﻿There are lots of ways to diagram software and you can start with a whiteboard diagram of how data flows through the system.</li>
</ul>
<p>(2) What can go wrong?</p>
<ul>
<li><p>﻿﻿Given a simple diagram, we can start thinking about what can go wrong. Example:</p>
</li>
<li><p>﻿﻿How do you know that the web browser is being used by the person you expect?</p>
</li>
<li><p>﻿﻿What happens if someone modifies data in the database?</p>
</li>
<li><p>﻿﻿Is it okay for information to move from one box to the next without encryption?</p>
</li>
<li><p>﻿﻿You can identify threats like these using the STRIDE approach.</p>
</li>
<li><p>﻿﻿Use STRIDE to walk through each part of the diagram:</p>
</li>
<li><p>﻿﻿Spoofing.</p>
</li>
<li><p>﻿﻿Tampering.</p>
</li>
<li><p>﻿﻿Repudiation.</p>
</li>
<li><p>﻿﻿Information Disclosure.</p>
</li>
<li><p>﻿﻿Denial of Service.</p>
</li>
<li><p>﻿﻿Elevation of Privilege.</p>
</li>
</ul>
<p><strong>(3) What Are We Going To Do</strong> <strong>About It</strong></p>
<p>• There are four types of action you can take against a threat:</p>
<ol>
<li>Mitigate it.</li>
</ol>
<p>![image-20230427001002917](..&#x2F;images&#x2F;:Users:joshua:Library:Application Support:typora-user-images:image-20230427001002917.png)</p>
<p>![image-20230427001035008](..&#x2F;images&#x2F;:Users:joshua:Library:Application Support:typora-user-images:image-20230427001035008.png)</p>
<p>![image-20230427001116901](..&#x2F;images&#x2F;:Users:joshua:Library:Application Support:typora-user-images:image-20230427001116901.png)</p>
<p>![image-20230427001224625](..&#x2F;images&#x2F;:Users:joshua:Library:Application Support:typora-user-images:image-20230427001224625.png)</p>
<p>![image-20230427001300080](..&#x2F;images&#x2F;:Users:joshua:Library:Application Support:typora-user-images:image-20230427001300080.png)</p>
<p>![image-20230427001333023](..&#x2F;images&#x2F;:Users:joshua:Library:Application Support:typora-user-images:image-20230427001333023.png)</p>
<ol start="2">
<li><p>Eliminate it. Vpn（Geo-restrictions: A VPN can be used to bypass geo-restrictions and access content that may be blocked in certain regions, reducing the risk of inadvertently visiting malicious websites or downloading malicious content.）</p>
</li>
<li><p>Transfer it.</p>
</li>
<li><p>Accept it</p>
</li>
</ol>
<p><strong>(4) Did We Do A Good Job</strong></p>
<ol>
<li>﻿﻿﻿Look at the diagram, does it represent the system well?</li>
<li>﻿﻿﻿Look at the list of threats, did you find at least 5 threats per node in the diagram?</li>
<li>﻿﻿﻿Did you file a bug per threat?</li>
</ol>
<ul>
<li>﻿﻿When you find threats that violate your requirements and cannot be mitigated, it generally makes sense to adjust your requirements.<br> Sometimes it’s possible to either mitigate the threat operationally, or defer a decision to the person using the system.</li>
<li>﻿﻿There are many other threat modelling techniques, we have only touched most popular approaches.</li>
<li>﻿﻿Some other threat modelling approaches include:</li>
<li>﻿﻿PASTA (Process for Attack Simulation and Threat Analysis)</li>
<li>﻿﻿CSVSS Common Vulnerability Scoring System)</li>
<li>﻿﻿HMM (Hybrid Threat Modelling Method)</li>
</ul>
<h2 id="Attack-Trees"><a href="#Attack-Trees" class="headerlink" title="Attack Trees"></a><strong>Attack Trees</strong></h2><p>![image-20230427001820867](..&#x2F;images&#x2F;:Users:joshua:Library:Application Support:typora-user-images:image-20230427001820867.png)</p>
<ul>
<li>﻿﻿Top level node (or root) represents the ultimate goal of an attacker.</li>
<li>﻿﻿The nodes (or leaves) represent sub goals that need to be achieved (together or independently) to arrive at the top level goal.</li>
</ul>
<p>• An alternative to STRIDE(Spoofing, tampering, repudiation, Information disclosure,Denial of service,Denial of service).</p>
<p>• You can use attack trees as a way to find threats, or as a way to organize threats.</p>
<p>​	• Attack trees work well as a building block for threat enumeration in the fourstep framework.</p>
<p><strong>We can use attack trees to find the threats</strong></p>
<p><strong>Attack-Defence Scenarios</strong></p>
<p>• Attack trees are used to model attack-defence scenarios.</p>
<p>• The attack-defence scenario is a game between two players:</p>
<p>• The proponent (denoted as p)</p>
<p>• The opponent (denoted as o)</p>
<ul>
<li><p>The root of an attack tree represents the main goal of the proponent. </p>
<ul>
<li>When the root is an attack node, the proponent is an attacker and the opponent is a defender.</li>
<li>﻿﻿Conversely, when the root is a defence node, the proponent is a defender and the opponent is an attacker.</li>
</ul>
</li>
<li><p>Notations:</p>
</li>
<li><p>﻿﻿Attack nodes are represented with circles.</p>
</li>
<li><p>﻿﻿Defence nodes are represented with rectangles.</p>
</li>
<li><p>﻿﻿Refinements:</p>
<ul>
<li>﻿﻿Refinements can be conjunctive (AND aggregation) or disjunctive (OR choice)</li>
<li>﻿﻿Refinement relations are indicated by solid edges between nodes.</li>
<li>﻿﻿Countermeasures are indicated by dotted edges.</li>
<li>﻿﻿A conjunctive refinement of a node is represented by an arc over all edges connecting the node and its children of equal type.</li>
</ul>
</li>
</ul>
<p><strong>The basic steps to create an attack tree are as follows</strong>:</p>
<p>\1. Decide on a representation.</p>
<p>Two types of trees:</p>
<p><strong>AND trees</strong> (aggregation): The state of a node depends on all of the nodes below it being true. 有夹脚</p>
<p><strong>Or trees</strong> (choice): A node is true if any of its subnodes are true. 没夹脚</p>
<p>\2. Create a root node.</p>
<p><strong>If the root node is a countermeasure mitigation action…</strong></p>
<p><strong>Then the subnodes are used to identify what can go wrong.</strong></p>
<p><strong>Decompose the mitigation action and identify how the results can be threatened.</strong></p>
<p><strong>If the root node is a goal of the attacker</strong>:</p>
<p><strong>Then we consider ways to achieve that goal.</strong></p>
<p><strong>Each alternative way to achieve the goal should be drawn as a subnode.</strong></p>
<p>\3. Create subnodes.</p>
<p>• You typically create subnodes by brainstorming in some structured manner.</p>
<p>• The relation between subnodes and parent node can be AND or OR.</p>
<p>• Some possible structures for first-level subnodes include:</p>
<p>Attacking a system:</p>
<ul>
<li>﻿﻿Physical access.</li>
<li>﻿﻿Subvert software.</li>
<li>﻿﻿Subvert a person.</li>
</ul>
<p>Attacking a system via:</p>
<ul>
<li>﻿﻿People.<br> Process.</li>
<li>﻿﻿Technology.</li>
</ul>
<p>Attacking a product during:</p>
<ul>
<li>Design.</li>
<li>Production.</li>
<li>Distribution.</li>
<li>Usage.</li>
</ul>
<p>\4. Consider completeness.</p>
<p><strong>• An attack tree can be checked for quality by iterating over the node, looking for additional ways to reach the goal. It may be helpful to use STRIDE or attack libraries.</strong></p>
<p>\5. Prune the tree.</p>
<p><strong>• In this step, go through each node in the tree and consider whether the action in each subnode is prevented or duplicative.</strong></p>
<p>\6. Check the presentation.</p>
<p><strong>• Trees can be represented in two ways:</strong></p>
<p><strong>• As a free form (human viewable) model without any technical structure.</strong></p>
<p><strong>• As a structured representation with variable types and&#x2F;or metadata to facilitate programmatic analysis.</strong></p>
<p><strong>Human Viewable Representations</strong></p>
<p>• Attack trees can be drawn graphically or shown in outline form.</p>
<p>• Care should be taken to ensure that the graphics are actually information rich and useful.</p>
<p>• Outline representations are easier to create than graphical representations, but they tend to be less attention-grabbing.</p>
<p>• <strong>If you are using someone else’s tree, be sure to understand their intent. If you are creating once, be sure you are clear on your intent and communicate your intent clearly.</strong></p>
<p><strong>Risk Analysis</strong></p>
<p>• <strong>Risk</strong> &#x3D; (<strong>Probability</strong> of <strong>Incident</strong>) x (Incident Impact)</p>
<p>• When dealing with hostile risk, consider the following:</p>
<p>​	• Vulnerabilities in systems are NOT constants.</p>
<p>​	• Capabilities of the adversary are NOT constant.</p>
<p>​	• Motivators for adversary changes instantaneously.</p>
<p>​	• Adversaries can attack your system anytime.</p>
<p><strong>Probability of Incident</strong> &#x3D; Vulnerability x Threat x Motivation</p>
<p><strong>Security Functional Requirements</strong></p>
<ul>
<li>﻿﻿FAU: Security auditing.</li>
<li>﻿﻿FCP: Communications.</li>
<li>﻿﻿FCS: Cryptographic support.</li>
<li>﻿﻿FDP: User data protection.</li>
<li>﻿﻿FIA: Identification and authentication.</li>
<li>﻿﻿FMT: Security management.</li>
<li>﻿﻿FPR: Privacy.</li>
<li>﻿﻿FPT: Protection of security function.</li>
<li>﻿﻿FRU: Resource utilization.</li>
<li>﻿﻿FTA: Access.</li>
<li>﻿﻿FTP: Trusted path.</li>
</ul>
<p><strong>Security Mechanisms</strong>s</p>
<ul>
<li>There are several ways in which the security policy can be enforced.</li>
<li>Assurance requirements detail the ways in which security is demonstrated.</li>
<li>There are also different ways of evaluating these requirements.</li>
<li>Here are the FIPS standards.</li>
</ul>
<p>![image-20230427124928638](..&#x2F;images&#x2F;:Users:joshua:Library:Application Support:typora-user-images:image-20230427124928638.png)</p>
<p>![image-20230427125103365](..&#x2F;images&#x2F;:Users:joshua:Library:Application Support:typora-user-images:image-20230427125103365.png)</p>
]]></content>
      <categories>
        <category>Courses</category>
      </categories>
      <tags>
        <tag>Courses</tag>
      </tags>
  </entry>
  <entry>
    <title>forensics</title>
    <url>/2023/04/20/forensics/</url>
    <content><![CDATA[<p>5080 UofG</p>
<p>[TOC]</p>
<h1 id="Revision-and-Reflection"><a href="#Revision-and-Reflection" class="headerlink" title="Revision and Reflection:"></a>Revision and Reflection:</h1><ol>
<li><h2 id="Raphael-Aerospace"><a href="#Raphael-Aerospace" class="headerlink" title="Raphael Aerospace"></a>Raphael Aerospace</h2></li>
</ol>
<p>The fictional Raphael Aerospace is a leading multinational, specialising in software engineering for defense systems. The organisation has seized a laptop from one of its employees during a routine search that occurs at the entry and exit point to its North America campus. The company is concerned that the laptop contains sensitive source code. The employee has refused to speak or cooperate with the organisation since the laptop was seized. The digital investigation team believes the laptop is password protected, employs software-based full-disk encryption and has been seized in sleep mode. The laptop has highly integrated components to achieve a ‘slim-line’ profile and potentially has a Trusted Platform Module (TPM). The investigation team needs to acquire the keys associated with decryption and encryption of hard disk contents.</p>
<p><strong>a).  Outline the SIX states of the Advanced Configuration and Power Interface (ACPI) and argue the relevancy to software-based full-disk encryption for each state.</strong></p>
<p>The Advanced Configuration and Power Interface (ACPI) is a specification that defines power management and system configuration for computers. It establishes different power states, which play a significant role in the energy consumption and performance of a device. These power states are relevant to software-based full-disk encryption, as they can impact the security and accessibility of encrypted data. The six ACPI power states are:</p>
<ol>
<li>G0 (S0) - Working State: In this state, the system is fully powered on and operational. The CPU is executing instructions, and all peripherals are active. In the context of full-disk encryption, this state is when the system is most vulnerable to attacks. However, it’s also the state in which encryption and decryption processes can be performed.</li>
<li>G1 (S1-S4) - Sleeping States: There are four different sleep states, S1 to S4, with S1 being the lightest sleep and S4 the deepest sleep state. As the sleep state deepens, more components are powered down, and the system consumes less power. Full-disk encryption keys are typically stored in RAM or the TPM. In sleep states, the encryption keys remain in memory, making it possible to access encrypted data without re-entering the password. However, these states also increase the risk of cold boot attacks, where attackers can extract the keys from RAM or TPM if they can gain physical access to the machine.</li>
<li>G2 (S5) - Soft Off State: In this state, the system is powered off, but some components may still receive power to support features like Wake-on-LAN. The encryption keys are not present in memory, so an attacker cannot extract them. However, encrypted data on the disk remains secure, and a password is required to access the system upon startup.</li>
<li>G3 - Mechanical Off State: The system is completely powered off, and no components receive power. In this state, the encryption keys are not present in memory, and the encrypted data is secure. To access the data, the user must power on the system and enter the password.</li>
<li>S4 - Hibernate State: In this state, the system’s state is saved to the hard drive before powering down. The encryption keys are not present in memory, making the data secure. However, the system will require the password upon waking from hibernation to access the encrypted data.</li>
<li>C0-C3 - Processor Power States: These are the power states of the CPU itself, with C0 being the fully operational state and C3 being the deepest sleep state. These states are less relevant to full-disk encryption, as they primarily affect the CPU’s power consumption and performance. However, the encryption and decryption processes may be slower in deeper sleep states due to reduced CPU performance.</li>
</ol>
<p>In summary, ACPI power states have varying degrees of relevancy to software-based full-disk encryption. The Working State (G0) and Sleeping States (G1) are the most relevant, as they impact the security and accessibility of encrypted data. The Soft Off State (G2), Mechanical Off State (G3), Hibernate State (S4), and Processor Power States (C0-C3) are less directly relevant but may still influence the security of encrypted data in certain situations.</p>
<p><strong>b). Evaluate and describe THREE potential approaches to recover the keys associated with software-based full-disk encryption and argue for the optimal approach in the given context.</strong></p>
<p>There are several potential approaches to recover the keys associated with software-based full-disk encryption (FDE). Here are three possible methods:</p>
<ol>
<li>Brute-force attack: This approach involves systematically trying every possible combination of characters to find the correct encryption key or password. Given enough time and computational resources, a brute-force attack will eventually succeed.</li>
</ol>
<p>Pros:</p>
<ul>
<li>Guaranteed to find the correct key or password eventually.</li>
</ul>
<p>Cons:</p>
<ul>
<li>Requires a significant amount of time and computational power, making it inefficient.</li>
<li>May be ineffective against long, complex passwords or strong encryption algorithms.</li>
</ul>
<ol>
<li>Dictionary attack: This method involves using a pre-compiled list of words or phrases (a “dictionary”) to attempt to recover the encryption key or password. Dictionary attacks are faster than brute-force attacks since they rely on a smaller set of possibilities, usually based on known common passwords or phrases.</li>
</ol>
<p>Pros:</p>
<ul>
<li>Faster than brute-force attacks.</li>
<li>Effective against weak passwords or phrases.</li>
</ul>
<p>Cons:</p>
<ul>
<li>Less effective against strong, unique passwords or phrases.</li>
<li>Relies on the quality of the dictionary used.</li>
</ul>
<ol>
<li>Cryptanalysis attack: This approach involves analyzing the encrypted data or the encryption algorithm itself to discover weaknesses or flaws that can be exploited to recover the encryption key. This method often requires deep knowledge of cryptography and a thorough understanding of the specific encryption algorithm used.</li>
</ol>
<p>Pros:</p>
<ul>
<li>Can be more efficient than brute-force or dictionary attacks.</li>
<li>Exploits weaknesses or flaws in the encryption algorithm itself, potentially making it more successful.</li>
</ul>
<p>Cons:</p>
<ul>
<li>Requires extensive knowledge and expertise in cryptography.</li>
<li>May not be successful if the encryption algorithm is well-designed and without significant weaknesses.</li>
</ul>
<p>In the given context, the optimal approach to recover the keys associated with software-based full-disk encryption would depend on several factors, such as the strength of the encryption algorithm, the complexity of the password, and the available resources (time and computational power).</p>
<p>If the encryption algorithm is known to have weaknesses or flaws, a cryptanalysis attack could be the most efficient method to recover the keys. However, this approach requires a high level of expertise in cryptography.</p>
<p>In cases where the password is known to be weak or likely to be found in a dictionary, a dictionary attack would be the preferred approach, as it is faster and more efficient than brute-force attacks.</p>
<p>If no information about the password or encryption algorithm’s weaknesses is available, a brute-force attack could be the only viable option. However, this method may be time-consuming and resource-intensive.</p>
<p>Ultimately, the choice of the optimal approach will depend on the specific circumstances and the available resources. In many cases, a combination of these approaches may be required to successfully recover the keys associated with software-based full-disk encryption.</p>
<p><strong>c). Raphael Aerospace is a British company, but the laptop was seized at the North American campus. The employee is a United Kingdom (UK) citizen and is concerned about the laws regarding software-based full-disk encryption in the United States (US). The employee believes that the UK will be a more favorable jurisdiction from the perspective of being forced to reveal any keys or passwords associated with encryption. Contrast the UK and US legal perspectives regards compelled decryption, speculate on the optimal jurisdiction in the given context.</strong></p>
<p>The legal perspectives on compelled decryption differ between the United States (US) and the United Kingdom (UK). Here is a brief overview of the legal stances in both jurisdictions:</p>
<p>United States (US): In the US, the Fifth Amendment to the Constitution protects individuals from self-incrimination. This has been interpreted by some courts as providing protection against being forced to reveal encryption keys or passwords, as doing so could be seen as self-incrimination. However, the interpretation of the Fifth Amendment in the context of compelled decryption is not uniform across all courts, and some have ruled that individuals can be compelled to provide decryption keys or passwords under certain circumstances.</p>
<p>United Kingdom (UK): In the UK, the Regulation of Investigatory Powers Act 2000 (RIPA) governs the legal framework surrounding encryption and compelled decryption. Under RIPA, individuals can be legally compelled to provide encryption keys or passwords to law enforcement authorities when ordered to do so by a court. Failure to comply with such an order can result in severe penalties, including imprisonment.</p>
<p>In the given context, the employee’s belief that the UK might be a more favorable jurisdiction from the perspective of being forced to reveal encryption keys or passwords might be misguided. The UK’s legal framework, as established by RIPA, clearly allows for compelled decryption under certain circumstances, whereas the US legal system provides some degree of protection against self-incrimination through the Fifth Amendment.</p>
<p>However, it is important to note that the specific circumstances of the case and the legal interpretations of the relevant laws may vary, leading to different outcomes in each jurisdiction. The optimal jurisdiction would depend on various factors, including the details of the case and the stance of the courts involved.</p>
<p>In conclusion, while the US legal system may offer more protection against compelled decryption than the UK, there are no guarantees, and the optimal jurisdiction would depend on the specific circumstances and the courts involved. The employee should seek legal counsel to better understand their rights and potential risks in both jurisdictions.</p>
<ol start="2">
<li><h2 id="BCO-Case"><a href="#BCO-Case" class="headerlink" title="BCO Case"></a>BCO Case</h2></li>
</ol>
<p>The fictional United States (US) Borders and Customs Office (BCO) wants to strengthen border controls. The BCO wants to ensure rigorous checks are possible at the border to ensure illegal digital content does not come across the border on physical devices. The BCO is particularly concerned that such files are hidden in unallocated space on drives. The BCO want a rapid process that can confirm a target file or traces of a target file are present on a suspected system. The suspected system can then be kept for further, deeper analysis. Argue an appropriate file carving technique and outline an implementation for the given context.</p>
<p><strong>a). In the given context, the BCO aims to quickly identify whether a target file or traces of it are present on a suspected system, particularly in unallocated space on drives. An appropriate technique for this purpose is file carving.</strong></p>
<p>In the given context, the BCO aims to quickly identify whether a target file or traces of it are present on a suspected system, particularly in unallocated space on drives. An appropriate technique for this purpose is file carving. Among the file carving techniques, Hash Based Carving is a suitable choice for the BCO’s requirements.</p>
<p>Hash Based Carving involves creating hash values of known target files and comparing them to the hash values of data blocks in the unallocated space of a drive. This technique is fast and can efficiently identify complete or partial matches of target files on a suspected system.</p>
<p>The implementation of Hash Based Carving for the BCO’s context can be outlined as follows:</p>
<p>Preparation: Compile a list of known target files that the BCO is concerned about. Calculate the hash values for these files and store them in a database.</p>
<p>Drive imaging: At the border, if a suspicious device is identified, create a forensically sound image of the drive to avoid tampering with the original evidence.</p>
<p>Data extraction: Extract data blocks from the unallocated space of the drive image. Divide the extracted data into fixed-size blocks, which will be used for hash comparison.</p>
<p>Hash comparison: Calculate hash values for each data block extracted from the unallocated space. Compare these hash values with the hash values of the known target files stored in the database.</p>
<p>Identification: If a match is found between the hash values, it indicates that the target file or traces of it are present on the suspected system. In such cases, the system can be retained for further, deeper analysis.</p>
<p>Hash Based Carving allows the BCO to rapidly check devices at the border for illegal digital content, enabling them to focus on suspicious systems for more in-depth investigation. This technique not only minimizes false positives but also helps streamline the process of detecting and preventing the transportation of illegal digital content across the border.</p>
<p><strong>b). The BCO want to reduce the number of false positives as this can result in unnecessary workload and delays at the border. Evaluate your proposed approach in (a), indicate potential causes of false positives and argue how they can be addressed.</strong></p>
<p>The proposed approach in (a) is Hash Based Carving. While it is a fast and efficient method to identify target files or their traces, it is not without potential causes of false positives. Here, we’ll evaluate the approach, highlight the possible reasons for false positives, and suggest ways to address them.</p>
<p>Potential causes of false positives:</p>
<p>Hash collisions: Although rare, hash collisions can occur when two different data blocks result in the same hash value. In such cases, the carving tool might falsely identify a non-target file as a target file, leading to false positives.</p>
<p>Partial matches: Hash Based Carving can detect partial matches of target files. However, there might be instances where the partial matches are unrelated to the target files, thus causing false positives.</p>
<p>Addressing false positives:</p>
<p>Utilize multiple hash algorithms: To minimize the chances of hash collisions, the BCO can use multiple hash algorithms (such as SHA-256, SHA-3, or others) and perform a comparison based on a combination of hash values. This approach significantly reduces the likelihood of false positives due to hash collisions.</p>
<p>Verify file headers and footers: In addition to hash comparison, the BCO can implement a secondary check for file headers and footers to ensure that the identified files are indeed the target files. By verifying the unique file signatures of known target files, the BCO can further minimize false positives.</p>
<p>Threshold-based matching: To address false positives due to partial matches, the BCO can set a threshold value for the level of similarity required for a match. By refining the matching criteria, the BCO can filter out unrelated partial matches, thereby reducing false positives.</p>
<p>By addressing these potential causes of false positives, the BCO can enhance the efficiency of the Hash Based Carving approach, ensuring a more accurate and streamlined process at the border. This will minimize unnecessary workload and delays, allowing the BCO to focus on genuine cases that require deeper analysis.</p>
<p><strong>c). The BCO also want to ensure the legality of the approach. The BCO want to ensure the approach does not require a specific search warrant, as this would impact on the speed and efficiency of the approach in terms of border control. Argue the potential legal concerns and outline how they may be addressed in any implementation for the given context.</strong></p>
<p>Potential legal concerns:</p>
<ol>
<li>Privacy rights: Conducting a file carving process on a suspected system may raise concerns about an individual’s right to privacy, as it involves searching and potentially extracting personal and private information without their consent.</li>
<li>Search and seizure laws: Depending on the jurisdiction, searching an individual’s digital device without a specific search warrant could potentially violate search and seizure laws, which generally require law enforcement to obtain a warrant before conducting a search that infringes on an individual’s privacy.</li>
<li>Chain of custody: Ensuring the integrity and admissibility of any digital evidence obtained through file carving in a court of law requires maintaining a proper chain of custody. This involves documenting every step of the evidence handling process, from the initial search to the final analysis.</li>
</ol>
<p>Ways to address legal concerns:</p>
<ol>
<li>Establish clear policies and guidelines: Develop and implement clear policies and guidelines for border agents to follow when conducting file carving or other digital forensic searches. These guidelines should outline the circumstances under which such searches are permissible, the extent of the search, and the steps to be followed to ensure legal compliance.</li>
<li>Train border agents: Provide regular training for border agents on the legal aspects of digital forensics and the proper procedures for conducting file carving and other digital searches. This can help minimize the risk of violating privacy rights and search and seizure laws.</li>
<li>Obtain appropriate authorization: While the BCO aims to avoid the need for specific search warrants, it is essential to obtain the necessary legal authorization to conduct file carving searches. This could involve establishing a reasonable suspicion or probable cause before conducting a search, depending on the jurisdiction’s requirements.</li>
<li>Implement a tiered search approach: To minimize potential privacy intrusions, consider implementing a tiered search approach that starts with less invasive techniques (such as basic keyword searches) and only escalates to more intrusive methods like file carving when there’s a reasonable basis for suspicion.</li>
<li>Maintain proper documentation: Ensure that a proper chain of custody is maintained throughout the entire digital forensics process. This includes documenting every step of the evidence handling process, from the initial search to the final analysis, to ensure the admissibility of any evidence obtained in a court of law.</li>
</ol>
<p>Ultimately, it is crucial for the BCO to consult with legal experts to develop a compliant and legally defensible approach to file carving and other digital forensic techniques at the border. This can help ensure that the method is both effective in identifying illegal digital content and respecting individual privacy rights and due process requirements.</p>
<ol start="3">
<li><h2 id="Conway-Energy-Case"><a href="#Conway-Energy-Case" class="headerlink" title="Conway Energy Case"></a><strong>Conway Energy Case</strong></h2></li>
</ol>
<p>Conway Energy is a large enterprise with many customers. The company recently discovered that an employee generated letters demanding missed payments from hundreds of customers. The employee used a variant of a standard company letter and altered it to instruct recipients to make payment into their bank account. The employee then lodged the letters with the corporate file store for automatic dispatch. The technical team state the letters can be retrieved, but have concerns as the corporate file store contains millions of documents and letters. The company legal and management team have approved an investigation by the technical team to extract the hundreds of generated letters. The technical team have uncovered a template for the fraudulent standard letter on a corporate workstation. The technical team have altered the letter to include a known affected customer name and address. The technical team then generated a hash of the file, but were unable to identify a match in the file store.</p>
<p><strong>a). The management team are concerned that evidence discovered during the internal investigation may eventually be presented in court. The management team are confident the fraudulent standard letter has been seized legally with appropriate authority. However, the management team want to ensure the discovered standard letter is admissible evidence in court. Evaluate and argue if the uncovered fraudulent letter is admissible evidence to a court of law in the given context.</strong> </p>
<p>The use of scientifically derived and proven methods towards the preservation, collection, validation, identification, analysis, interpretation and presentation of digital evidence derived from digital sources for the purposes of facilitating or furthering the reconstruction of events found to be criminal or helping to  anticipate the unauthorised actions shown to be disruptive to planned operations</p>
<p>Admissibility depends upon several factors: (1) authenticity, (2) relevancy, and (3) competency. </p>
<p>In the context of the discovered fraudulent standard letter, the following factors can be considered:</p>
<ol>
<li>Relevance: <em>The term relevancy</em> means that the information must reasonably tend to prove or disprove any matter in issue. The question or test involved is, “Does the evidence aid the court in answering the question before it?”. The fraudulent letter is directly related to the case at hand, as it demonstrates the employee’s actions to create and distribute the letters demanding missed payments. It is likely to be considered relevant evidence.</li>
<li>Reliability: The technical team must be able to demonstrate that the letter was discovered through a reliable and consistent process, and that the investigation methods were accurate and thorough. Proper documentation of the investigation process, such as the steps taken to identify the fraudulent letter, can help establish its reliability.</li>
<li>Authenticity: The term <em>authenticity</em> refers to the genuine character of the evidence. The court will want to ensure that the discovered letter is indeed the fraudulent standard letter created by the employee. The technical team should be prepared to provide evidence that confirms the letter’s authenticity, such as metadata, timestamps, and any other identifying information. A proper chain of custody should also be maintained to document the handling, storage, and transfer of the letter.</li>
<li>Competency: <em>Competent</em> as used to describe evidence means that the evidence is relevant and not barred by any exclusionary rule. The competency of the evidence in Conway Energy’s case will depend on the technical team’s qualifications and expertise, the methods and techniques used in the investigation, proper documentation and record-keeping, and compliance with legal and procedural requirements. Ensuring these factors are addressed will increase the likelihood of the evidence being considered competent and admissible in court.</li>
</ol>
<p><strong>b). The technical team have uncovered more fraudulent letters, but hashes of each do not match any in the corporate file store. Upon closer inspection the technical team have determined that the employee has inserted words with the font colour set to white. The words are effectively ‘hidden to visual inspection as they are not easily observable. The technical team have generated a definitive list of the hidden words present in the fraudulent letters. The technical team are unconvinced that generating a hash of each fraudulent letter is an effective route. The technical team need to utilise a hashing approach that is able to identify homologous patterns between the known fraudulent letters and those in the file store. Devise and explain an effective hashing approach in the given context.</strong></p>
<p>Since the traditional hashing approach does not seem to be effective in identifying the fraudulent letters, the technical team can explore alternative hashing techniques that focus on content-based similarity rather than exact file matches. One such approach is known as <strong>locality-sensitive hashing (LSH)</strong>.</p>
<p>Locality-sensitive hashing is a technique used to identify similar documents by generating hashes that have a higher probability of colliding when the documents are similar. This approach is more effective in identifying homologous patterns between the known fraudulent letters and those in the file store.</p>
<p>Here’s a possible approach to implementing LSH in this context:</p>
<ol>
<li>Preprocess the documents: Convert all the documents in the corporate file store and the known fraudulent letters to plain text, including the hidden white text, to ensure a consistent format for comparison.</li>
<li>Tokenize and create document vectors: Break the text of each document into tokens (e.g., words or phrases) and represent each document as a high-dimensional vector using techniques like term frequency-inverse document frequency (TF-IDF) or word embeddings. This process converts the documents into a suitable format for LSH.</li>
<li>Implement locality-sensitive hashing: Apply an LSH algorithm to the document vectors. The algorithm will generate similar hashes for documents with similar content, making it easier to identify the fraudulent letters with homologous patterns in the file store.</li>
<li>Set a similarity threshold: Determine an appropriate similarity threshold to identify potential matches. This threshold will depend on the specific LSH algorithm used and the desired balance between precision and recall.</li>
<li>Compare and flag potential matches: Compare the LSH hashes of the known fraudulent letters with those in the corporate file store. Flag any documents with hashes that exceed the set similarity threshold for further investigation.</li>
<li>Verify flagged documents: Manually review the flagged documents to ensure they are indeed fraudulent letters and not false positives. Make note of any discrepancies or issues to further refine the LSH algorithm or similarity threshold, if necessary.</li>
<li>Preserve evidence and implement preventive measures: Once the fraudulent letters have been identified and extracted, preserve the evidence and consider implementing additional security measures to prevent similar incidents in the future.</li>
</ol>
<p>By employing locality-sensitive hashing, the technical team can identify fraudulent letters with similar content patterns, even when the exact file hashes do not match. This approach should be more effective in detecting the hidden white text and other subtle alterations made by the employee.</p>
<p><strong>CTPH:</strong></p>
<ol>
<li>Preprocess the documents: Convert all the documents in the corporate file store and the known fraudulent letters to plain text, including the hidden white text, to ensure a consistent format for comparison.</li>
<li>Apply CTPH algorithm: Implement a CTPH algorithm, such as ssdeep, to generate fuzzy hash values for each document. The algorithm will create hashes that are similar for documents with similar content.</li>
<li>Set a similarity threshold: Determine an appropriate similarity threshold for comparing the generated fuzzy hashes. This threshold will depend on the desired balance between precision and recall in identifying similar documents.</li>
<li>Compare and flag potential matches: Compare the fuzzy hashes of the known fraudulent letters with those in the corporate file store. Flag any documents with hashes that exceed the set similarity threshold for further investigation.</li>
<li>Verify flagged documents: Manually review the flagged documents to ensure they are indeed fraudulent letters and not false positives. Make note of any discrepancies or issues to further refine the CTPH algorithm or similarity threshold, if necessary.</li>
<li>Preserve evidence and implement preventive measures: Once the fraudulent letters have been identified and extracted, preserve the evidence and consider implementing additional security measures to prevent similar incidents in the future.</li>
</ol>
<p>By employing CTPH, the technical team can identify fraudulent letters with similar content patterns, even when there are subtle differences such as the hidden white text. This approach should be more effective in detecting the homologous patterns between the known fraudulent letters and those in the file store compared to traditional hashing methods.</p>
<p><strong>c). The technical team are concerned that the hashing approach devised in (b) may not be appropriate in the given context. Identify potential concerns with the hashing approach devised in (b) for the given context.</strong></p>
<ol>
<li>Sensitivity to small changes: Although CTPH is designed to detect similar files, it may not always be sensitive enough to detect subtle differences, such as the hidden white text used in the fraudulent letters. This could lead to false negatives, where the technical team fails to identify some fraudulent letters.</li>
<li>False positives: CTPH can sometimes produce false positives, where non-fraudulent documents are flagged as potentially fraudulent due to similarity in content or structure. This could result in the technical team spending time and resources on manually reviewing non-fraudulent documents.</li>
<li>Scalability: Given that the corporate file store contains millions of documents, comparing the fuzzy hashes of the known fraudulent letters with those in the file store could be computationally expensive and time-consuming.</li>
<li>Accuracy: The accuracy of CTPH in identifying fraudulent letters depends on the chosen similarity threshold. Setting an appropriate threshold can be challenging, as a high threshold might result in false negatives, while a low threshold could lead to false positives.</li>
<li>Legal admissibility: There may be concerns about the legal admissibility of the evidence gathered using CTPH, as it relies on similarity rather than exact matches. The court may require additional validation or proof that the flagged documents are indeed fraudulent.</li>
</ol>
<p>Given these concerns, the technical team should carefully consider whether the CTPH approach is appropriate for their specific context. They may need to explore alternative methods, such as advanced text analytics or machine learning techniques, to more accurately and efficiently identify the fraudulent letters in the file store. Additionally, the technical team should consult with legal professionals to ensure the chosen approach meets the requirements for evidence admissibility in court.</p>
<p><strong>However, if we use LSH,</strong></p>
<p>Using locality-sensitive hashing (LSH) as your hash algorithm could be a suitable alternative for Conway Energy’s case, as LSH is designed to identify similar documents by generating hashes that have a higher probability of colliding when the documents are similar. This approach can be more effective in identifying homologous patterns between the known fraudulent letters and those in the file store.</p>
<p>Still we need to consider the potential problems of LSH:</p>
<p>Locality-sensitive hashing (LSH) is a powerful technique for identifying similar documents, but it comes with some potential concerns that should be considered in the context of the Conway Energy case:</p>
<ol>
<li>False positives: LSH can produce false positives, where non-fraudulent documents are flagged as potentially fraudulent due to similarity in content or structure. This can lead to spending additional time and resources on manual review of non-fraudulent documents.</li>
<li>False negatives: Depending on the chosen similarity threshold and LSH algorithm, LSH can also produce false negatives, where fraudulent documents are not flagged due to insufficient similarity in their LSH hashes. This can result in missing important evidence.</li>
<li>Scalability: LSH requires a considerable amount of computation and storage, especially when dealing with large datasets like Conway Energy’s corporate file store. This can lead to increased processing time and resource requirements.</li>
<li>Parameter selection: LSH algorithms often have several parameters that need to be fine-tuned, such as the similarity threshold, the number of hash functions, and the number of hash tables. Selecting appropriate parameters can be challenging and may require empirical testing and validation.</li>
<li>Preprocessing and feature extraction: LSH relies on converting documents into high-dimensional vectors, which may require considerable preprocessing and feature extraction, such as tokenization, stemming, and text vectorization using techniques like TF-IDF or word embeddings. This can be computationally expensive and may introduce additional complexity.</li>
<li>Legal admissibility: Similar to CTPH, there may be concerns about the legal admissibility of the evidence gathered using LSH, as it relies on similarity rather than exact matches. The court may require additional validation or proof that the flagged documents are indeed fraudulent.</li>
</ol>
<p>Given these potential concerns, the technical team should carefully consider whether the LSH approach is appropriate for their specific context. They may need to explore alternative methods or combine LSH with other techniques to improve accuracy, efficiency, and legal admissibility. Additionally, the technical team should consult with legal professionals to ensure the chosen approach meets the requirements for evidence admissibility in court.</p>
<ol start="4">
<li><h2 id="Laputa-University-Case"><a href="#Laputa-University-Case" class="headerlink" title="Laputa University Case"></a>Laputa University Case</h2></li>
</ol>
<p>The University of Laputa replaces computer systems for staff every five years. The management team have been informed by research staff that some systems have been replaced without sufficient notice and as a result important files have been lost. The management team have also been informed that some systems are being sold through various online auction websites, rather than being recycled.</p>
<p>The management team suspects a member of the systems support team has been selling the systems via online auction websites. The management team have authorised the digital investigations team to purchase several systems from online auction websites that they suspect have come from the institution. The management team have also authorised the digital investigation team to utilise appropriate data recovery techniques to recover files.</p>
<p><strong>a). The digital investigations team want to recover any previous Personal Storage Table (PST) files from many of the systems they have purchased from online auction websites. The digital investigations team believe such a file, in general, will not be heavily fragmented due to the numerous approaches adopted by modern file systems. Argue whether the position of the digital investigations team is accurate.</strong></p>
<p>The digital investigations team’s position that Personal Storage Table (PST) files, in general, will not be heavily fragmented due to the numerous approaches adopted by modern file systems is mostly accurate. However, some factors can still contribute to the fragmentation of PST files, even on modern file systems.</p>
<p>Modern file systems, such as NTFS, HFS+, and ext4, are designed to minimize fragmentation by using various allocation strategies and techniques. These file systems attempt to keep related data blocks close together and allocate new blocks in a way that minimizes fragmentation. As a result, the overall fragmentation of files on these file systems tends to be less severe compared to older file systems like FAT.</p>
<p>However, PST files, which are used by Microsoft Outlook to store email messages, contacts, and other data, can still become fragmented under certain conditions:</p>
<p>Large file sizes: PST files can grow quite large over time, especially if users have many emails and attachments. Large files can be more susceptible to fragmentation as they are more likely to be allocated in non-contiguous blocks.</p>
<p>Frequent updates: PST files are updated frequently as new emails are received, sent, or deleted. These updates can lead to fragmentation as the file system may need to allocate new blocks to accommodate the changes in file size and content.</p>
<p>Insufficient free space: If there is insufficient free space available on the storage device, it may be challenging for the file system to allocate contiguous blocks for new or updated data, resulting in fragmentation.</p>
<p>Multiple concurrent users: In a shared environment, multiple users might be accessing and modifying different files simultaneously. This can create a higher likelihood of fragmentation as the file system attempts to allocate blocks for various files concurrently.</p>
<p>While modern file systems are better at managing fragmentation, it is still essential for the digital investigations team to consider the factors mentioned above when attempting to recover PST files from the purchased systems. Fragmentation can affect the ease and success of the data recovery process, and the team may need to employ specialized data recovery tools or techniques to recover fragmented PST files effectively.</p>
<p><strong>b). The digital investigations team eventually assume the PST files they want to extract from the purchased systems are likely to comprise of more than two fragments and the relevant clusters are not necessarily in sequence. Devise and justify a carving approach to recover a single file in the given context. Highlight any limitations or constraints in the proposed solution.</strong></p>
<p>In the given context, the digital investigations team can employ a carving approach that combines signature-based carving and file system metadata analysis to recover the fragmented PST files. This approach involves the following steps:</p>
<ol>
<li>Signature-based carving: Scan the storage device for known file signatures or magic numbers associated with PST files. This process can help identify the starting point of each PST file fragment. Common magic numbers for PST files include <code>!BDN</code> for Outlook 97-2002 and <code>!BD0</code> for Outlook 2003 and later.</li>
<li>File system metadata analysis: Analyze the file system metadata to gather information about the allocation and location of clusters associated with PST files. This can help identify the correct sequence of fragmented clusters and uncover additional fragments that may not have been detected through signature-based carving.</li>
<li>Cluster chaining: Once the starting points of the file fragments and their metadata are identified, attempt to reconstruct the file by chaining the clusters in the correct order based on their allocation in the file system. This can be done using specialized data recovery tools or custom-built scripts.</li>
<li>File validation: After the PST file has been reconstructed, validate its integrity by checking its internal structure and attempting to open it using a compatible email client or PST viewer. This step helps ensure that the recovered file is complete and functional.</li>
<li>Iterative refinement: If the initial reconstruction is unsuccessful, refine the carving approach by adjusting parameters, such as the search window for signature-based carving or the cluster allocation strategy. Repeat the process until a successful recovery is achieved or it becomes clear that the file cannot be recovered.</li>
</ol>
<p>Limitations and constraints of the proposed solution:</p>
<ol>
<li>Incomplete recovery: The carving approach may not always be successful in recovering the entire PST file, particularly if some fragments are missing or corrupted.</li>
<li>Time-consuming: This process can be time-consuming, especially when dealing with large PST files or complex fragmentation patterns.</li>
<li>False positives: Signature-based carving can sometimes produce false positives, where unrelated data is mistakenly identified as part of the PST file.</li>
<li>Expertise required: The proposed carving approach requires a certain level of expertise in data recovery and file system analysis, as well as access to specialized tools or custom scripts.</li>
</ol>
<p>Despite these limitations, the proposed carving approach should provide the digital investigations team with a robust method for recovering fragmented PST files from the purchased systems. The team may need to iterate and refine the approach as necessary to maximize the chances of successful file recovery.</p>
<p><strong>c). The digital investigations team have since learned that they need to recover several PST files from each system, not just a single PST file. The digital investigations team have decided that the speed of recovery of the multiple files is more important than the accuracy of recovery. Devise a carving approach to recover multiple files in the given context. Highlight any limitations or constraints in the proposed solution.</strong></p>
<p>In the given context, where the speed of recovery is more important than accuracy, the digital investigations team can employ a streamlined carving approach to recover multiple PST files from each system. This approach involves the following steps:</p>
<ol>
<li>Signature-based carving: Perform a bulk scan of the storage device for known file signatures or magic numbers associated with PST files (e.g., <code>!BDN</code> for Outlook 97-2002 and <code>!BD0</code> for Outlook 2003 and later). This process helps identify the starting point of each PST file fragment.</li>
<li>File size estimation: Estimate the size of each PST file based on the distance between consecutive file signatures. This can help in the quick recovery of files without needing extensive file system metadata analysis.</li>
<li>File extraction: Extract the identified file fragments based on the estimated size and signature locations. This step may involve some level of over-extraction or under-extraction to ensure that complete files are recovered, at the expense of potential inaccuracies.</li>
<li>File validation (optional): If time permits, validate the integrity of the recovered PST files by checking their internal structure and attempting to open them using a compatible email client or PST viewer. This step can help identify any major issues with the recovered files.</li>
</ol>
<p>Limitations and constraints of the proposed solution:</p>
<ol>
<li>Inaccurate recovery: By prioritizing speed over accuracy, the carving approach may result in inaccurately recovered PST files, with potentially missing or corrupted data.</li>
<li>False positives: Signature-based carving can produce false positives, where unrelated data is mistakenly identified as part of the PST file. This may lead to the recovery of irrelevant or incomplete files.</li>
<li>File fragmentation: This approach does not account for fragmented files, which may result in incomplete recovery of some PST files.</li>
<li>File validation: Skipping or minimizing the file validation step can increase the risk of recovering unusable or corrupted files.</li>
<li>Expertise required: The proposed carving approach requires a certain level of expertise in data recovery and the ability to quickly analyze and adapt to the specific storage device’s conditions.</li>
</ol>
<p>Despite these limitations, the proposed carving approach should provide the digital investigations team with a faster method for recovering multiple PST files from the purchased systems. The team may need to accept the trade-off between speed and accuracy, understanding that some of the recovered files may be incomplete or corrupted.</p>
<p><strong>d). The digital investigations team have recovered the PST file from one of the systems purchased online with the revelation that the PST does not belong to any researcher or member of the staff at the University of Laputa. The digital investigations team actually suspect the file might belong to another university. The digital investigations team have decided to investigate the system further to identify the specific individual. Argue whether the actions of the digital investigation team are appropriate in the given context.</strong></p>
<p>In the given context, the actions of the digital investigations team can be seen as both appropriate and inappropriate, depending on the objectives and the ethical considerations involved.</p>
<p>Arguments for the appropriateness of the digital investigations team’s actions:</p>
<ol>
<li>Prevent potential misuse of data: The recovery of a PST file that does not belong to any researcher or staff member at the University of Laputa raises concerns about the potential misuse of the data contained within it. Investigating the system further could help the team understand how this file ended up on the system and prevent any potential misuse of the information.</li>
<li>Uphold data privacy and security: Universities are responsible for protecting the privacy and security of personal and sensitive information. Investigating the origin of the unknown PST file and identifying the individual it belongs to could help the team ensure that the university is upholding its data protection obligations.</li>
</ol>
<p>Arguments against the appropriateness of the digital investigations team’s actions:</p>
<ol>
<li>Privacy concerns: Investigating the contents of a PST file that does not belong to a member of the University of Laputa could be seen as an invasion of privacy. The team should consider the ethical implications of accessing someone else’s personal data without their consent.</li>
<li>Legal considerations: The digital investigations team should be aware of any legal implications associated with accessing and analyzing data that does not belong to their institution. There might be laws and regulations that govern the handling of such data, and the team should ensure they are acting within the legal framework.</li>
<li>Scope of investigation: The primary objective of the investigation was to determine whether a member of the systems support team was selling university-owned systems online. The discovery of a PST file that does not belong to any researcher or staff member may not be directly relevant to this objective. The team should consider whether further investigation of the file falls within the scope of their initial mandate.</li>
</ol>
<p>In conclusion, the actions of the digital investigations team can be considered appropriate if they are conducted within legal and ethical boundaries and if they serve a legitimate purpose, such as protecting data privacy and security. However, the team should carefully weigh the potential risks and implications of their actions, ensuring they do not infringe upon the privacy rights of individuals or act outside the scope of their initial investigation.</p>
<h1 id="Sample-exam-paper-2020"><a href="#Sample-exam-paper-2020" class="headerlink" title="Sample exam paper 2020"></a>Sample exam paper 2020</h1><ol>
<li><h2 id="Lime-Legal-Case"><a href="#Lime-Legal-Case" class="headerlink" title="Lime Legal Case"></a>Lime Legal Case</h2></li>
</ol>
<p>The management team for Lime Legal, a large legal firm that conducts numerous digital investigations, has decided to develop its own hash function for use in digital investigations. The management team has commissioned a specialised software developer to design and implement the hash function. The specialised software developer states that compression is an important requirement for a hash function.</p>
<p><strong>a). Argue for another TWO important requirements for a hash function in the given  context. (approximately 200 words)</strong></p>
<p>要想要设计一个哈希算法，需要满足以下几点要求：</p>
<ol>
<li>从哈希值不能反向推导出原始数据（哈希算法更多算是一种单向加密算法）。</li>
<li>对输入数据敏感，输入数据只要改变 1 bit，那么最终得到的哈希值也要不同。</li>
<li>冲突的概率要小，即对于不同的原始数据，哈希值相同的概率非常小。</li>
<li>哈希算法的执行效率要高，针对较长的文本，也能快速计算出哈希值。</li>
</ol>
<p>While compression is indeed an important requirement for a hash function, there are two other crucial requirements that must be considered for Lime Legal’s digital investigations: security and performance.</p>
<p>Firstly, security is paramount for a hash function in the context of digital investigations. A secure hash function needs to exhibit several properties, including collision resistance, preimage resistance, and second preimage resistance. Collision resistance ensures that it is computationally infeasible to find two distinct inputs that map to the same hash output, which is crucial to maintain the integrity of the evidence. Preimage resistance makes it difficult to find an input for a given hash output, while second preimage resistance ensures that it is hard to find a different input with the same hash output as an existing input. These security properties are essential for Lime Legal’s work as they ensure the reliability and trustworthiness of the digital evidence in legal proceedings.</p>
<p>Secondly, performance is another key requirement for a hash function in digital investigations. Lime Legal’s work likely involves processing large volumes of data in a timely manner. As such, the hash function must be efficient in terms of computational and memory requirements. A fast and resource-efficient hash function will not only minimize the time spent on processing the data but also reduce the likelihood of bottlenecks in the investigation process. This enables Lime Legal to provide more effective and timely services to their clients.</p>
<p>In conclusion, besides compression, security and performance are two essential requirements for a hash function in the context of Lime Legal’s digital investigations. Ensuring a secure and efficient hash function will not only maintain the integrity of digital evidence but also enhance the effectiveness of the firm’s investigative processes.</p>
<p><strong>b). The specialised software developer states that elements of the bespoke hash  function will rely upon some internal initial values and constants. The  specialised software developer states that these values and constants will be generated using a sophisticated and secret algorithm. The specialised software  developer informs the management team that the initial values and constants  will be made public along with the design and implementation details, but the  algorithm to generate them will be kept secret and managed by the company.  Argue whether the approach favoured by the specialised software developer is  appropriate in the given context.(approximately 400 words)</strong></p>
<p>One of the primary concerns is the lack of transparency in the process. In the field of cryptography, it is widely accepted that security should rely on the <strong>strength of the algorithm</strong> rather than the secrecy of its design. This principle is known as <strong>Kerckhoffs’s principle</strong>. By keeping the algorithm for generating initial values and constants secret, Lime Legal risks undermining the trust and credibility of their hash function. Digital evidence generated using a hash function with undisclosed components may face challenges in legal proceedings, as opposing parties could question its integrity.</p>
<p>Additionally, the secrecy of the algorithm prevents independent verification and analysis by the broader cryptographic community. Peer review and open scrutiny are essential to establishing the security and reliability of cryptographic algorithms. Closed-source designs may contain unintentional flaws or vulnerabilities that would otherwise be identified and resolved through a transparent review process.</p>
<p>Furthermore, the reliance on a secret algorithm for generating initial values and constants introduces the possibility of a single point of failure. If the secret algorithm is compromised, the entire hash function could be rendered insecure, potentially jeopardizing ongoing and past investigations.</p>
<p>In conclusion, the approach favored by the specialized software developer is not appropriate in the given context. Lime Legal should consider adhering to established cryptographic principles and industry best practices, which emphasize transparency, open scrutiny, and independent verification to ensure the credibility and robustness of their bespoke hash function.</p>
<p><strong>c). The specialised software developer is not entirely sure how to design the bespoke hash function. Devise a potential hash function that exhibits a Merkle-Damgård construction, highlight and argue the importance of any core components. (approximately 400 words)</strong></p>
<p><strong>d). The management team want to employ the use of the bespoke hash function to identify unauthorised files on employee smartphones and laptops. The specialised software developer states they can develop a system that can be used to rapidly inspect employee smartphones and laptops as part of random security searches as employees leave campus. A member of the management team is concerned that such a process may violate the privacy of the employee and some employees may feel targeted. Argue whether the approach favoured by the management team is appropriate  in the given context.(approximately 250 words)</strong></p>
<ol start="2">
<li><h2 id="Orange-Entertainment"><a href="#Orange-Entertainment" class="headerlink" title="Orange Entertainment"></a>Orange Entertainment</h2></li>
</ol>
<p>The management team for Orange Entertainment want to recover files from a Microsoft Windows 10 workstation that have been destroyed by a disgruntled employee. The management team believe the employee destroyed the files as they had been manipulating them for their own gain over several months. The management team have authorised the systems support team to recover the files as part of their investigation. The systems support team have allocated trainees Bill and Ben to lead the investigation and recover the files.</p>
<p><strong>a). Ben has identified ShadowExplorer as a useful tool to recover files from the Microsoft Windows 10 workstation.Discuss TWO relevant features of the ShadowExplorer tool and argue the relevance in the given context. (approximately 200 words)</strong></p>
<p>ShadowExplorer is a valuable tool for recovering lost or damaged files, offering two key features that make it particularly relevant for the Orange Entertainment management team’s investigation.</p>
<ol>
<li>Access to Shadow Copies: Since it is a Windows OS, One of the primary features of ShadowExplorer is its ability to access and browse through the shadow copies of files created by the Windows Volume Shadow Copy Service (VSS) on Windows. These shadow copies act as snapshots of the files and their respective states at different points in time. In the context of Orange Entertainment’s investigation, this feature is crucial as it allows Bill and Ben to potentially recover earlier versions of the manipulated files. By restoring these earlier versions, the management team can gain insight into the disgruntled employee’s actions and better understand the extent of the manipulation.</li>
<li>User-friendly interface: ShadowExplorer’s intuitive and user-friendly interface is another important feature that makes it suitable for the investigation. The tool presents a familiar Explorer-like interface, enabling Bill and Ben to easily navigate through the shadow copies and locate the relevant files. This ease of use will help streamline the recovery process, allowing the trainees to efficiently identify and restore the destroyed files. Furthermore, since both Bill and Ben are trainees, the simplicity of the tool will make it easier for them to learn and utilize in their investigation, reducing the chances of making mistakes during the recovery process.</li>
</ol>
<p>In summary, ShadowExplorer’s ability to access shadow copies and its user-friendly interface make it an ideal tool for Bill and Ben to recover the destroyed files, providing Orange Entertainment’s management team with the information they need to assess the situation and address the employee’s misconduct.</p>
<p><strong>b. Bill has decided to use ShadowExplorer on the employee workstation in-situ, but Ben is concerned if such an approach is appropriate. Ben also suggests the pair should at least take some simple notes of their actions, Bill argues it is not necessary. Critique the differing positions of Bill and Ben in the given context.(approximately 300 words)</strong></p>
<p>Bill’s decision to use ShadowExplorer directly on the employee workstation in-situ might seem efficient and time-saving; however, Ben’s concerns are valid, particularly in the context of an investigation where preserving evidence and maintaining a clear chain of custody is crucial.</p>
<p>Using ShadowExplorer in-situ poses <strong>several risks</strong>. First, the process might inadvertently alter the state of the workstation, potentially corrupting or overwriting evidence. Such modifications can jeopardize the <strong>integrity of the investigation</strong> and might also <strong>impact the legal admissibility of the evidence</strong>, should the management team decide to pursue legal action against the disgruntled employee. Instead, it is more appropriate to <strong>create a forensic image</strong> of the hard drive and work on a copy of that image to ensure the original data remains unaltered.</p>
<p>Second, working directly on the employee workstation increases the risk of <strong>accidental data loss or damage</strong>, especially given that both Bill and Ben are trainees. Utilizing a forensic copy provides a <strong>safety net</strong>, allowing them to <strong>revert</strong> to the original state if any mistakes are made during the recovery process <strong>(investigation revertiable)</strong>.</p>
<p>Regarding the documentation of their actions, Ben’s suggestion to take simple notes is actually a necessary step in a proper investigation. Maintaining detailed records of their actions, tools used, and findings is essential for several reasons:</p>
<ol>
<li>Accountability: Documenting the investigation process ensures that all actions taken can be justified and reviewed, which helps maintain the credibility and integrity of the investigation.</li>
<li>Reproducibility: Detailed notes allow others, including senior team members or external experts, to review and reproduce the steps taken in the investigation if needed, helping to validate the findings.</li>
<li>Legal purposes: Should the case go to court, proper documentation is vital for establishing the chain of custody and proving the legitimacy of the evidence obtained.</li>
</ol>
<p>In conclusion, Ben’s concerns about using ShadowExplorer in-situ and the need for documentation are valid. Adopting a more cautious approach that preserves the integrity of the evidence and maintains a clear record of their actions will not only improve the quality of the investigation but also ensure that the recovered data can be used effectively in any potential legal proceedings.</p>
<h1 id="2019-Sample-Paper"><a href="#2019-Sample-Paper" class="headerlink" title="2019 Sample Paper"></a>2019 Sample Paper</h1><h2 id="1-Janus-in-BBFS"><a href="#1-Janus-in-BBFS" class="headerlink" title="1. Janus in BBFS"></a>1. Janus in BBFS</h2><p>Janus is a software engineer for Bill and Ben Financial Services (BBFS). Janus has concerns about algorithms that unfairly disadvantage business customers. Janus has raised it with his line manager, but she was disinterested in his concerns. Janus decides to effectively smuggle elements of source code and associated documents outside the organisation using an external disk.</p>
<p><strong>(a) Janus is aware that the company utilises forensic techniques to identify encrypted files on external disks taken outside the organisation. Janus decides to smuggle the data via an external disk using steganography.Contrast steganography with cryptography and argue for steganography in the given context.[4]</strong></p>
<p>Steganography and cryptography are two distinct techniques used for protecting and concealing data. While both methods have their applications, steganography might be more suitable for Janus’s situation due to its ability to hide information within other data.</p>
<p>Steganography involves concealing information within another file or data stream, such as an image, audio, or video file, in such a way that it is virtually undetectable to an observer. The information is embedded in the carrier file without changing its perceptible characteristics, making it difficult to identify the presence of hidden data. This technique allows for the secret transfer of information, as the carrier file appears innocuous and attracts little suspicion.</p>
<p>Cryptography, on the other hand, focuses on encrypting data to make it unreadable and incomprehensible to unauthorized parties. While cryptography protects the contents of a message, it does not hide the fact that encrypted data exists. Encrypted files can draw attention and raise suspicion, potentially leading to further investigation.</p>
<p>In the given context, steganography might be more suitable for Janus’s needs. Since BBFS uses forensic techniques to identify encrypted files, using cryptography to protect the data on an external disk could raise red flags and make it more likely for Janus’s actions to be discovered. Steganography, however, would allow Janus to hide the source code and documents within seemingly harmless files, avoiding detection by BBFS’s security measures. By employing steganography, Janus can minimize the risk of his actions being discovered while still smuggling the data out of the organization.</p>
<p><strong>(b) Janus has decided to use the Bit Plane Complexity Segmentation (BPCS) algorithm to ensure high-capacity use of vessel images. Janus wants to ensure that insertion of the payload will not result in images that are vulnerable to human visualinspection. Janus plans to use several holiday images in Pure Binary Coding (PBC) with many ‘noisy’ qualities, e.g. sand and rain. Explain THREE operations of the BPCS algorithm to ensure the payload is effectively hidden in the given context.[9]</strong></p>
<p><strong>BPCS-隐写术（Bit-Plane Complexity Segmentation steganography）是</strong><a href="https://en.wikipedia.org/wiki/File_camouflage">数字隐写术</a>的一种。</p>
<p>数字隐写术可以通过将机密数据（即秘密文件）嵌入到一些称为“容器数据”的媒体数据中来非常安全地隐藏它们。容器数据也称为“承运人、封面或虚拟数据”。在 BPCS 隐写术中，<a href="https://en.wikipedia.org/wiki/24-bit_color">真彩色</a>图像（即<a href="https://en.wikipedia.org/wiki/24-bit_color">24 位彩色</a>图像）主要用于血管数据。实际中的嵌入操作是用机密数据替换血管图像<a href="https://en.wikipedia.org/wiki/Bit_plane">位平面</a>上的“复杂区域” 。BPCS-隐写术最重要的方面是嵌入容量非常大。与仅使用最不重要的数据位的简单图像隐写术相比，因此（对于<a href="https://en.wikipedia.org/wiki/24-bit_color">24 位颜色</a>图像）只能嵌入相当于总大小 1&#x2F;8 的数据，而 BPCS 隐写术使用多个位平面，因此可以嵌入更多的数据，尽管这取决于单个图像。对于“正常”图像，在图像退化变得明显之前，大约 50% 的数据可能可以用秘密数据替换。</p>
<p>比特平面复杂度分割（BPCS）算法是一种有效的隐写术方法，用于在图像中隐藏数据，特别是那些具有 “噪音 “性质的图像。在Janus的案例中，使用带有沙子和雨水的假日图像对BPCS隐写术是有利的。以下是BPCS算法的三个关键操作，有助于确保有效地隐藏有效载荷：</p>
<p>分解为位平面： BPCS算法首先将容器图像分解为一系列的位平面。每个比特平面代表了图像二进制表示法中的不同重要性水平。例如，最重要的位（MSB）平面包含最高的对比度信息，而最不重要的位（LSB）平面包含最低的对比度信息。通过以这种方式分解图像，BPCS可以操作对比度较低、”噪音较大 “的位平面来嵌入有效载荷，而不会对图像造成明显的变化。</p>
<p>复杂度计算和分割： BPCS通过计算不同值（0或1）的接壤像素对的比例来评估每个位面段的复杂性。如果一个片段的复杂性超过了预定的阈值，它就被认为是 “有噪声 “的，适合嵌入有效载荷。在Janus的案例中，使用带有沙子和雨水的图像增加了可用于数据隐藏的复杂片段的数量。这有助于确保有效载荷被很好地隐藏起来，难以被人类的视觉检查所发现。</p>
<p>自适应的数据嵌入： BPCS将有效载荷嵌入到上一步确定的复杂片段中。通过根据其复杂性自适应地选择合适的片段，BPCS确保嵌入的数据不会对图像造成明显的变化。该算法以保持图像的整体复杂性的方式，用有效载荷数据替换原始的复杂片段。这种自适应的嵌入过程对于在给定的环境中有效地隐藏有效载荷至关重要，因为它减少了通过视觉检查发现的风险。</p>
<p>通过使用BPCS算法，Janus可以利用假日图像的噪声特性来有效地隐藏有效载荷。分解为位平面，复杂度计算和分割，以及自适应数据嵌入操作共同作用，确保隐藏的数据难以被发现，同时对图像的视觉质量影响最小。</p>
<p><strong>(c) Janus is planning on implementing the BPCS algorithm on his workstation as to ensure he can embed payload data in the vessel images.Devise a simple BPCS algorithm to embed payload data in vessel images.[6]</strong></p>
<p>A simple BPCS algorithm for embedding payload data in vessel images can be broken down into the following steps:</p>
<ol>
<li>Image Preparation: Convert the vessel image to a suitable format, such as a lossless format like PNG or BMP, to prevent compression artifacts from affecting the steganography process. Resize the image if necessary to accommodate the payload data.</li>
<li>Bit Plane Decomposition: Decompose the vessel image into a series of bit planes. Separate the image into its color channels (e.g., red, green, and blue) and represent each channel using binary values. Then, create bit planes for each level of significance, from the most significant bit (MSB) to the least significant bit (LSB).</li>
<li>Payload Preparation: Convert the payload data into binary format. You may consider compressing and encrypting the data beforehand to further protect and optimize the payload.</li>
<li>Complexity Calculation and Segmentation: Evaluate the complexity of each bit plane segment by calculating the proportion of bordering pixel pairs with different values (0 or 1). If a segment’s complexity surpasses a predefined threshold, it is considered ‘noisy’ and suitable for embedding the payload.</li>
<li>Adaptive Data Embedding: Iterate through the noisy segments identified in the previous step, and embed the payload data by replacing the original complex segments. Ensure that the embedding process maintains the overall complexity of the image to avoid arousing suspicion.</li>
<li>Image Reconstruction: Reassemble the modified bit planes into their respective color channels, and then combine the channels to create the final stego-image. Save the stego-image in a lossless format to preserve the embedded data.</li>
<li>Payload Extraction: To extract the payload data from the stego-image, reverse the process by decomposing the stego-image into bit planes, identifying the noisy segments where the payload data was embedded, and reconstructing the original payload data from the binary values stored in those segments.</li>
</ol>
<p>By following these steps, Janus can implement a simple BPCS algorithm to effectively embed payload data in vessel images. The use of noisy segments for data embedding makes the hidden information difficult to detect through visual inspection, providing a level of security for the concealed data.</p>
<p><strong>(d) Janus is concerned that inspection techniques will reveal use of the steganography approach. Janus is concerned he will be legally required to reveal the devised algorithm in (c) to relevant authorities under the (UK) Regulation of Investigatory Powers Act 2000 (RIPA).Argue whether Janus would be required to reveal the devised algorithm in (c) under the (UK) Regulation of Investigatory Powers Act 2000 (RIPA).[4]</strong></p>
<p>While I am not a legal expert, I can provide some general information on the matter. The Regulation of Investigatory Powers Act 2000 (RIPA) in the UK provides a legal framework for the use of investigatory powers by authorities, including the interception of communications, acquisition of communications data, and the use of covert human intelligence sources, among others.</p>
<p>Under Part III of RIPA, authorities may legally demand the disclosure of protected information, which includes encrypted data or keys necessary to decrypt the information. If served with a notice under RIPA, individuals or organizations are required to provide the requested information or assistance, or face penalties for non-compliance.</p>
<p>In the case of Janus, if the relevant authorities become aware of his use of steganography and suspect that he has hidden sensitive or illegal information within the images, they may issue a notice under RIPA, requiring Janus to disclose the hidden data or provide the necessary means to access it. This could potentially include revealing the BPCS algorithm devised in (c).</p>
<p>However, RIPA notices are typically issued when there is a justified need for access to the protected information, such as in cases of national security, crime prevention, or public safety concerns. Whether Janus would be required to reveal the devised algorithm under RIPA would depend on the specific circumstances of his case and whether the authorities deem it necessary to obtain the hidden data for a lawful purpose.</p>
<p>It is essential for Janus to consider the legal implications of his actions and consult with a legal professional if he has concerns regarding the use of steganography and potential requirements under RIPA.</p>
<h2 id="2-Pagli-and-Antonellis"><a href="#2-Pagli-and-Antonellis" class="headerlink" title="2. Pagli and Antonellis"></a>2. Pagli and Antonellis</h2><p>Pagli and Antonellis are novice cyber system forensic investigators and have started a small start-up business. The pair have invested in two, basic laptop computers. The pair have been contracted by a large company to investigate an employee workstation. The company has multiple workstations, comprising of basic components, e.g. limited processing capabilities. The company management are particularly interested in specific Microsoft Word documents. The company state the workstations do not make use of any anti-forensics techniques, e.g. full-disk encryption.</p>
<p><strong>(a) Pagli and Antonellis have recovered the files of particular interest to company management but have discovered the files are encrypted and protected by unknown passwords. The pair are concerned that the passwords are sophisticated and cannot be easily determined. Pagli argues that the Distributed Network Attack (DNA) software tool from AccessData could be valuable.Describe TWO technical approaches employed by Distributed Network Attack(DNA) tool and argue the relevance in the given context[6]</strong></p>
<p>The Distributed Network Attack (DNA) tool from AccessData is designed to assist in recovering passwords for encrypted files by leveraging the power of distributed computing. In the given context, where Pagli and Antonellis have recovered encrypted Microsoft Word documents with unknown passwords, DNA could be a valuable tool to help them gain access to the files. Here are two technical approaches employed by the DNA tool and their relevance in this context:</p>
<ol>
<li>Brute-force attack: DNA can perform a brute-force attack, which involves systematically attempting every possible password combination until the correct one is found. Brute-force attacks can be time-consuming, especially if the password is long and complex. However, DNA’s distributed computing capabilities allow it to harness the processing power of multiple computers, including the company’s workstations, to expedite the password recovery process. This distributed approach makes it more feasible to crack sophisticated passwords within a reasonable time frame, increasing the likelihood of success for Pagli and Antonellis.</li>
<li>Dictionary attack: Another approach employed by DNA is the dictionary attack. This method involves using a precompiled list of words, phrases, or known passwords (a dictionary) to attempt to guess the password. DNA can also utilize rules-based variations, such as common substitutions or character additions, to further expand the list of potential passwords. Dictionary attacks are generally faster than brute-force attacks, as they focus on more likely password candidates. In the given context, this approach could be relevant if the employee used a password based on a dictionary word, a common phrase, or a known pattern.</li>
</ol>
<p>In conclusion, the Distributed Network Attack tool could be valuable for Pagli and Antonellis in their efforts to recover the passwords for the encrypted Microsoft Word documents. By employing both brute-force and dictionary attacks, while utilizing distributed computing resources, DNA increases the chances of successfully cracking the passwords, even if they are sophisticated. This would ultimately help Pagli and Antonellis fulfill their contract and provide the company management with access to the files of interest.</p>
<p><strong>(b) Antonellis argues that the pair cannot afford to invest in Distributed Network Attack (DNA) software as resources are limited. Pagli argues that tool would be invaluable to the current case. Antonellis argues the pair should use a combination of command line tools and tailored scripts.Compare and contrast the tools suggested by Pagli and Antonellis and argue for the optimal approach in the given context.[8]</strong></p>
<p>Both the Distributed Network Attack (DNA) software and a combination of command line tools and tailored scripts have their merits and drawbacks in the given context. Here, we will compare and contrast these approaches and argue for the optimal solution for Pagli and Antonellis.</p>
<p>Distributed Network Attack (DNA) software: Pros:</p>
<ol>
<li>Comprehensive and user-friendly: DNA is a dedicated tool designed for password recovery, with built-in features and functionality that simplify the process for users.</li>
<li>Distributed computing: DNA leverages the power of multiple computers to speed up the password recovery process, making it more efficient for cracking complex passwords.</li>
<li>Multiple attack strategies: DNA supports both brute-force and dictionary attacks, offering a versatile approach to password recovery.</li>
</ol>
<p>Cons:</p>
<ol>
<li>Cost: DNA may be expensive, particularly for a small start-up with limited resources.</li>
<li>Overkill for simple cases: DNA’s advanced capabilities may not be necessary if the target password is weak or follows a predictable pattern.</li>
</ol>
<p>Command line tools and tailored scripts: Pros:</p>
<ol>
<li>Cost-effective: Using open-source command line tools and custom scripts can be more budget-friendly, as there is no need to invest in expensive software.</li>
<li>Flexibility: Tailored scripts can be customized to the specific needs of the case, allowing Pagli and Antonellis to adapt their approach as required.</li>
</ol>
<p>Cons:</p>
<ol>
<li>Time-consuming setup: Developing and configuring custom scripts and tools may require a significant investment of time and expertise.</li>
<li>Limited scalability: The performance of command line tools and scripts may be constrained by the available hardware resources, making it less suitable for cracking complex passwords in a timely manner.</li>
</ol>
<p>In the given context, the optimal approach depends on several factors, including the available budget, time constraints, and the complexity of the passwords. If Pagli and Antonellis believe that the encrypted files are of high importance and the passwords are likely to be sophisticated, investing in the DNA software could prove invaluable for its speed, efficiency, and user-friendly features. The distributed computing capabilities and the support for multiple attack strategies can significantly increase the chances of success.</p>
<p>However, if the pair’s budget is truly limited and they possess the technical expertise to develop custom scripts, using command line tools and tailored scripts may be a more cost-effective alternative. This approach would allow them to retain control over the process and adapt their strategy to the specific case.</p>
<p>Ultimately, the optimal approach will depend on the pair’s assessment of the case’s importance, the potential value of the encrypted files, and their available resources. It is crucial for Pagli and Antonellis to weigh the pros and cons of each option carefully before deciding on the best course of action.</p>
<h1 id="Terminology-amp-Jargons"><a href="#Terminology-amp-Jargons" class="headerlink" title="Terminology&amp;Jargons:"></a>Terminology&amp;Jargons:</h1><p><strong>FDE:</strong> </p>
<p>Full Disk Encryption (FDE) is an encryption technology implemented on hard disk drives or solid state drives. It protects all data stored on the disk, including operating system, program files, user data, etc. Its main purpose is to ensure that sensitive data on the disk cannot be deciphered in case of unauthorized access.</p>
<p><strong>File Carving:</strong> </p>
<p>File carving is a process used in [computer forensics](<a href="https://www.infosecinstitute.com/courses/computer-forensics-boot-camp/?utm_source=resources&amp;utm_medium=infosec">https://www.infosecinstitute.com/courses/computer-forensics-boot-camp/?utm_source=resources&amp;utm_medium=infosec</a> network&amp;utm_campaign&#x3D;course pricing&amp;utm_content&#x3D;hyperlink) to extract data from a disk drive or other storage device without the assistance of the file system that originality created the file. </p>
<p><strong>Unallocated area:</strong> </p>
<p>Unallocated space refers to the area of the drive which no longer holds any file information as indicated by the file system structures like the file table. </p>
<p><strong>Ip:</strong>  </p>
<p>investigative process.</p>
<p><strong>DFI</strong>(Digital forensics investigation): </p>
<p>investigate the tool of crime and subject of crime.</p>
<p><strong>Hash</strong>:</p>
<p>哈希算法是指将任意长度的二进制值串映射为固定长度的二进制值串。原始数据经过映射之后得到的二进制值串就是哈希值。</p>
<p><strong>MD5加密原理步骤</strong>:</p>
<p>​	<strong>a). 填充，将其长度填充为512的整数倍:</strong></p>
<p>​	填充的方法如下：</p>
<p>​	<strong>1)</strong> 在信息的后面填充一个1和无数个0，直到满足上面的条件时才停止用0对信息的填充。</p>
<p>​	<strong>2)</strong> 在这个结果后面附加一个以64位二进制表示的填充前信息长度（单位为Bit），如果二</p>
<p>​	进制表示的填充前信息长度超过64位，则取低64位。</p>
<p>​	经过这两步的处理，信息的位长&#x3D;N<em>512+448+64&#x3D;(N+1）</em>512，即长度恰好是512的整数倍。这样做的原因是为满足后面处理中对信息长度的要求。</p>
<p>​	<strong>b). 初始化变量</strong></p>
<p>​	初始的128位值为初试链接变量，这些参数用于第一轮的运算，以大端<a href="https://link.zhihu.com/?target=https://baike.baidu.com/item/%E5%AD%97%E8%8A%82%E5%BA%8F">字节序</a>来表示，他们分别为： 				  A&#x3D;0x01234567，B&#x3D;0x89ABCDEF，C&#x3D;0xFEDCBA98，D&#x3D;0x76543210。</p>
<p>​	（每一个变量给出的数值是高字节存于内存低地址，低字节存于内存高地址，即大端字节序。在程序中变量A、	B、C、D的值分别为0x67452301，0xEFCDAB89，0x98BADCFE，0x10325476）</p>
<p>​	<strong>c).处理分组数据</strong></p>
<p>​	每一分组的算法流程如下：</p>
<p>​	第一分组需要将上面四个链接变量复制到另外四个变量中：A到a，B到b，C到c，D到d。从第二分组开始的变量	为上一分组的运算结果，即A &#x3D; a， B &#x3D; b， C &#x3D; c， D &#x3D; d。</p>
<p>​	主循环有四轮（MD4只有三轮），每轮循环都很相似。第一轮进行16次操作。每次操作对a、b、c和d中的其中	三个作一次非线性函数运算，然后将所得结果加上第四个变量，文本的一个子分组和一个常数。再将所得结果	向左<strong>环移</strong>一个不定的数，并加上a、b、c或d中之一。最后用该结果取代a、b、c或d中之一。</p>
<p>​	以下是每次操作中用到的四个非线性函数（每轮一个）。</p>
<p>​	F( X ,Y ,Z ) &#x3D; ( X &amp; Y ) | ( (~X) &amp; Z )</p>
<p>​	G( X ,Y ,Z ) &#x3D; ( X &amp; Z ) | ( Y &amp; (~Z) )</p>
<p>​	H( X ,Y ,Z ) &#x3D;X ^ Y ^ Z</p>
<p>​	I( X ,Y ,Z ) &#x3D;Y ^ ( X | (~Z) )</p>
<p>​	（&amp;是与（And），|是或（Or），~是非（Not），^是异或（Xor））</p>
<hr>
<p><strong>Merkle–Damgård</strong></p>
<p>Merkle–Damgård结构简称为MD结构，主要用在hash算法中抵御碰撞攻击。这个结构是一些优秀的hash算法，比如MD5,SHA-1和SHA-2的基础。今天给大家讲解一下这个MD结构和对他进行的长度延展攻击。</p>
<p><strong>Steps</strong>:</p>
<p><strong>Padding</strong></p>
<p>MD结构首先对输入消息进行填充，让消息变成固定长度的整数倍（比如512或者1024）。这是因为压缩算法是不能对任意长度的消息进行处理的，所以在处理之前必须进行填充。在原始数据的尾部添上1000…然后加上原始消息长度的2进制值使其长度变为512或1024的整数倍;<strong>使用额外的block</strong>，额外的使用一个block往往有点浪费，一个更加节约空间的做法就是，如果填充到最后一个block的0中有住够的空间的话，那么可以消息的长度放在那里。</p>
<p><strong>Compress</strong></p>
<p>完成padding之后就可以进行compress了。消息被分成了很多个block，最开始的初始化向量和第一个block进行f操作，得到了的结果再和第二个block进行操作，如此循环进行，最终得到了最后的结果。</p>
<p><img src="/../images/v2-43958e721f4c71625fde28962a327e3b_720w.webp" alt="MD Structure"></p>
<p><strong>长度延展攻击</strong></p>
<p>MD结构，是将消息分成一个一个的block，前一个block 运算出来的值会跟下一个block再次进行运算，这种结构可以很方便的进行长度延展攻击。前提是我们需要知道原消息的长度。在密码学中长度延展攻击就是指攻击者通过已知的hash(message1)和message1的长度，从而能够知道hash（message1‖message2）的值。其中‖ 表示的是连接符。并且攻击性并需要知道message1到底是什么。</p>
<p><strong>Wide pipe</strong></p>
<p>为了避免长度延展攻击，我们可以对MD结构进行一些变形。</p>
<p><img src="/../images/v2-7bcc1f1e64f49a021592e673c80f205a_720w.webp" alt="Wide pipe"></p>
<p>wide pipe和MD的流程基本上是一致的，不同的是生成的中间临时的加密后的消息长度是最终生成消息长度的两倍。</p>
<p>这也就是为什么上图中会有两个初始向量IV1 和 IV2。假如最终的结果长度是n的话，那么在中间生成的结果的长度就是2n。我们需要在最后的final 这一步中，将2n长度的数据缩减为n长度的数据。</p>
<p><strong>Fast wide pipe</strong></p>
<p>SHA-512&#x2F;224 和 SHA-512&#x2F;256 只是简单的丢弃掉一半数据。</p>
<p>还有一种比wide pipe更快的算法叫做fast wide pipe：</p>
<p><img src="/../images/v2-38067688fe25a216016a8819756dd105_r.jpg" alt="Fast wide pipe"></p>
<p>和wide pipe不同的是，它的主要思想是将前一个链接值的一半转发给XOR，然后将其与压缩函数的输出进行XOR。</p>
<p><strong>SLACK SPACE:</strong></p>
<p>Slack space occurs when a file can not be efficiently <strong>compartmentalised into file systems containers</strong>.</p>
<p>Feature: effectively containers are not going to be completely full, there is some <strong>slack space</strong>.</p>
<p>Example: consider file that is 59 bytes in size, that is allocated a 2048 byte cluster - the remaining 1989 bytes are considered slack space.</p>
<p>Potential for slack space to contain interesting data or data from previous files.</p>
<p>Data may exist between the end of the allocated file data and the sector.</p>
<p>Data may also exist between the sectors within the cluster that are not allocated data.</p>
<p>Interesting data may also exist in the sectors within the cluster.</p>
<p>an important aspect of slack space is that it is <strong>allocated</strong> space, it not unallocated. </p>
<p><strong>Sector and Cluster:</strong></p>
<p>In computer file systems, a sector is the smallest unit of storage on a disk. A cluster is a group of sectors that are treated as a single unit of storage. Sector is a fixed-size, contiguous block of storage space on the disk, typically ranging from 512 bytes to 4096 bytes, depending on the disk format. Clusters are used to allocate disk space for files, and they are typically much larger than sectors, ranging from a few sectors to several kilobytes in size, depending on the file system and disk size.</p>
<p><strong>FIRST AVAILABLE:</strong></p>
<p>in terms of forensics, recovery of deleted data will likely be more fruitful near the end of the file system.</p>
<p><strong>NEXT AVAILABLE:</strong></p>
<p>in terms of forensics, recovery of deleted data may be more balanced in comparison. </p>
<p><strong>BEST FIT:</strong></p>
<p>recall, the file itself may grow and data can become scattered across the system.</p>
<p><img src="/../images/byte_groups.png" alt="bytegroupings"></p>
<p><strong>FRAGMENTATION</strong></p>
<p>• systems become fragmented as files are deleted, added and altered. </p>
<p>• file considered fragmented when its containers are not consecutive, but are rather scattered across the storage device.</p>
<p>• fragmentation typically occurs due to <strong>alteration</strong> of files, <strong>low disk space</strong> and specific approaches.</p>
<p>• fragmentation of files is relatively uncommon in modern systems.</p>
<p>• modern operating systems are effective at avoiding fragmentation as this affords faster reading and writing.</p>
<p>• disk space has became less of a concern, suggesting that fragmentation is more likely on relatively smaller disks.</p>
<p>• researchers argue fragmented files are more likely of interest to investigators.</p>
<p><strong>FILE EXTENSION FRAGMENTATION:</strong></p>
<p>• different fragmentation rates are observed for different file types.<br>• temporary and logs files are often fragmented as they grow over system lifetime.<br>• movie, image, document and personal organisation information are often highly fragment.<br>• arguably such files are more pertinent to investigation than benign system files</p>
<p><strong>HIGH FRAGMENTATION:</strong></p>
<p>• there are some files that are highly fragmented, potentially into more than 100 or over 1000 fragments.</p>
<p>• such fragments are typically associated with large system updates or patches</p>
<p><strong>FILE CARVING:</strong></p>
<p>• process of <strong>reconstructing files based on structure and</strong> <strong>content</strong>, instead of meta-data.</p>
<p>• typically used to recover data from <strong>unallocated space</strong> on the disk as indicated by the file system.</p>
<p>• useful for <strong>data recovery when the device itself has been damaged</strong>, e.g. hard disk.</p>
<p>• valuable in <strong>forensics when specific files have been deleted</strong>, e.g. data still present in sectors</p>
<p>• may not recognise the file system used or even trust the file system itself.</p>
<p>• early file carver approaches relied on <strong>magic numbers</strong> to discover and recover files.</p>
<p>• limitation is that the file craver would recover continuous data unsure that it is actually valid or properly associated with the file</p>
<p><strong>Chanllenges:</strong></p>
<ol>
<li><p>the initial challenge is to identify the files that are to be carved from the image itself.</p>
</li>
<li><p>process must exist that ensures the files are actually intact.</p>
</li>
<li><p>files then need to be carved or extracted from the image.</p>
</li>
</ol>
<p><strong>LIMITATIONS:</strong></p>
<p>• problem is that unless clusters are contiguous can be difficult to recover file.</p>
<p>• even if associated clusters are recovered, difficult to validated file is what is expected.</p>
<p><strong>Hex Carving:</strong></p>
<p>在进行Hex Carving时，分析师需要寻找特定的十六进制签名（也称为文件头和文件尾），这些签名是文件类型的特征，例如JPEG图片、PDF文档等。一旦找到这些签名，就可以从存储介质上提取相应的数据块，并将其恢复为完整的文件。</p>
<p><strong>Bitfragment Gap Carving(BGC):</strong></p>
<p><strong>Steps:</strong></p>
<p>• initial step is to determine the header and footer of the file.<br>• process the clusters between the header and footer to confirm the contents of the container files.<br>• perform the computationally expensive step of validating each cluster.<br>• Know bh and bz, start with g &#x3D; 1 and grow until each fragment validates</p>
<p><strong>Limitation:</strong></p>
<p>• approach works when the file is bi-fragmented, anymore fragments it will not work.</p>
<p>• corrupted or lost clusters will result in the worse case performance.</p>
<p>• approach works for files that have structure that can actually be validated and&#x2F;or decoded.</p>
<p>• not always possible to trust validation and&#x2F;or decoding approach.</p>
<p>• approach struggles with large gaps.</p>
<p>Bitfragment Gap Carving (BGC) 旨在克服传统的 Hex Carving 方法在面对破碎文件时的局限性。在某些情况下，文件在存储介质上可能是分散的，这意味着文件的各个部分可能不是连续存储的。</p>
<p>BGC 通过在存储介质中搜索特定的文件片段（称为比特片段）来解决这个问题，而不是仅搜索文件头和文件尾。这些文件片段可能包含文件的重要信息，如内容、元数据等。在确定了这些比特片段之后，BGC 将尝试将它们重新组合成一个完整的文件。</p>
<p>BGC 的一个关键优势是它可以在不了解文件系统的情况下恢复分散的文件，这使得它在处理损坏的文件系统或恢复被删除的文件时非常有用。然而，BGC 也存在一些挑战，例如需要开发针对特定文件类型的比特片段签名、可能出现误报以及需要处理大量的比特片段组合。</p>
<p>​	<strong>Do we think it is wise to carve out the fragments  between the header and footer?</strong></p>
<p>在使用 Bitfragment Gap Carving（BGC）方法时，在文件头和文件尾之间提取文件片段通常是有意义的。这是因为在某些情况下，文件的各个部分可能是分散存储的，而不是连续存储的。这意味着文件头和文件尾之间可能存在其他文件片段，这些片段包含文件的重要信息，如内容、元数据等。</p>
<p>​	<strong>What else do we typically know about the files were interested in?</strong></p>
<p>在使用 Bitfragment Gap Carving（BGC）方法时，我们通常需要了解一些关于感兴趣文件的信息，以提高恢复的成功率和准确性。以下是在 BGC 中可能需要了解的文件相关信息：</p>
<ol>
<li>文件类型：了解目标文件的类型有助于确定特定的文件片段签名。例如，JPEG 图像、PDF 文档和 Microsoft Word 文件等具有不同的文件结构和特征。了解文件类型有助于缩小搜索范围并提高恢复效果。</li>
<li>文件片段签名：针对特定文件类型，需要了解其比特片段签名，以便在存储介质上搜索和识别文件片段。这些签名可能包括文件头、文件尾以及其他特征信息，如元数据、内容标记等。</li>
<li>文件大小：如果可能的话，了解文件的大致大小可以帮助估算文件片段的数量和潜在位置。这可以提高搜索效率并减少误报。</li>
<li>存储设备和文件系统信息：了解所使用的存储设备（如硬盘、USB 闪存驱动器等）和文件系统（如 NTFS、FAT32、ext4 等）可能有助于确定文件分散的程度和方式，以及优化 BGC 方法。</li>
<li>数据删除或损坏的原因：了解数据丢失或损坏的原因（如意外删除、硬盘损坏、恶意软件攻击等）可能有助于确定最佳的恢复策略。</li>
</ol>
<p>​	<strong>If we have determined the header and footers, plus container structure - what else could we do?</strong></p>
<ol>
<li>分析文件内部结构：了解特定文件类型的内部结构有助于识别并提取更多相关的比特片段。这包括文件的元数据、编码方式、标记和其他特征信息。掌握这些信息可以帮助更准确地搜索和识别文件片段。</li>
<li>优化搜索策略：根据已知的文件头、文件尾和容器结构，优化搜索策略以提高效率。这可能包括限制搜索范围、调整搜索参数，或者根据已知的文件大小信息预测文件片段的潜在位置。</li>
<li>验证恢复结果：在提取和重新组合文件片段后，仔细检查恢复结果以确保准确性和完整性。这可能包括验证文件的元数据、内容和内部结构。如果发现问题，可以返回到搜索和提取阶段，尝试使用不同的参数和策略。</li>
<li>结合其他恢复技术：在某些情况下，BGC 方法可能无法完全恢复文件。这时，可以尝试结合其他文件恢复技术和工具，如 Hex Carving、文件系统分析等，以提高恢复结果的准确性和完整性。</li>
<li>优化和学习：通过不断地学习和优化比特片段签名、搜索策略和参数设置，可以提高 BGC 方法的性能。在实践中，分析师可能需要面对各种不同的文件类型和存储设备，因此需要不断地调整和优化方法以适应不同的情况。</li>
</ol>
<p><strong>Theoretical Graph Carving:</strong></p>
<p>THEORETICAL GRAPH CARVING </p>
<p>• need to determine the clusters that are adjacent to each other. </p>
<p>• approach is to determine the correct ordering is to weight fragment pairs. </p>
<p>• use function to generate a weight for each pair of clusters, select the heaviest pairing.</p>
<p>• ideal permutation is that where the sum of the ordering is maximum. </p>
<p>• determining the path is the same as finding maximum weight Hamiltonian path in a complete graph</p>
<p><strong>Graph Carving:</strong></p>
<p>• Hamiltonian path approach does not consider the situation where we have multiple files.</p>
<p>• Problem can be reconsidered as <em>k</em>-vertex disjointed path problem.</p>
<p>• Where we consider <em>k</em> as the number of files, identified from the number of headers.</p>
<p>• Disjointed path problem if we consider that each cluster only belongs to one file.</p>
<p>​	PARALLEL UNIQUE PATH(PUP):</p>
<p><strong>Hash Carving:</strong></p>
<p>哈希雕刻的工作流程分为以下几个步骤：</p>
<ol>
<li>确定已知文件的哈希值：通过使用独立于磁盘镜像或文件系统的工具，计算已知文件的哈希值，并记录下来。</li>
<li>扫描磁盘镜像或文件系统：使用哈希雕刻工具扫描磁盘镜像或文件系统，并计算每个数据块的哈希值。</li>
<li>匹配哈希值：将扫描到的每个数据块的哈希值与已知文件的哈希值进行比较。如果匹配成功，则说明该数据块可能包含被删除文件的内容。</li>
<li>恢复文件内容：对于匹配成功的数据块，使用哈希雕刻工具将其提取出来，并尝试恢复被删除文件的内容。</li>
<li>验证数据完整性：对于已恢复的文件，应该进行数据完整性验证，以确保文件的完整性和可靠性。</li>
</ol>
<p>需要注意的是，哈希雕刻可能会产生虚假匹配或错误的结果，因此需要对结果进行进一步的验证和分析。同时，在进行哈希雕刻时，也需要考虑数据隐私和法律规定，以确保取证过程的合法性和证据的可靠性。</p>
<p>**Non-probative block test:**（非证据块测试）</p>
<p>是指在数字取证中使用的一种测试方法，用于排除磁盘镜像或文件系统中的非证据块，以减少后续分析的时间和资源消耗。</p>
<p>在数字取证中，非证据块通常是指不包含有效数据或与案件无关的数据块，如操作系统的空闲块、已删除的文件块等。非证据块测试可以通过计算每个数据块的哈希值，并与已知的非证据块哈希值进行比较，以快速识别和排除这些非证据块。这可以大大减少后续分析的时间和资源消耗，并有助于集中分析有价值的证据数据。</p>
<p>需要注意的是，非证据块测试并不能保证100%的准确性，可能会产生误判或漏判的情况。因此，在数字取证中，还需要结合其他分析方法和工具，进行综合分析和验证，以确保取证结果的准确性和可靠性。</p>
<p><strong>Magic numbers:</strong></p>
<p>In the context of computer file formats, a magic number is a sequence of bytes that identifies the format of a file. It is called a “magic number” because it is often used like a magic spell to identify the file format, much like a spell might be used to identify a person or object.</p>
]]></content>
      <categories>
        <category>Courses</category>
      </categories>
      <tags>
        <tag>Courses</tag>
      </tags>
  </entry>
  <entry>
    <title>webscience</title>
    <url>/2023/04/28/webscience/</url>
    <content><![CDATA[<h1 id="Revision"><a href="#Revision" class="headerlink" title="Revision"></a>Revision</h1><h2 id="Topic-1-Social-Media-Twitter-Crawl"><a href="#Topic-1-Social-Media-Twitter-Crawl" class="headerlink" title="Topic 1- Social Media (Twitter) Crawl"></a>Topic 1- Social Media (Twitter) Crawl</h2><h3 id="L1-TwitterData"><a href="#L1-TwitterData" class="headerlink" title="L1 TwitterData"></a>L1 TwitterData</h3><h4 id="Exploitation-of-the-twitter-data"><a href="#Exploitation-of-the-twitter-data" class="headerlink" title="Exploitation of the twitter data:"></a>Exploitation of the twitter data:</h4><p>With the amount of content posted to social media websites every day, such as Twitter, there is huge potential for its exploitation in many scenarios, such as:</p>
<p><strong>Sports and Finance:</strong> Stock market prediction &amp; Sports betting</p>
<p>predict stock market changes based on the sentiment of tweets</p>
<ul>
<li>Sentiment expressed in tweets had been used to predict stock market reactions</li>
<li>Opinions of investors’ posts on social media</li>
<li>combine with the stock prize movements</li>
</ul>
<p>Sports betting</p>
<h4 id="Web-Science-Concepts"><a href="#Web-Science-Concepts" class="headerlink" title="Web Science Concepts"></a>Web Science Concepts</h4><ul>
<li><p>﻿﻿Explore the science underlying the web</p>
<ul>
<li>﻿﻿From a socio-technical perspective</li>
<li>﻿﻿Mathematical properties, engineering principles, social impacts</li>
</ul>
</li>
<li><p>﻿﻿Understanding users and developing Web applications for them!</p>
<ul>
<li>﻿﻿Sociology &amp; Web Engineering</li>
</ul>
</li>
<li><p>﻿﻿Consulting corporations about social media activities</p>
<ul>
<li>﻿﻿Economics &amp; Web analvtics</li>
<li>﻿﻿For example, role of micro influencers on local economy</li>
<li>﻿﻿How much hate a brand page generates due to some comments, ….</li>
</ul>
</li>
<li><p>﻿﻿Data analvtics</p>
<ul>
<li>﻿﻿Growth of information; structured and unstructured</li>
<li>﻿﻿Intersection of networks &amp; data</li>
</ul>
</li>
<li><p>Broble mew technologies to scientists and engineers working together on large scale</p>
</li>
</ul>
<h3 id="L2-DataClustering"><a href="#L2-DataClustering" class="headerlink" title="L2 DataClustering"></a>L2 DataClustering</h3><h4 id="Content-processing"><a href="#Content-processing" class="headerlink" title="Content processing"></a>Content processing</h4><h4 id="1-Removing-stuff"><a href="#1-Removing-stuff" class="headerlink" title="1. Removing stuff"></a>1. Removing stuff</h4><ul>
<li>Non-ascii removal</li>
</ul>
<p>remove the emoji…</p>
<p>![image-20230429103013009](..&#x2F;images&#x2F;webs&#x2F;:Users:joshua:Library:Application Support:typora-user-images:image-20230429103013009.png)</p>
<h4 id="2-Grouping-tweets"><a href="#2-Grouping-tweets" class="headerlink" title="2. Grouping tweets"></a>2. Grouping tweets</h4><ul>
<li>﻿﻿Based on content analysis like<ul>
<li>﻿﻿Clustering, locality sensitive hashing</li>
<li>﻿﻿Or through content indexes</li>
</ul>
</li>
<li>﻿﻿Once we know the groups<ul>
<li>﻿﻿We could analyse the words, user mentions, hashtags in these groups</li>
<li>﻿﻿We can add these terms to a list with a priority</li>
<li>﻿﻿This is possibly for identifying more tweets of this type<ul>
<li>﻿﻿Aim is data gathering</li>
</ul>
</li>
</ul>
</li>
<li>﻿﻿We can also look at proficient tweeters<ul>
<li>﻿﻿What are their total tweets</li>
</ul>
</li>
</ul>
<h4 id="3-Tokenization"><a href="#3-Tokenization" class="headerlink" title="3. Tokenization"></a>3. Tokenization</h4><p>Separate each token</p>
<p>Remove stopwords</p>
<h4 id="4-Vector-Representation"><a href="#4-Vector-Representation" class="headerlink" title="4. Vector Representation"></a>4. Vector Representation</h4><p>Documents are represented by a term vector</p>
<p><em>Di</em> &#x3D; (ti1,ti2 ,….,tin )</p>
<p>Queries are represented by a similar vector</p>
<p>• In binary scheme, tik is set to 1 when term k is present in Document i otherwise they are set to zero</p>
<ul>
<li>The most relevant documents for a query are expected to be those represented by the vectors closest to the query, that is documents that use similar words to the query.</li>
<li>﻿﻿Closeness is often calculated by just looking at angles between document vector and query vector</li>
<li>﻿﻿We need a similarity measure!<ul>
<li>Cosine similarity measure</li>
<li>Jaccard coefficient</li>
<li>Dice coefficient</li>
</ul>
</li>
</ul>
<h4 id="Finding-similar-tweets-Single-pass-clustering"><a href="#Finding-similar-tweets-Single-pass-clustering" class="headerlink" title="Finding similar tweets Single-pass clustering"></a>Finding similar tweets Single-pass clustering</h4><p><strong>Single-pass clustering</strong></p>
<ul>
<li><p>requires a single, sequential pass over the set of documents it attempts to cluster.</p>
</li>
<li><h4 id="The-algorithm-classifies-the-next-document-in-the-sequence-according-to-a-condition-on-the-similarity-function-employed"><a href="#The-algorithm-classifies-the-next-document-in-the-sequence-according-to-a-condition-on-the-similarity-function-employed" class="headerlink" title="The algorithm classifies the next document in the sequence according to a condition on the similarity function employed."></a>The algorithm classifies the next document in the sequence according to a condition on the similarity function employed.</h4></li>
<li><p>At every stage, <strong>the algorithm decides on whether a newly seen document should become a member of an already defined cluster or the centre of a new one.</strong></p>
<ul>
<li>In its most simple form, the similarity function gets defined on the basis of just some similarity (or alternatively, dissimilarity) measure between document-feature vectors.</li>
</ul>
</li>
</ul>
<p>![image-20230429121645868](..&#x2F;images&#x2F;webs&#x2F;:Users:joshua:Library:Application Support:typora-user-images:image-20230429121645868.png)</p>
<p>Comments on Single Pass Method</p>
<ul>
<li>﻿﻿The single pass method is particularly simple<ul>
<li>﻿﻿since it requires that the data set be processed only once.</li>
</ul>
</li>
<li>﻿﻿Obviously, the results for this method are highly dependent on the similarity threshold that is used.</li>
<li>﻿﻿It tends to produce large clusters early in the clustering pass,<ul>
<li>﻿﻿and because the clusters formed are not independent of the order in which the data set is processed.</li>
<li>﻿﻿You should use your judgment in setting this threshold so that you are left with a reasonable number of clusters.</li>
</ul>
</li>
<li>﻿﻿It is sometimes used to form the groups that are used to initiate reallocation clustering.<ul>
<li>﻿﻿If we get a large noisy clusters of tweets, we could re-cluster them!!!</li>
</ul>
</li>
</ul>
<h3 id="L3-Credibility-amp-Newsworthiness"><a href="#L3-Credibility-amp-Newsworthiness" class="headerlink" title="L3 Credibility &amp; Newsworthiness"></a>L3 Credibility &amp; Newsworthiness</h3><h4 id="Newsworthy"><a href="#Newsworthy" class="headerlink" title="Newsworthy"></a><strong>Newsworthy</strong></h4><p>Key characteristics of newsworthy score</p>
<ul>
<li>﻿﻿Real-time<ul>
<li>﻿﻿Tweets should be scored as soon as it arrives!</li>
</ul>
</li>
<li>﻿﻿Generalizability<ul>
<li>﻿﻿Should be able to handle any types of events - not those just seen before</li>
</ul>
</li>
<li>﻿﻿Adaptive<ul>
<li>﻿﻿New information to be incorporated, as and when they arrive</li>
<li>﻿﻿Incorporate new information to the scoring model</li>
</ul>
</li>
</ul>
<p>These characteristics should be realized with the help of <strong>classification approach</strong> and <strong>distant supervision</strong>.</p>
<h4 id="HeurisIc-Labelling"><a href="#HeurisIc-Labelling" class="headerlink" title="HeurisIc Labelling"></a><strong>HeurisIc Labelling</strong></h4><ul>
<li>﻿﻿Semi-automatic labelling approach<ul>
<li>﻿﻿Using a set of heuristics to label<ul>
<li>﻿﻿High quality (newsworthy) and low quality (noisy) content</li>
</ul>
</li>
</ul>
</li>
<li>﻿﻿This will not label majority of the content</li>
<li>﻿﻿Advantages<ul>
<li>﻿﻿Minimal effort in creating a data set</li>
<li>﻿﻿Real-life data set - incremental and generalizable</li>
<li>﻿﻿Easily built as part of an algorithm for example event detection</li>
</ul>
</li>
</ul>
<p><strong>Overall approach</strong></p>
<ul>
<li><p>Collect a set of high-quality sets and low-quality sets of data</p>
</li>
<li><p>Use this dataset to potentially score a newsworthy tweet</p>
</li>
</ul>
<h4 id="Quality-Score"><a href="#Quality-Score" class="headerlink" title="Quality Score"></a>Quality Score</h4><p>Quality Score &#x3D; (profileWeight + verifiedWeight + followers Weight + accountAgeWeight + descriptionWeight)&#x2F;5</p>
<p>Range is [0 to 1]</p>
<p>if q score is higher than 0.65 -&gt; high quality </p>
<p>if q score is lower than 0.45 -&gt; low quality</p>
<h4 id="Scoring-model"><a href="#Scoring-model" class="headerlink" title="Scoring model"></a>Scoring model</h4><p>Likelihood ratio for each term</p>
<ul>
<li>﻿﻿R(t) &#x3D; relative importance of term in the particular quality model when compared to random background model</li>
<li>﻿﻿&gt;1<ul>
<li>﻿Term is more common in the model than random</li>
</ul>
</li>
<li>﻿﻿&lt;1<ul>
<li>﻿﻿Term is less common in the model than random</li>
</ul>
</li>
</ul>
<p>![image-20230429134512747](..&#x2F;images&#x2F;webs&#x2F;:Users:joshua:Library:Application Support:typora-user-images:image-20230429134512747.png)</p>
<p><strong>cntd</strong></p>
<p>if RHQ(t)&lt;2 or RLQ(t)&lt;2 then the Score will be set 0 as to remove the terms which have no clear association with either high quality content or low-quality content.</p>
<p>![image-20230429134931099](..&#x2F;images&#x2F;webs&#x2F;:Users:joshua:Library:Application Support:typora-user-images:image-20230429134931099.png)</p>
<h3 id="L4-Geo-localisation"><a href="#L4-Geo-localisation" class="headerlink" title="L4-Geo-localisation"></a>L4-Geo-localisation</h3><h4 id="Fine-grained-localization"><a href="#Fine-grained-localization" class="headerlink" title="Fine-grained localization"></a>Fine-grained localization</h4><p>Fine-grained localization refers to the task of accurately localizing objects or entities within an image or a video with high precision, usually at a sub-pixel or sub-object level. This involves identifying the precise location of the object, as well as any associated attributes such as shape, texture, and color.</p>
<p>The goal of fine-grained localization is to provide more detailed and accurate information about the location and properties of objects in an image, which can be useful for a range of applications such as object tracking, object recognition, and scene understanding.</p>
<p>Fine-grained localization can be challenging due to the variability in object appearance, pose, and scale. To overcome these challenges, various techniques such as deep learning and computer vision algorithms have been developed.</p>
<p>Examples of fine-grained localization tasks include localizing individual bird species in a bird-watching image, identifying specific car models in a crowded parking lot, or detecting the presence of a particular species of fish in an underwater video.</p>
<p><strong>Problem statement</strong></p>
<ul>
<li>﻿﻿Geo-localization<ul>
<li>﻿﻿Provide location estimates for individual tweets</li>
</ul>
</li>
<li>﻿﻿coarse-grained Geo-localization<ul>
<li>﻿﻿Provide location estimates for individual tweets at regional or country level</li>
</ul>
</li>
<li>﻿﻿fine-grained Geo-localization<ul>
<li>﻿﻿Provide location estimates for individual tweets at city or neighbourhood level</li>
</ul>
</li>
<li>﻿﻿Approach<ul>
<li>﻿﻿Train a model on a geo-tagged data set<ul>
<li>﻿﻿Validate and test on geo-tagged data</li>
<li>﻿﻿Test on non-geo tagged data as well</li>
</ul>
</li>
</ul>
</li>
</ul>
<h2 id="Topic3-Topic-modelling"><a href="#Topic3-Topic-modelling" class="headerlink" title="Topic3 Topic modelling"></a>Topic3 Topic modelling</h2><h3 id="Topic-modelling"><a href="#Topic-modelling" class="headerlink" title="Topic modelling"></a>Topic modelling</h3><h4 id="Discuss-why-searching-is-limited-when-exploring-a-collection"><a href="#Discuss-why-searching-is-limited-when-exploring-a-collection" class="headerlink" title="Discuss why searching is limited when exploring a collection"></a><strong>Discuss why searching is limited when exploring a collection</strong></h4><p>When exploring a collection, searching can be limited by various factors such as the completeness and accuracy of the metadata, the complexity of the query, and the quality of the search algorithm.</p>
<p>Firstly, the completeness and accuracy of the metadata associated with each item in the collection can limit the effectiveness of searching. If the metadata is incomplete or inconsistent, important information about an item may not be captured, making it difficult or impossible to find through search queries.</p>
<p>Secondly, the complexity of the search query can also limit the effectiveness of searching. For example, if a user is looking for items that have multiple attributes or characteristics, such as a specific color and shape, the search query may become too complex and difficult to execute accurately.</p>
<p>Finally, the quality of the search algorithm used to explore the collection can also limit the effectiveness of searching. If the algorithm is not designed to handle the specific characteristics of the collection or the query, it may return irrelevant or incomplete results.</p>
<p>To overcome these limitations, various techniques can be employed such as using natural language processing to simplify complex search queries, improving the quality and completeness of metadata through manual curation or machine learning techniques, and using advanced search algorithms that take into account the specific characteristics of the collection and query.</p>
<p>Topic modelling is the process of using a topic model to discover the <strong>hidden topics</strong> that are represented by a large collection of documents</p>
<ul>
<li><p>Observed</p>
<ul>
<li><p>﻿﻿collection</p>
</li>
<li><p>﻿﻿Document &amp; words</p>
</li>
</ul>
</li>
<li><p>﻿﻿Aim</p>
<ul>
<li>﻿﻿Use the observed information to infer<ul>
<li>﻿﻿Hidden structure</li>
</ul>
</li>
</ul>
</li>
<li><p>﻿﻿Topic structure - hidden</p>
<ul>
<li>﻿﻿per document topic distributions</li>
<li>﻿﻿Per document per-word topic assignments<ul>
<li>﻿﻿Annotation…</li>
<li>﻿﻿Can be used for retrieval, classification, browsing?</li>
</ul>
</li>
</ul>
</li>
<li><p>﻿﻿Utility</p>
<ul>
<li>﻿﻿Inferred hidden structure resembles the thematic structure of the collection</li>
</ul>
</li>
</ul>
<p><strong>latent</strong></p>
<p>(of a quality or state) existing but not yet developed or manifest hidden or concealed.;</p>
<p>Topic modelling </p>
<ul>
<li>A machine learning approach for Mining latent topics</li>
</ul>
<p>Identify hidden, gigantic structures</p>
<p>Probabilistic topic models</p>
<ul>
<li>a suite of algorithms that aim to discover and annotate large archives of documents of thematic information</li>
</ul>
<h4 id="Our-goal-in-topic-modelling"><a href="#Our-goal-in-topic-modelling" class="headerlink" title="Our goal in topic modelling"></a>Our goal in topic modelling</h4><ul>
<li>﻿﻿The goal of topic modeling is to automatically discover the topics in a collection of documents</li>
<li>﻿﻿Documents are observed<ul>
<li>﻿﻿Topics, per-document and per-word topic assignments - hidden</li>
<li>﻿﻿Hence latent!</li>
</ul>
</li>
<li>﻿﻿The central computation problem for topic modelling is to use the observed documents to infer hidden topic structure</li>
<li>﻿﻿Think it as reversing the generative process<ul>
<li>﻿﻿What is the hidden structure that likely generated the observed collection?</li>
</ul>
</li>
</ul>
<h4 id="LDA-Latent-Dirichlet-Allocation"><a href="#LDA-Latent-Dirichlet-Allocation" class="headerlink" title="LDA (Latent Dirichlet Allocation)"></a>LDA (Latent Dirichlet Allocation)</h4><ul>
<li><p>﻿﻿Is a statistical model of document collections that tries to capture the intuition<br> Each document can be described by a distribution of topics and each topic can be described by a distribution of words</p>
</li>
<li><p>﻿﻿Topic</p>
<ul>
<li><p>﻿﻿Defined as a distribution over the words&#x2F; fixed vocabulary</p>
<ul>
<li><p>E.g., genetic topic has words about genetics (sequenced, genes) with high probability</p>
</li>
<li><p>﻿﻿Evolutionary biology has words like life, organism with high probability</p>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<h4 id="Topic-Modelling-Approaches"><a href="#Topic-Modelling-Approaches" class="headerlink" title="Topic Modelling Approaches"></a>Topic Modelling Approaches</h4><ul>
<li>Number of possible topic structures is exponentially large</li>
<li>Approximate the posterior distribution</li>
<li>Topic modelling algorithms form an approximation of equation, <ul>
<li>by adapting an alternative distribution over latent topic structure to be close to the true posterior</li>
</ul>
</li>
</ul>
<p>Two approaches:</p>
<p><strong>1. Sampling based!</strong></p>
<p>Attempt to collect samples from the posterior to approximate it with an empirical distribution <strong>– Gibbs sampling!</strong></p>
<p><strong>2. Variational methods!</strong></p>
<p>Deterministic alternative to sampling based methods</p>
<p>Posit a parametrised family of distributions over the hidden structure and then find the member of that family that is closest to the posterior</p>
<p><strong>Summary</strong></p>
<p>The user specifies that there are K distinct topics</p>
<p>​	Each of the K topics is drawn from a aDirchlet distribution</p>
<p>​		Uniform base distribution (u) and concentration parameter B</p>
<p>​		theta_k ~ Dir(Bu)</p>
<p>Distributions over topics of each document 	theta_d ~ Dir (au)</p>
<ul>
<li>﻿﻿Topic assignment Z_d,n ~ Discrete(theta_d)</li>
<li>﻿Wd,n~theta_Z(d,n)</li>
</ul>
<p><strong>Sampling based!</strong></p>
<p>Attempt to collect samples from the posterior to approximate it with an empirical distribution - <strong>Gibbs sampling!</strong></p>
<p><strong>Variational methods!</strong></p>
<p>Deterministic alternative to sampling based methods</p>
<p>Posit a parametrised family of distributions over the hidden structure and then find the member of that family that is closest to the posterior</p>
<p><strong>Gibbs Sampling</strong></p>
<p>It generates samples from complex, high-dimensional probability distributions.</p>
<p>The algorithm for Gibbs sampling is as follows:</p>
<ol>
<li>Initialize each variable with an initial value.</li>
<li>Choose a variable to update, say the i-th variable.</li>
<li>Sample a new value for the i-th variable from its conditional distribution, given the current values of the other variables.</li>
<li>Repeat steps 2 and 3 for a specified number of iterations or until convergence is achieved.</li>
</ol>
<h4 id="LDA"><a href="#LDA" class="headerlink" title="LDA"></a><strong>LDA</strong></h4><ul>
<li><p>﻿﻿LDA is a probabilistic generative model</p>
<ul>
<li>﻿﻿Each document is a distribution of topics</li>
<li>﻿﻿Each topic is a distribution of words</li>
</ul>
</li>
<li><p>﻿﻿Sample a topic from a document-level topic distribution</p>
<ul>
<li>﻿﻿That obeys Dirichlet distribution</li>
</ul>
</li>
<li><p>﻿﻿Then sample a words according to the topic distribution of this topic</p>
<ul>
<li>﻿﻿Dirichlet distribution</li>
</ul>
</li>
<li><p>﻿﻿Generate a document</p>
</li>
<li><p>﻿﻿Hence, LDA implicitly model document level word co-occurrence pattern</p>
</li>
<li><p>﻿﻿Sparsity problem exacerbates performance issues</p>
<ul>
<li>﻿﻿The limited contexts make it more difficult for topic models to identify the senses of ambiguous words in short documents.</li>
</ul>
</li>
<li><p>﻿﻿Short documents like Tweet</p>
<ul>
<li>﻿﻿Sparse words …</li>
<li>﻿﻿Time-sensitive</li>
<li>﻿﻿Lack of clear context because not much information; no formal structure<ul>
<li>﻿﻿How words are related often measured through co-occurrence patterns</li>
<li>﻿﻿In short texts document-level co-occurrence patterns are difficult to capture</li>
</ul>
</li>
</ul>
</li>
<li><p>﻿﻿Massive volume of tweet;</p>
<ul>
<li>﻿﻿Memory requirements</li>
</ul>
</li>
<li><p>﻿﻿Real-time nature</p>
</li>
</ul>
<p>Problem with LDA to train twitter</p>
<p><strong>Why not LDA?</strong></p>
<ul>
<li>LDA needs to be trained on the entire data sets<ul>
<li>Memory requirements for the model</li>
</ul>
</li>
<li>LDA is trained and tested on a data set<ul>
<li>Time-sensitive nature of Twitter</li>
</ul>
</li>
</ul>
<p>How to address this issue …?</p>
<ul>
<li>﻿﻿Enrich the word co -occurrence information<ul>
<li>﻿﻿To enrich the limited word co -occurrence information contained in a single short text,</li>
</ul>
</li>
<li>﻿﻿Make larger texts by grouping short texts (tweets)<ul>
<li>﻿﻿Grouping tweets by the authors</li>
<li>﻿﻿However, this aggregation method highly depends on the meta - information of each text,<ul>
<li>﻿﻿which may not always be available for many kinds of short texts.</li>
</ul>
</li>
<li>﻿﻿Another strategy models the similarity between texts to aggregate similar texts into a long pseudo -document</li>
</ul>
</li>
<li>﻿﻿Explicit text similarity</li>
</ul>
<h2 id="Topic4-Network-Analysis"><a href="#Topic4-Network-Analysis" class="headerlink" title="Topic4 Network Analysis"></a>Topic4 Network Analysis</h2><h3 id="L6-Graph-based-Network-Analysis"><a href="#L6-Graph-based-Network-Analysis" class="headerlink" title="L6 Graph-based Network Analysis"></a>L6 Graph-based Network Analysis</h3><h4 id="Graph-Modelling"><a href="#Graph-Modelling" class="headerlink" title="Graph Modelling"></a>Graph Modelling</h4><ul>
<li>﻿﻿Capturing structural properties of social networks</li>
<li>﻿﻿Relationships formed between individuals<ul>
<li>﻿﻿To identify clusters</li>
<li>﻿﻿Cliques and connected components of users</li>
<li>﻿﻿Centrality measures</li>
</ul>
</li>
<li>﻿﻿Hashtags<ul>
<li>﻿﻿Which hashtags are strongly connected</li>
</ul>
</li>
</ul>
<p><strong>Centrality Measures:</strong> Find the influential users, find the centre of a graph.</p>
<p><strong>Why graph?</strong></p>
<ul>
<li><p>﻿﻿By analyzing network data, we can ask many questions</p>
<ul>
<li>﻿﻿Who is most important in a network?</li>
<li>﻿﻿Which way information flows?</li>
</ul>
</li>
<li><p>﻿﻿We can use graph analysis to answer questions like these</p>
</li>
<li><p>﻿﻿Note</p>
<ul>
<li>﻿﻿Sample questions!</li>
<li>﻿﻿What are people talking about?<br> How are they responding to a product?</li>
<li>﻿﻿The breadth of such analyses is huge and not covered fully</li>
</ul>
</li>
</ul>
<h4 id="Graph-Theory"><a href="#Graph-Theory" class="headerlink" title="Graph Theory"></a><strong>Graph Theory</strong></h4><p><strong>Graph</strong></p>
<ul>
<li><p>﻿﻿Graphs are way to formally represent a network or a set of interconnected objects</p>
</li>
<li><p>﻿﻿Nodes and edges</p>
</li>
<li><p>﻿﻿Unlike trees no concept of root node, In the graph, there is no unique node which is known as root.</p>
</li>
<li><p>﻿﻿One node might be connected to five others!</p>
</li>
<li><p>﻿﻿No concept one-directional flow!</p>
</li>
</ul>
<p>﻿﻿<strong>Edges</strong></p>
<ul>
<li>﻿﻿With direction or flow!</li>
<li>﻿﻿Without direction!</li>
</ul>
<p><strong>Direction</strong></p>
<ul>
<li>﻿﻿Origin to destination</li>
</ul>
<p><strong>Trees vs graphs</strong></p>
<p>A tree is a set of nodes and edges. In a tree, there is a unique node which is known as root.</p>
<p>Terminology - <strong>Undirected</strong> graphs</p>
<ul>
<li>﻿﻿u and v are adjacent if {u, v} is an edge,<ul>
<li>﻿﻿e is called incident with u and v</li>
<li>﻿﻿u and v are called endpoints of {u, v}</li>
</ul>
</li>
<li>﻿﻿Degree of Vertex (deg (V)):<ul>
<li>﻿﻿the number of edges incident on a vertex.</li>
<li>﻿﻿<strong>A loop contributes twice to the degree</strong></li>
</ul>
</li>
</ul>
<p>Terminology - <strong>Directed</strong> graphs</p>
<ul>
<li>﻿﻿For the edge (u, v), u is adjacent to v OR v is adjacent from u,</li>
<li>﻿﻿u - Initial vertex origin)</li>
<li>﻿﻿v - Terminal vertex destination)</li>
<li>﻿﻿In-degree (deg (u)): number of edges for which u is terminal vertex</li>
<li>﻿﻿Out-degree (deg+ (u)): number of edges for which u is initial vertex</li>
</ul>
<p><strong>Incidence Matrix:</strong></p>
<p>What are the maximum potential edges?</p>
<p>Undirected graph: (n*(n-1))&#x2F;2</p>
<p>Directed graph (n*(n-1))</p>
<p>Edge density &#x3D; no of edges&#x2F; max no of edges possible</p>
<p><strong>Adjacency Matrix</strong></p>
<ul>
<li><p>﻿﻿There is an N x N matrix, where |V| &#x3D; N,</p>
</li>
<li><p>﻿﻿the Adjacenct Matrix (N×N)</p>
</li>
<li><p>﻿﻿This makes it easier to find subgraphs</p>
</li>
<li><p>﻿﻿When there are relatively few edges in the graph the adjacency matrix is a sparse matrix</p>
</li>
</ul>
<h4 id="Graph-analysis-in-twitter"><a href="#Graph-analysis-in-twitter" class="headerlink" title="Graph analysis in twitter"></a>Graph analysis in twitter</h4><p>Twitter is directed graph while facebook is undirected</p>
<p><strong>Why graph analysis?</strong></p>
<ul>
<li>﻿﻿By analyzing tweet data, we can ask many questions</li>
<li>﻿﻿Who is most important in a network?</li>
<li>﻿﻿How did the information flow?</li>
<li>﻿﻿How could we reach 50% of the graph?</li>
<li>﻿﻿Who is more influential?</li>
<li>﻿﻿What are people talking about?</li>
<li>﻿﻿How are they responding to a product?</li>
</ul>
<p><strong>Centrality</strong></p>
<p>find who is important</p>
<ul>
<li>Measures of importance in social networks are called centrality measures</li>
</ul>
<p><strong>Degree centrality</strong></p>
<ul>
<li><p>Who gets the most re-tweets?</p>
<ul>
<li>Basically says who is most important in the network</li>
</ul>
</li>
<li><p>In-degree: number of retweets of a user</p>
</li>
<li><p>Out-degree: number of retweets this particular user made</p>
</li>
<li><p>﻿﻿The degree centrality is a fundamental metric in network analysis.</p>
</li>
<li><p>﻿﻿It is used to directly quantify the number of nodes in the network that a given node is adjacent to.</p>
</li>
<li><p>﻿﻿for directed networks</p>
<ul>
<li>﻿﻿There are variations of this metric that are used, where connections between nodes have a directionality.</li>
</ul>
</li>
<li><p>﻿﻿In directed networks, it makes sense to talk about the following:</p>
</li>
<li><p>﻿﻿In-degree - For a given node, how many edges are incoming to the node.<br> the node.</p>
</li>
<li><p>﻿Out-degree - For a given node, how many edges are outgoing from</p>
</li>
<li><p>﻿﻿CD(v) &#x3D; deg(v)</p>
</li>
</ul>
<p><strong>Centrality measures!</strong></p>
<p>Designed to characterise</p>
<ul>
<li>﻿﻿Functional role - what part does this node play in system dynamics?</li>
<li>﻿﻿Structural importance - how important is this node to the structural characteristics of the system?</li>
</ul>
<p>In each of the following networks, X has higher centrality than Y according to a particular measure</p>
<p>![image-20230430204648900](..&#x2F;images&#x2F;webs&#x2F;:Users:joshua:Library:Application Support:typora-user-images:image-20230430204648900.png)</p>
<ul>
<li>﻿﻿“Who is the most important or central person in this network?”<ul>
<li>﻿﻿There are many answers to this question, depending on what we mean by importance.</li>
</ul>
</li>
<li>﻿﻿The power a person holds in the organization is inversely proportional to the number of keys on his keyring.<ul>
<li>﻿﻿A janitor has keys to every office, and no power.</li>
<li>﻿﻿The CEO does not need a key: people always open the door for him.</li>
</ul>
</li>
<li>﻿﻿Degree centrality of a vertex</li>
</ul>
<p>![image-20230430205230578](..&#x2F;images&#x2F;webs&#x2F;:Users:joshua:Library:Application Support:typora-user-images:image-20230430205230578.png)</p>
<p>![image-20230430210025438](..&#x2F;images&#x2F;webs&#x2F;:Users:joshua:Library:Application Support:typora-user-images:image-20230430210025438.png)</p>
<p>Eigenvector centrality</p>
<ul>
<li><p>﻿﻿Who is the most influential</p>
</li>
<li><p>﻿﻿In contrast to degree centrality</p>
<ul>
<li>﻿﻿How important are these retweeters?</li>
</ul>
</li>
<li><p>﻿﻿is a measure of the influence of a node</p>
<ul>
<li>﻿﻿It assigns relative scores to all nodes in the network based on the concept that</li>
<li>﻿﻿connections to high-scoring nodes contribute more to the score of the node in<br> question<ul>
<li>﻿﻿than equal connections to low-scoring nodes.</li>
</ul>
</li>
</ul>
</li>
<li><p>﻿﻿Google’s page rank is variant of the eigenvector centrality.</p>
</li>
<li><p>﻿﻿Using Adjacency network</p>
<ul>
<li>﻿﻿Ax &#x3D; lambda x</li>
<li>﻿﻿there is a unique largest eigenvalue, which is real and positive,</li>
<li>﻿﻿This greatest eigenvalue results in the desired centrality measure.</li>
</ul>
</li>
</ul>
<p>Betweenness Centrality&#x2F;Closeness Centrality</p>
<p><strong>Betweenness centrality</strong> measures the number shortest paths in which the user is in the sequence of nodes in the path.</p>
<ul>
<li>It was introduced as a measure for quantifying the control of a human on the communication between other humans in social network.</li>
<li>In this conception, vertices that have a high probability to occur on a randomly chosen shortest path between two randomly chosen vertices have a high betweenness.</li>
</ul>
<p>![image-20230430213515337](..&#x2F;images&#x2F;webs&#x2F;:Users:joshua:Library:Application Support:typora-user-images:image-20230430213515337.png)</p>
<p>Closeness Centrality: Definition</p>
<ul>
<li>﻿﻿Closeness is based on the length of the average shortest path between a vertex and all vertices in the graph</li>
<li>﻿﻿Closeness Centrality</li>
</ul>
<h3 id="L7-Retweet-Graph-Trend-amp-Influencers"><a href="#L7-Retweet-Graph-Trend-amp-Influencers" class="headerlink" title="L7_Retweet Graph Trend &amp; Influencers"></a>L7_Retweet Graph Trend &amp; Influencers</h3><p>Information diffusion ….</p>
<p>tracing, understanding and predicting how </p>
<p>a piece of information is spreading. </p>
<h4 id="Information-diffusion"><a href="#Information-diffusion" class="headerlink" title="Information diffusion"></a>Information diffusion</h4><ul>
<li><p>in online communities, tracking the information diffusion is useful for many applications, for example,</p>
<ul>
<li>﻿﻿such as early warning systems,</li>
<li>﻿﻿social bot and community detection,</li>
<li>﻿﻿user location prediction,</li>
<li>﻿﻿financial recommendations,</li>
<li>﻿﻿marketing campaign effectiveness,</li>
<li>﻿﻿political mobilization and protests</li>
</ul>
</li>
<li><p>﻿﻿Twitter offers four possible actions to express interest in specific content:</p>
<ul>
<li>﻿﻿<strong>favorite</strong>, <strong>reply</strong>, <strong>quote</strong> and <strong>retweet</strong>.</li>
<li>﻿﻿Replying or liking a tweet does not involve the spread of the content,</li>
<li>﻿﻿whereas quotes and retweets are actions used to<ul>
<li>﻿﻿share information with a wider audience.</li>
</ul>
</li>
</ul>
</li>
<li><p>﻿﻿A retweet is often considered an endorsement, i.e., the user supports the original tweet’s content,</p>
</li>
<li><p>﻿﻿whereas <strong>quoting</strong> may be done in order to express a different idea</p>
</li>
</ul>
<h4 id="Hashtags-amp-mentions"><a href="#Hashtags-amp-mentions" class="headerlink" title="Hashtags&amp;mentions"></a>Hashtags&amp;mentions</h4><ul>
<li>﻿﻿Hashtag - adding a “#” to the beginning of an unbroken word or phrase creates a hashtag.<ul>
<li>When you use a hashtag in a Tweet, it becomes linked to all of the other<br>Tweets that include it.</li>
<li>﻿﻿Including a hashtag gives your Tweet context and allows people to easily follow topics that they’re interested in.</li>
</ul>
</li>
</ul>
<p>@Mentions are used when talking to or about someone (the user account of a person, brand, group, etc.)</p>
<ul>
<li>﻿﻿In marketing</li>
<li>﻿﻿Using hashtags helps a brand connect with what’s happening on Twitter.<br> When brands connect with what’s happening on Twitter, they see</li>
<li>﻿﻿lifts across the marketing funnel, such as<ul>
<li>﻿﻿+18% message association, +8% brand awareness, and +3% purchase intent</li>
</ul>
</li>
</ul>
<h4 id="Twitter-REST-API"><a href="#Twitter-REST-API" class="headerlink" title="Twitter REST API"></a>Twitter REST API</h4><ul>
<li><p>﻿﻿The user Tweet timeline endpoint is a REST endpoint that receives a single path parameter to indicate the desired user (by user ID).</p>
<ul>
<li>﻿﻿The endpoint can return the 3,200 most recent<ul>
<li>﻿﻿Tweets, Retweets, replies, and Quote Tweets posted by the user.</li>
</ul>
</li>
</ul>
</li>
<li><p>﻿﻿User mention timeline</p>
<ul>
<li>﻿﻿The user mention timeline endpoint allows you to request Tweets</li>
<li>﻿﻿mentioning a specific Twitter user, for example,<ul>
<li>﻿﻿if a Twitter account mentioned @TwitterDev within a Tweet</li>
</ul>
</li>
</ul>
</li>
<li><p>it is possible to collect a huge amount of information regarding tweets, accounts, users’ timelines and social networks (i.e., following and followers).</p>
</li>
</ul>
<h4 id="Interaction-among-users"><a href="#Interaction-among-users" class="headerlink" title="Interaction among users"></a>Interaction among users</h4><ul>
<li>﻿﻿In order to understand the connections among users, it is important to consider not only their social networks<ul>
<li>﻿﻿but also, the way they interact, especially through retweets</li>
</ul>
</li>
<li>﻿﻿the Twitter API does not provide complete information about retweets and their propagation paths.<ul>
<li>﻿﻿More precisely, the only information carried by a retweet is the original user</li>
</ul>
</li>
<li>﻿﻿To estimate retweet cascade graphs,<ul>
<li>﻿﻿many strategies based on social network information</li>
<li>﻿﻿(i.e., friends and followers) in conjunction with temporal information</li>
</ul>
</li>
</ul>
<h4 id="Retweet-Graph"><a href="#Retweet-Graph" class="headerlink" title="Retweet Graph"></a>Retweet Graph</h4><ul>
<li><p>﻿﻿a graph of users, where an edge</p>
<ul>
<li>﻿﻿means that one of the users has retweeted a message of a different user.</li>
</ul>
</li>
<li><p>﻿﻿retweet graph G &#x3D; (V, E),</p>
<ul>
<li>﻿﻿which is a graph of users that have participated in the discussion on a specific topic.</li>
<li>﻿﻿A directed edge e &#x3D; (u, v) indicates that user v has retweeted a tweet of u.</li>
<li>﻿﻿Or e &#x3D; (u, v) indicates that user u has retweeted a tweet of v.</li>
</ul>
</li>
</ul>
<p>![image-20230430225752042](..&#x2F;images&#x2F;webs&#x2F;:Users:joshua:Library:Application Support:typora-user-images:image-20230430225752042.png)</p>
<p>Count the number of links to a node in the network</p>
<ul>
<li>﻿﻿the number of directed edges with source (destination)</li>
<li>﻿﻿In-degree - number of retweets of a user<br> Out-degree - number of retweets this particular node (user)<br> made</li>
</ul>
<p>observe the retweet graph at the time instances t &#x3D; 0, 1, 2, . ..,</p>
<ul>
<li>﻿﻿where either a new node or a new edge was added to the graph,</li>
<li>﻿﻿G, &#x3D; (V+, Et) the retweet graph at time t</li>
</ul>
<p><strong>Issues in building interaction graph</strong></p>
<ul>
<li>﻿﻿prior studies exploited the fact that users tend to interact more often with newer tweets,<ul>
<li>﻿﻿and a user is more likely to retweet the last friend who retweeted content.</li>
</ul>
</li>
<li>﻿﻿However, this approach is no longer a reliable way of estimating retweet graphs,</li>
<li>﻿﻿Since, Twitter does not show content based on<ul>
<li>﻿﻿simple reverse chronological order,</li>
<li>﻿﻿but according to user interests, trending topics and interactions</li>
</ul>
</li>
<li>﻿﻿fetch all the required social network information.<ul>
<li>﻿﻿the time required to fetch all</li>
</ul>
</li>
<li>﻿﻿Due to the Twitter API rate limits, the time required to collect the list of friends and followers is<ul>
<li>﻿﻿six times greater with respect to downloading the user’s timeline on average.</li>
</ul>
</li>
</ul>
<p><strong>Some findings</strong></p>
<ul>
<li>﻿﻿analyse the spread mechanics of content through hashtag use</li>
<li>﻿﻿and derive probabilities that users adopt a hashtag.</li>
<li>﻿﻿Hash tags tend to travel to more distant parts of the network and</li>
<li>﻿﻿URLs travel shorter distances.</li>
</ul>
<p>Random graph model</p>
<ul>
<li>﻿﻿Super-star random graph node for a giant component of a retweet graph.</li>
<li>﻿﻿users with many retweets have a higher chance to be retweeted,</li>
<li>﻿﻿however, there is also a super- star node that receives a new retweet at each step with a positive probability.</li>
</ul>
<h3 id="Modellng-Trends"><a href="#Modellng-Trends" class="headerlink" title="Modellng Trends"></a>Modellng Trends</h3><ul>
<li>﻿﻿Trending topics<ul>
<li>﻿﻿Ongoing topics that become suddenly extremely popular</li>
</ul>
</li>
<li>﻿﻿detecting different types of trends, for instance<ul>
<li>﻿﻿detecting emergencies,</li>
<li>﻿﻿earthquakes,</li>
<li>﻿﻿diseases or important events in sports.</li>
</ul>
</li>
<li>﻿﻿An important part of trending behaviour in social media is</li>
<li>﻿﻿the way these trends progress through the network.</li>
</ul>
<h3 id="Two-options"><a href="#Two-options" class="headerlink" title="Two options"></a>Two options</h3><ul>
<li><p>﻿﻿Content of the tweets discussing a topic</p>
<ul>
<li>﻿﻿How do we find this?</li>
</ul>
</li>
<li><p>﻿﻿Underlying networks describing the social ties between users of<br> Twitter</p>
<ul>
<li>﻿﻿a graph of users, where an edge means that one of the users has retweeted a message of a different user.</li>
</ul>
</li>
<li><p>﻿﻿In both cases, we could ask</p>
<ul>
<li><p>﻿﻿How big or small interaction network compared to followers’ network?</p>
</li>
<li><p>What kind of information goes through the network?</p>
<ul>
<li>85% of content is&#x2F;was News!</li>
</ul>
</li>
</ul>
</li>
</ul>
<h4 id="Largest-connected-component-LCC"><a href="#Largest-connected-component-LCC" class="headerlink" title="Largest connected component LCC"></a>Largest connected component LCC</h4><ul>
<li>LCC refers to a maximum set of nodes</li>
<li>such that you can move from any node to any other node</li>
<li>in this set by only moving between side-adjacent nodes from the graph.</li>
</ul>
<p>All components of a graph can be found by looping through its vertices,</p>
<p>starting a new breadth-first or depth-first search whenever the loop reaches a vertex that has not already been included in a previously found component.</p>
<p><strong>Graph density</strong></p>
<ul>
<li>﻿﻿represents the ratio between the edges present in a graph ﻿﻿and the maximum number of edges that the graph can contain.</li>
<li>﻿﻿Conceptually, it provides an idea of how dense a graph is in terms of edge connectivity.</li>
<li>﻿﻿In this work |E|&#x2F;|V|</li>
</ul>
<p><strong>size</strong> of the largest connected component (LCC) and its <strong>density</strong> are the most informative characteristics for predicting the peak in Twitter. </p>
<h4 id="Information-diffusion-amp-influencers"><a href="#Information-diffusion-amp-influencers" class="headerlink" title="Information diffusion &amp; influencers"></a>Information diffusion &amp; influencers</h4><p>Issue with retweet graph</p>
<ul>
<li><p>﻿﻿users might be exposed and influenced by a piece of information by multiple users, hence forming multiple influence paths</p>
</li>
<li><p>﻿﻿When a message arrives that is a retweet, every friend that has (re)tweeted at an earlier point in time ﻿﻿has to be considered as a potential influencer</p>
</li>
<li><p>﻿﻿there is no agreement on the minimum number of followers needed to be regarded as an “influencer”</p>
</li>
<li><p>﻿﻿In fact, in marketing, they talk about</p>
<ul>
<li>Micro-influencers</li>
</ul>
</li>
</ul>
<p><strong>Influence paths express the relationship of “who was influenced by whom”.</strong> </p>
<p>The set of influence paths form a social graph, that share a <strong>common root</strong> (a single user who first seeded a tweet). Influence path is referred as “information cascade”. A cascade is formed when users forward the same original message from a user that we call the root user.</p>
<p><strong>Information cascade model</strong></p>
<ul>
<li><p>﻿how information is being propagated from user to user from the stream of messages and the social graph.</p>
</li>
<li><p>﻿Nodes of the cascade represent users (user nodes) of the social network that got ﻿“influenced” by the root or another user.</p>
</li>
<li><p>﻿Edges of the cascade represent edges of the social graph over which influence actually spread.</p>
</li>
</ul>
<p><strong>An “influencer” in the case of Twitter is the so called “friend” that exposes information to his&#x2F;her followers and</strong></p>
<p>exerts influence on them in such a way that they forward this piece of information.</p>
<p>However, real data is missing?</p>
<p>we can derive these influence paths from these social connections among users.</p>
<p><strong>Absolute Interaction strength</strong></p>
<p>![image-20230501103443357](..&#x2F;images&#x2F;webs&#x2F;:Users:joshua:Library:Application Support:typora-user-images:image-20230501103443357.png)</p>
<p><strong>Retweet distribution</strong> </p>
<ul>
<li>﻿﻿The retweet distribution given the time delay between the retweet action date and the original tweet posting time<ul>
<li>﻿﻿for 16,304 cascades</li>
</ul>
</li>
<li>Temporal dynamics of the retweets after the respective roottime</li>
<li>﻿﻿Showing a decreasing trend,<ul>
<li>﻿﻿as the highest number of interactions occurred</li>
<li>﻿﻿soon after roottime (the original tweet creation date).</li>
</ul>
</li>
</ul>
<p><strong>Weighted information strength</strong></p>
<p>![image-20230501103700956](..&#x2F;images&#x2F;webs&#x2F;:Users:joshua:Library:Application Support:typora-user-images:image-20230501103700956.png)</p>
<p>![image-20230501103748922](..&#x2F;images&#x2F;webs&#x2F;:Users:joshua:Library:Application Support:typora-user-images:image-20230501103748922.png)</p>
<p><strong>Approach - Generating Retweet Cascade Graphs</strong> </p>
<p>![image-20230501103852547](..&#x2F;images&#x2F;webs&#x2F;:Users:joshua:Library:Application Support:typora-user-images:image-20230501103852547.png)</p>
<p><strong>No interaction</strong></p>
<p>![image-20230501103945037](..&#x2F;images&#x2F;webs&#x2F;:Users:joshua:Library:Application Support:typora-user-images:image-20230501103945037.png)</p>
<p><strong>In addition</strong></p>
<ul>
<li>﻿﻿when there are no available interactions by a user u, and thus</li>
<li>﻿﻿no IS values between u and any other user,</li>
<li>﻿﻿An alternative is to find a link from the u to another user in the cascade</li>
<li>﻿﻿collect the user’s friend list by using the Twitter API, and</li>
<li>﻿﻿every user’s friend that has retweeted at an earlier point in time is considered as a potential influencer</li>
<li>﻿﻿To identify the influencer that more likely spread the tweet to user u,</li>
<li>﻿﻿consider the most recent influencer, i.e., u is linked to the last friend that retweeted the message.</li>
<li>﻿﻿Users that still remaining without an edge after this second step are denoted as sparse nodes<br> (SN).</li>
</ul>
<p><strong>How do you find influencer nodes and communities?</strong></p>
<ul>
<li>How could we find important nodes?<ul>
<li>Influencers?</li>
</ul>
</li>
<li>How can we find the information paths?<ul>
<li>What measures you may use? <strong>Centrality</strong>, <strong>Degrees</strong>.</li>
</ul>
</li>
<li>What alternative mechanisms to weight graphs?</li>
</ul>
<h3 id="L8-Network-Analysis-Case-studies-in-Health-Communities"><a href="#L8-Network-Analysis-Case-studies-in-Health-Communities" class="headerlink" title="L8 Network Analysis - Case studies in Health Communities"></a>L8 Network Analysis - Case studies in Health Communities</h3><h4 id="Case-studies"><a href="#Case-studies" class="headerlink" title="Case studies"></a>Case studies</h4><p>How online communities of people with long-term conditions function &amp; evolve: network analysis of the structure and dynamics of the asthma UK and British lung foundation online communities,</p>
<p><strong>Problems</strong></p>
<ul>
<li><p>﻿﻿We have seen</p>
<ul>
<li><p>﻿﻿People express themselves through social media</p>
</li>
<li><p>﻿﻿Huge amount of data</p>
</li>
</ul>
</li>
<li><p>﻿﻿People suffering from mental health</p>
<ul>
<li>﻿﻿Silent suffering!</li>
</ul>
</li>
<li><p>﻿﻿Can we create a self-management or self-diagnosis tool</p>
<ul>
<li><p>﻿﻿A tool helping them to control their situation</p>
</li>
<li><p>﻿﻿A tool nudging them to get help!!</p>
</li>
</ul>
</li>
<li><p>﻿﻿To start with</p>
<ul>
<li>﻿﻿How prevalent is mental health issues in society?</li>
</ul>
</li>
<li><p>﻿﻿Can we mine network structure of social media to understand how communities support mental health issues?</p>
<ul>
<li>﻿﻿Network structure of social media data provide insights on support given by society on mental health issues</li>
</ul>
</li>
</ul>
<p><strong>Social Support</strong></p>
<p>Social Support is an exchange of resources between two individuals</p>
<ul>
<li><p>﻿﻿perceived by the provider or the recipient to be intended</p>
</li>
<li><p>﻿﻿to enhance the well-being of the recipient</p>
<ul>
<li><p>﻿﻿e.g.,</p>
<ul>
<li><p>﻿﻿Facebook interaction</p>
</li>
<li><p>﻿﻿RTs …</p>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<p>How to extract signatures of perceived social support?</p>
<p><strong>Post-reply Network</strong></p>
<p>Example -&gt; StackOverflow</p>
<p>It is not like twitter, its form is due to the users shared same interest.</p>
<p>A community expertise network.</p>
<h4 id="Graph-modelling-WHAT-IS-INTERACTION-GRAPH"><a href="#Graph-modelling-WHAT-IS-INTERACTION-GRAPH" class="headerlink" title="Graph modelling WHAT IS INTERACTION GRAPH"></a><strong>Graph modelling WHAT IS INTERACTION GRAPH</strong></h4><p><strong>User interaction graph</strong></p>
<p>Tie</p>
<ul>
<li><p>﻿﻿Tie connect a pair of users&#x2F;actors by one or more relations</p>
<ul>
<li><p>﻿﻿Sharing information, financial or Psychological support</p>
</li>
<li><p>﻿﻿One relation or multiple set of relations</p>
</li>
<li><p>﻿﻿Vary in content, direction &amp; strength</p>
</li>
</ul>
</li>
<li><p>﻿﻿look at the actual tie between users instead of message level interactions</p>
</li>
</ul>
<p><strong>Structural prestige in online communities</strong></p>
<ul>
<li><p>﻿﻿A thread</p>
<ul>
<li>How many people a user replied (out degree!!)</li>
<li>﻿﻿How many people replied to the user (in degree!!)</li>
</ul>
</li>
<li><p>﻿﻿In directed networks</p>
<ul>
<li><p>﻿﻿People who send many responses&#x2F;replies</p>
</li>
<li><p>﻿﻿are considered to be prestigious</p>
</li>
<li><p>﻿﻿Or person with knowledge</p>
</li>
</ul>
</li>
</ul>
<p><strong>Size of a node</strong></p>
<ul>
<li>﻿﻿the size of the node depends on the number of replies send by the user</li>
<li>﻿﻿The more the number of replies, the larger the node</li>
</ul>
<p><strong>How to create an interaction graph?</strong></p>
<ul>
<li><p>﻿﻿the users who post and the corresponding reply users</p>
</li>
<li><p>﻿﻿A Pandas DataFrame contains two columns of node names</p>
<ul>
<li>﻿﻿posts_author, comments_author.</li>
</ul>
</li>
<li><p>﻿﻿use nx.from pandas_ edgelist() to transfer the DataFrame to a network graph.</p>
<ul>
<li><p>﻿﻿Network (NX) is a python software package,</p>
</li>
<li><p>﻿﻿used to create and operate complex networks,</p>
</li>
<li><p>﻿﻿and to learn the structure, dynamics and functions of complex networks.</p>
</li>
</ul>
</li>
<li><p>﻿﻿To distinguish the importance of each user who post,</p>
<ul>
<li><p>﻿﻿we set the size of these users’ to twice its node degree<br> User’s node orange</p>
</li>
<li><p>﻿﻿Replies node to light gray the directed edges to light blue colour.</p>
</li>
</ul>
</li>
</ul>
<p><strong>Temporal activity patterns</strong></p>
<ul>
<li>Let us study how the community thrive?<ul>
<li>How do they function and evolve over time?</li>
</ul>
</li>
<li>Basically we are answering research questions <ul>
<li>like “ what is the basic structure of SUCH online communities and how do they function and evolve over time”</li>
</ul>
</li>
</ul>
<p><strong>Degree distributions</strong></p>
<ul>
<li><p>﻿﻿Look at the distribution of degrees,</p>
</li>
<li><p>﻿﻿Or the amount of edges a node has</p>
</li>
<li><p>﻿﻿Acros sall nodes in a graph</p>
</li>
<li><p>﻿﻿Top 1% of nodes</p>
<ul>
<li><p>﻿﻿in terms of degrees</p>
</li>
<li><p>﻿﻿most interactive and have<br> Established edges with a lot of other users by exchanging messages</p>
</li>
<li><p>﻿﻿Known as super users,</p>
</li>
</ul>
</li>
</ul>
<p><strong>Activity analysis</strong></p>
<ul>
<li><p>﻿﻿How are users engaging or community thrive?</p>
<ul>
<li>﻿﻿Does posting activity follow a time pattern?</li>
</ul>
</li>
<li><p>﻿﻿How many activity is happening on a daily or weekly basis on a particular community</p>
<ul>
<li><p>﻿﻿Number of messages exchanged in a community across the whole life cycle of data</p>
</li>
<li><p>﻿﻿how users engaging with a community</p>
</li>
</ul>
</li>
<li><p>﻿﻿Cumulative frequencies of activity</p>
<ul>
<li>﻿﻿Number of posts reply per week</li>
</ul>
</li>
</ul>
<p><strong>To understand the behaviour of the community</strong></p>
<ul>
<li><p>the trend tends to be linear,</p>
<ul>
<li>which indicates that the number of new replies per week remains stable.</li>
</ul>
</li>
<li><p>SuicideWatch, average 211605 posts to come weekly and PSTD average 1980 posts</p>
</li>
<li><p>This shows that the average weekly posting volume of Suicide Watch community users is almost 100 times that of PTSD.</p>
<ul>
<li>227,307 users in the SuicideWatch community, while PTSD has only 50032 users,</li>
</ul>
</li>
</ul>
<p><strong>Open question – how do we distinguish two communities?</strong></p>
<p>Modularity Optimization: Modularity is a measure of the degree to which nodes in a network are connected within their own community compared to the connections between different communities. Modularity optimization involves identifying communities that maximize modularity, or in other words, communities that have a high degree of internal connections and a low degree of external connections.</p>
<p>Girvan-Newman Algorithm: This algorithm involves iteratively removing edges from the network in order of their “betweenness centrality,” which is a measure of how often a given edge lies on the shortest path between two nodes. By removing edges in this way, the algorithm gradually breaks the network into smaller and smaller communities.</p>
<p>Label Propagation: This method involves assigning an initial label to each node in the network and then iteratively updating the labels based on the labels of neighboring nodes. Over time, nodes tend to cluster into groups with similar labels, forming communities.</p>
<p>Spectral Clustering: This method involves using the eigenvalues and eigenvectors of the network’s adjacency matrix to identify communities. By projecting the network onto a lower-dimensional space, spectral clustering can often separate nodes into distinct communities.</p>
<p> <strong>how did we study the behaviour of two communities &amp; what did we found?</strong></p>
<ul>
<li><p>﻿﻿For each week</p>
</li>
<li><p>﻿﻿Compute average post</p>
<ul>
<li><p>﻿﻿Look at the total posts by all users</p>
</li>
<li><p>﻿﻿Divided by total number of unique users</p>
</li>
</ul>
</li>
<li><p>﻿﻿How users are engaging with the community?</p>
<ul>
<li><p>﻿﻿A continuous engagement is good for the vitality of community.</p>
</li>
<li><p>﻿﻿Do these communities drive enough engagement and activity to sustain</p>
</li>
</ul>
</li>
</ul>
<p><strong>Super users</strong></p>
<ul>
<li><p>﻿﻿A small minority of users</p>
<ul>
<li><p>﻿﻿Responsible for a high proportion of posting activity and thus support</p>
</li>
<li><p>﻿﻿Functioning of communities</p>
</li>
</ul>
</li>
<li><p>﻿﻿5% of users generate</p>
<ul>
<li>﻿﻿Over 70% of content</li>
</ul>
</li>
<li><p>﻿How do we study the role of super users?</p>
<ul>
<li>﻿﻿Sensitivity analysis</li>
</ul>
</li>
</ul>
<p><strong>How to find the super user?</strong></p>
<ul>
<li><p>﻿﻿For each user</p>
<ul>
<li><p>﻿﻿Count the number of posts (A) and</p>
</li>
<li><p>﻿﻿The number of replies (B)</p>
</li>
<li><p>﻿﻿The number of total activity (A + B)</p>
</li>
</ul>
</li>
<li><p>﻿﻿Rank the user in terms of respective frequencies</p>
</li>
</ul>
<p><strong>Connected component</strong></p>
<ul>
<li>﻿﻿A connected component of an undirected graph is a maximal set of nodes such that<ul>
<li>﻿﻿each pair of nodes is connected by a path.</li>
</ul>
</li>
<li>﻿﻿Directed graphs have weakly and strongly connected components.</li>
<li>﻿﻿Two vertices are in the same weakly connected<br> component<ul>
<li>﻿﻿if they are connected by a path, where paths are allowed to go either way along any edge.</li>
</ul>
</li>
<li>﻿﻿The weakly connected components correspond closely to the concept of connected component in undirected graphs and the typical situation is similar<ul>
<li>﻿﻿there is usually one large weakly connected component plus other small ones.</li>
</ul>
</li>
</ul>
<p><strong>Largest connected component</strong></p>
<ul>
<li><p>﻿﻿A largest connected component of a</p>
<ul>
<li><p>﻿﻿Graph G(V,E) is the largest possible subgraph</p>
<ul>
<li><p>﻿G_L(V_L,E_L) of G,</p>
</li>
<li><p>﻿﻿such that each node in G_L, has at least one valid connected path to every other node in G_L,</p>
</li>
</ul>
</li>
</ul>
</li>
<li><p>﻿﻿LCC gives us the subset of users</p>
<ul>
<li>﻿﻿Who form a cohesive community</li>
</ul>
</li>
<li><p>﻿﻿Importance of super users on LCC</p>
<ul>
<li>﻿﻿By removing them and studying the cohesion</li>
</ul>
</li>
</ul>
<p><strong>Community resilience</strong></p>
<p>Temporal Analysis</p>
<ul>
<li><p>﻿﻿Characteristics of LCC on a weekly basis</p>
</li>
<li><p>﻿﻿Focused and cohesive nature of interactions</p>
<ul>
<li>﻿﻿By looking at the fraction of users belonging to the LCC.</li>
</ul>
</li>
<li><p>﻿﻿Our aim is to study</p>
<ul>
<li>﻿﻿community resilience</li>
</ul>
</li>
<li><p>﻿﻿First how cohesive</p>
<ul>
<li>﻿﻿The community is?</li>
</ul>
</li>
<li><p>﻿﻿For each weekly graph, G</p>
<ul>
<li><p>﻿﻿Compute the LCC</p>
</li>
<li><p>﻿﻿That is all nodes in LCC has at least one path</p>
</li>
</ul>
</li>
<li><p>﻿﻿Compute fraction N&#x2F;N</p>
<ul>
<li>﻿﻿Nk is the nodes in LCC</li>
</ul>
</li>
</ul>
<p><strong>Fragility of the community</strong></p>
<ul>
<li><p>﻿﻿If the conversation network is held by</p>
<ul>
<li><p>﻿﻿A more or less uniform contribution of nodes</p>
</li>
<li><p>﻿﻿Or</p>
</li>
<li><p>﻿﻿Is there a skew in the responsibility of nodes</p>
</li>
</ul>
</li>
<li><p>﻿﻿Sensitivity analysis methods</p>
<ul>
<li>﻿﻿Which measures the network’s capacity to diffuse information as you move nodes based on certain property</li>
</ul>
</li>
<li><p>﻿﻿Importance of super users</p>
</li>
</ul>
<p><strong>Sensitivity analysis</strong></p>
<ul>
<li>﻿﻿the targeted removal of nodes (users) starting from the most connected nodes.</li>
<li>﻿﻿represents the size of the largest component as a percentage of the network size.</li>
<li>﻿﻿Specifically, it illustrates the key effects of the superusers on the website from another perspective.</li>
</ul>
<p><strong>Rich club effect</strong></p>
<ul>
<li><p>﻿﻿that a few important nodes (users) show stronger and closer connection with each other,</p>
<ul>
<li>﻿﻿and constitute a structural core and functional hub.</li>
</ul>
</li>
<li><p>﻿﻿the rich-club coefficient</p>
<ul>
<li>is the ratio of the actual number of edges of nodes with order greater than k</li>
<li>﻿﻿to the number of potential edges of each order k</li>
</ul>
</li>
</ul>
<p>![image-20230501161132105](..&#x2F;images&#x2F;webs&#x2F;:Users:joshua:Library:Application Support:typora-user-images:image-20230501161132105.png)</p>
<ul>
<li>the coefficient continues to be lower than 1,<ul>
<li>indicating that the amount of interaction between superusers are not high, </li>
<li>the amount of interactions between most non-superusers are also not high.</li>
</ul>
</li>
<li>the interactions between the superusers and non-superusers are very high,<ul>
<li>indicating that superusers are more inclined to communicate with users with fewer interactive connections.</li>
</ul>
</li>
<li>How do we explain this<ul>
<li>there are a large number of users with purposeful questions on the website and a small number of experts in the field.</li>
</ul>
</li>
</ul>
<h4 id="Z-score"><a href="#Z-score" class="headerlink" title="Z-score"></a>Z-score</h4><ul>
<li><p>﻿﻿We have seen core users and their relationship with other users from the graph</p>
</li>
<li><p>﻿﻿We do not know whether core users</p>
<ul>
<li><p>﻿﻿Tend to ask for help (post more)</p>
</li>
<li><p>﻿﻿Help others (reply more</p>
</li>
</ul>
</li>
<li><p>﻿﻿Look at a thread!</p>
</li>
<li><p>﻿﻿To find that out let us look at z-score!!<br>z &#x3D; (х - mean)&#x2F;sd</p>
</li>
</ul>
<h4 id><a href="#" class="headerlink" title></a></h4><h2 id="Emotion-Analysis"><a href="#Emotion-Analysis" class="headerlink" title="Emotion Analysis"></a>Emotion Analysis</h2><h3 id="L9"><a href="#L9" class="headerlink" title="L9"></a>L9</h3><h4 id="Sentiment-analysis-amp-variants"><a href="#Sentiment-analysis-amp-variants" class="headerlink" title="Sentiment analysis &amp; variants"></a>Sentiment analysis &amp; variants</h4><p><strong>Variants</strong></p>
<ul>
<li>﻿﻿<strong>Sentiment classification</strong><ul>
<li>﻿﻿whether a piece of text is positive, negative or neutral</li>
<li>﻿﻿Degree of intensity<ul>
<li>﻿﻿[-100,100]</li>
</ul>
</li>
</ul>
</li>
<li>﻿﻿Opinion analysis<ul>
<li>Determining from text, the speaker’s opinion and target of the opinion</li>
</ul>
</li>
<li>﻿﻿Stance<ul>
<li>﻿﻿Author of text is in favour of, against of, or neutral towards a proposition or target</li>
<li>﻿﻿For example, Brexit agreement<ul>
<li>﻿﻿Is people supportive?</li>
</ul>
</li>
</ul>
</li>
<li>﻿﻿<strong>Emotion</strong><ul>
<li>﻿﻿What are the emotion expressed in the text?</li>
</ul>
</li>
</ul>
<p><strong>Sentiment vs Stance</strong></p>
<ul>
<li>﻿﻿Target:<ul>
<li>﻿﻿Legalization of Abortion</li>
</ul>
</li>
<li>﻿﻿Tweet<ul>
<li>The pregnant are more than walking incubators. They have rights too!</li>
<li>﻿﻿In favour of the target</li>
<li>﻿﻿Target - Pro-life movement<ul>
<li>﻿??</li>
</ul>
</li>
</ul>
</li>
<li>﻿﻿Target<ul>
<li>﻿﻿Donald Trump</li>
</ul>
</li>
<li>﻿﻿Tweet<ul>
<li>﻿﻿Donald Trump has some strengths and some weakness<ul>
<li>neutral</li>
</ul>
</li>
</ul>
</li>
</ul>
<p><strong>Stance detection</strong></p>
<ul>
<li>﻿﻿Is the task of automatically determining from text<ul>
<li>﻿﻿whether the author of the text is in favour of, against of, or neutral</li>
<li>﻿﻿toward a proposition or target</li>
</ul>
</li>
<li>﻿﻿Target<ul>
<li>﻿﻿Person, organization, government policy, a movement, a product</li>
<li>﻿﻿E.g., infer from former Prime minister Boris Jonson’s speeches that he is in favour of Brexit</li>
<li>﻿﻿E.g., analysing tweets identify people in favour of leadership change</li>
</ul>
</li>
</ul>
<p>Aspect Based Sentiment Analysis</p>
<ul>
<li>﻿﻿A sentence contains one or more entities,<ul>
<li>﻿﻿each of which has a different polarity of emotion.</li>
</ul>
</li>
<li>﻿﻿For example, give a comment like<ul>
<li>﻿﻿“Great food but the service is dreadful!”,</li>
<li>﻿﻿the emotional polarity of entity “food” is “positive”</li>
<li>﻿﻿while the emotional polarity of entity “service” is “negative”.</li>
</ul>
</li>
<li>﻿﻿Compared to sentence level sentiment analysis, ABSA can present<ul>
<li>﻿﻿users with more precise and fine-grained sentiment information of entities</li>
</ul>
</li>
<li>﻿﻿You identify an aspect and the sentiment towards that aspect</li>
</ul>
<p><strong>Sentiment classifification is limited</strong></p>
<ul>
<li>﻿﻿Language serves social and interpersonal functions.<ul>
<li>﻿﻿Affective meaning is key for human interaction and a prominent characteristic of language use.</li>
</ul>
</li>
<li>﻿﻿This extends beyond<ul>
<li>﻿﻿opinions vs. factual or polarity distinctions</li>
<li>﻿﻿into multiple phenomena:<ul>
<li>﻿﻿emotion, mood, personality, attitude, credibility, volition, veracity, friendliness, etc.</li>
</ul>
</li>
</ul>
</li>
<li>﻿﻿<strong>Emotion:</strong><ul>
<li>﻿﻿angry, sad, joyful, fearful, …</li>
</ul>
</li>
<li>﻿﻿recognition, characterization, or generation of affect states,<ul>
<li>﻿﻿involves analysis of affect-related conditions, experiences, and activities.</li>
</ul>
</li>
</ul>
<p><strong>Textual emotion</strong></p>
<ul>
<li>﻿﻿We analyse the text and detect the emotion<ul>
<li>﻿﻿expressed by the author or</li>
<li>﻿﻿the emotion potentially felt by the reader</li>
</ul>
</li>
<li>﻿﻿Linguistic sensing of affective states can be used for<ul>
<li>﻿﻿Understanding social issues expressed through social media</li>
</ul>
</li>
<li>﻿﻿Researchers in psychological science believe that<ul>
<li>﻿﻿individuals have internal mechanisms for a limited collection of responses, usually</li>
<li>﻿﻿happy, sad, anger, disgust, and fear</li>
</ul>
</li>
</ul>
<p><strong>There are 6 emoMon categories that are widely used to describe</strong> </p>
<p>humans’ basic emoMons, based on facial expression: </p>
<p><strong>anger, disgust, fear,</strong> <strong>happiness</strong>, <strong>sadness</strong> and <strong>surprise</strong>.</p>
<ul>
<li>Categorical theories</li>
<li>EmoIons are discretely and difffferently constructed and</li>
<li>all humans are thought to have an innate set of basic emoIon </li>
<li>that are cross-culturally recognisable</li>
</ul>
<p><strong>OCC model</strong></p>
<p>22 emotions &#x3D; 6 Paul Ekman emotions + 16 addtional emotions</p>
<p><strong>Criticism</strong></p>
<ul>
<li>In the categorical approach, emotional states are restricted to a limited number of distinct types and</li>
<li>it can be difficult to resolve a complex emotional situation or mixed emotions.</li>
<li>Appraisal theory</li>
<li>It contains componential emotion models based on the theory of appraisal.</li>
<li>Appraisal theory describes how different emotions, in various participants and on different times, can arise from the same event</li>
</ul>
<h4 id="Text-emotion-detection"><a href="#Text-emotion-detection" class="headerlink" title="Text emotion detection"></a>Text emotion detection</h4><p><strong>motivation</strong></p>
<ul>
<li>﻿﻿because of the naturally vague and ambiguous human language is,<ul>
<li>﻿﻿the emotion detection can be highly “context-sensitive and complex”</li>
</ul>
</li>
<li>﻿﻿Emotion analysis is a convoluted task, even for human beings,<ul>
<li>﻿﻿due to the various cultures, gender, and context of people who authored the texts.</li>
<li>﻿﻿The task will be much easier when emotion is expressed explicitly, but in reality,</li>
<li>﻿﻿the majority of texts are subtle, ambiguous, and some words have more than one meaning, and</li>
<li>﻿﻿more than one word expresses the same emotions, and, in addition, some emotions can exist simultaneously</li>
</ul>
</li>
<li>﻿﻿Don’t u just HATE it when u cannot find something that u know you just saw like<br> 10 min ago!</li>
<li>By analysing the horse racing comments,</li>
<li>﻿﻿the model can learn about the information of winning horse and</li>
<li>﻿﻿would be able to give a reasonable prediction based on the emotion.</li>
</ul>
<p><strong>emotion classification</strong></p>
<ul>
<li>﻿﻿In the case of sentiment analysis, this task can be tackled using<ul>
<li>﻿﻿lexicon-based methods, machine learning, or a reule-based approach</li>
</ul>
</li>
<li>﻿﻿In emotion recognition task, the 4 most common approaches are<ul>
<li>﻿﻿Keyword-based detection<ul>
<li>﻿﻿Seed opinion words and find synonyms &amp; antonyms in WordNet</li>
<li>﻿﻿WordNet</li>
</ul>
</li>
</ul>
</li>
<li>﻿﻿Lexical affinity</li>
<li>﻿﻿hybrid</li>
<li>﻿﻿Learning based detection</li>
</ul>
<p><strong>Lexicon</strong></p>
<ul>
<li>﻿﻿Lexicons are linguistic tools for automated analysis of text</li>
<li>﻿﻿Most common<ul>
<li>﻿﻿Simple list of terms associated to a certain class of interest</li>
<li>﻿﻿Classification by counting</li>
<li>﻿﻿Terms can be weighted according to their strength of association with a given class</li>
</ul>
</li>
</ul>
<p>Lexicon based approaches?</p>
<ul>
<li>﻿﻿“I love horror books”</li>
<li>﻿﻿f(love) × 1.0 + f(horror) x 0.3 + f(books) x 0.5 &#x3D; 1.8 for positive</li>
<li>﻿﻿f(love) x 0.0 + f(horror) x 0.7 + f(books) × 0.5 &#x3D; 1.2 for negative</li>
<li>﻿﻿Decision function<ul>
<li>﻿﻿Classify one with maximum value</li>
</ul>
</li>
<li>Transparency<ul>
<li>﻿﻿Each prediction can be explained<ul>
<li>﻿﻿Analysing terms that were present in the text</li>
</ul>
</li>
</ul>
</li>
</ul>
<p><strong>BERT VS gpt</strong></p>
<h1 id="Mock-Paper"><a href="#Mock-Paper" class="headerlink" title="Mock Paper"></a>Mock Paper</h1><h2 id="2022"><a href="#2022" class="headerlink" title="2022"></a>2022</h2><ol>
<li></li>
</ol>
<p>(a) Assume that the BBC recruited you to develop a social media application. The BBC is interested in knowing their readers’ feelings on the news and other events covered by the broadcaster. Your job is to develop a classifier. In this context, answer the following questions:</p>
<p>(i)</p>
<p>Your first task is to create Twitter datasets with positive and negative statements so that they can be used for estimating the probabilities for words in the respective classes. [Hint: Assuming that you have a social media crawler, discuss how you will automatically label positive and negative tweets; how will you avoid spurious data]</p>
<p><strong>use hashtag based data collection</strong></p>
<p>1.Data collection: Use a social media crawler to collect tweets that mention the BBC or are in response to BBC’s tweets. This could be done using Twitter’s API to search for tweets containing specific keywords, hashtags, or mentions related to BBC’s news and events.</p>
<p>2.Pre-process: Clean the collected tweets by removing irrelevant information such as URLs, mentions, and special characters. Convert all text to lowercase and tokenize the words for easier analysis. <strong>Ignore this step</strong>.</p>
<p>3.Automatic labeling: Loop the tweets, using lexicon approach to compute the overall score of a tweet. if a tweet has been annotated with a hashtag, then use NRC hashtag lexicon approach to label the tweet, if it has a emoji at the end then use emoticons based approach to label the tweet. Then calculate the score for each feature (word&#x2F;hashtag&#x2F;emoticon), select the label correspondingly based on overall score.</p>
<p>![image-20230501223242594](..&#x2F;images&#x2F;webs&#x2F;:Users:joshua:Library:Application Support:typora-user-images:image-20230501223242594.png)</p>
<p>4.Avoid spurious data. Pre-defined relevant hashtags: Compile a list of relevant and meaningful hashtags associated with the BBC or specific news and events covered by the broadcaster. Only collect and analyze tweets containing these pre-defined hashtags to ensure high-quality data. Noise filtering: Filter out tweets that are ambiguous, contain sarcasm, or are irrelevant to the BBC’s content. This can be done using advanced NLP techniques or by setting a minimum sentiment score threshold to exclude borderline cases.</p>
<p>(ii)</p>
<p>Your second task is to develop a lexicon-based automatic sentiment analysis method, which assigns sentiment intensity between [-100,100].Describe an algorithm that also uses the dataset you created in (i). [Hint: identify a suitable lexicon; identify linguistic cases you may handle; specify a scoring method] </p>
<p>To develop a lexicon-based automatic sentiment analysis method that assigns sentiment intensity between [-100, 100], follow these steps:</p>
<ol>
<li><p>Choose a suitable lexicon: Select a pre-built sentiment lexicon that provides sentiment scores for words. Examples of such lexicons include SentiWordNet, AFINN, or VADER. These lexicons typically assign sentiment scores to words on a scale of -1 to 1 or -5 to 5.</p>
</li>
<li><p>Preprocessing: Clean the dataset created in step (i) by removing irrelevant information like URLs, mentions, and special characters. Convert all text to lowercase and tokenize the words for easier analysis.</p>
</li>
<li><p>Handling linguistic cases: Address various linguistic cases to improve sentiment analysis:</p>
<p>a. Negations: Identify negation words (e.g., not, never, isn’t) and modify the sentiment score of the words that follow. For example, you can reverse or reduce the sentiment score of the word following the negation.</p>
<p>b. Intensifiers: Identify intensifier words (e.g., very, extremely, really) and adjust the sentiment score of the following word accordingly. For example, you can multiply the sentiment score by a factor (e.g., 1.5 or 2) based on the intensity of the intensifier.</p>
<p>c. Diminishers: Identify diminisher words (e.g., slightly, barely, hardly) and adjust the sentiment score of the following word accordingly. For example, you can multiply the sentiment score by a factor (e.g., 0.5) based on the diminishing effect.</p>
</li>
<li><p>Scoring method: Implement a scoring method to calculate the sentiment intensity of each tweet using the lexicon and linguistic cases:</p>
<p>a. Initialize a sentiment score variable to 0 for each tweet.</p>
<p>b. Iterate through the words in the tweet, and for each word, check if it has a sentiment score in the lexicon.</p>
<p>c. If the word has a sentiment score, adjust the score based on the linguistic cases (negations, intensifiers, diminishers) if applicable.</p>
<p>d. Add the sentiment score of the word to the tweet’s sentiment score.</p>
<p>e. After processing all words, normalize the tweet’s sentiment score to fit the range of [-100, 100]. For example, if the lexicon’s sentiment scores range from -5 to 5, multiply the tweet’s sentiment score by 20.</p>
<p>f. Assign the normalized sentiment score to the tweet as its sentiment intensity.</p>
</li>
<li><p>Evaluation: Compare the sentiment intensity assigned by the lexicon-based method with the labels in the dataset created in step (i). Calculate performance metrics such as accuracy, precision, recall, and F1-score to evaluate the effectiveness of the lexicon-based sentiment analysis method.</p>
</li>
</ol>
<p>By following these steps, you can develop a lexicon-based automatic sentiment analysis method that assigns sentiment intensity between [-100, 100] and uses the dataset created in the previous task.</p>
<p>(iii)</p>
<p>Now that you created a sentiment analysis method, you want to verify the method’s validity from a user’s perspective. Design a scalable user-based study to ensure your sentiment scoring method is appropriate.</p>
<p>To design a scalable user-based study to ensure the sentiment scoring method’s appropriateness, follow these steps:</p>
<ol>
<li>Select a representative sample: Randomly sample a subset of tweets from the dataset created in the first task. Make sure the sample includes a balanced number of positive and negative tweets, as well as a diverse range of topics covered by the BBC.</li>
<li>Prepare the evaluation interface: Develop a user-friendly interface for the study participants. The interface should display a tweet and its corresponding sentiment score, calculated using the lexicon-based sentiment analysis method. Participants should be able to rate the sentiment score’s appropriateness on a scale (e.g., 1 to 5, with 1 being “strongly disagree” and 5 being “strongly agree”).</li>
<li>Recruit participants: Recruit a diverse group of participants to ensure a broad range of perspectives. You can use platforms like Amazon Mechanical Turk, Prolific, or other crowdsourcing services to recruit participants on a large scale.</li>
<li>Training and instructions: Provide clear instructions and examples to participants on how to evaluate the sentiment scores. Briefly explain the concept of sentiment analysis, the scoring range of [-100, 100], and the evaluation scale. You may also provide examples of tweets with appropriate and inappropriate sentiment scores to help participants understand the task better.</li>
<li>Evaluation process: Ask participants to evaluate the sentiment scores of the sampled tweets using the provided interface. Encourage them to consider the context of the tweet and the sentiment score’s appropriateness based on the tweet’s content.</li>
<li>Collect user feedback: Allow participants to provide qualitative feedback on the sentiment scoring method, highlighting any issues or suggestions for improvement. This feedback can help identify potential areas of refinement for the sentiment analysis method.</li>
<li>Analyze results: After collecting the evaluations, calculate the average appropriateness score for each tweet’s sentiment score. High average scores indicate that the sentiment scoring method is appropriate from the user’s perspective. Analyze the qualitative feedback to identify common themes and potential areas for improvement.</li>
<li>Iterate and improve: Based on the study results, refine the sentiment analysis method to address identified issues and incorporate user feedback. Repeat the user-based study with the updated method to evaluate its effectiveness iteratively.</li>
</ol>
<p>By designing and conducting a scalable user-based study, you can ensure that the sentiment scoring method is appropriate from the user’s perspective and make data-driven improvements to enhance its accuracy and effectiveness.</p>
<ol start="2">
<li></li>
</ol>
<p>(a)Create a vector representation for the following short text. Identify and remove potential stop words. “@AlanStainer @takeitev It’s mad isn’t it. In the UK there are 8k petrol stations with multiple pumps and 25k chargers (increasing by 300 pm). They do know the climate emergency is now right? Not in 30 years’ time, Just asking”</p>
<p>Stopwords: “the”, “in”, “and”</p>
<p>[“it’s”, “mad”, “isn’t”, “uk”, “8k”, “petrol”, “stations”, “multiple”, “pumps”, “25k”, “chargers”, “increasing”, “300”, “pm”, “know”, “climate”, “emergency”, “right”, “30”, “years’”, “time”, “asking”]</p>
<p>(b)Create all biterms from the following text, “in the UK there are 8k petrol stations with multiple pumps and 25k chargers</p>
<p>(“in”, “the”) (“in”, “UK”) (“in”, “there”) … (“pumps”, “and”) (“pumps”, “25k”) (“pumps”, “chargers”) … (“and”, “25k”) (“and”, “chargers”) … (“25k”, “chargers”)</p>
<p>(c) Assume you have developed a topic model on a collection with your university communications for the last academic year. Design a user-centred experiment to evaluate the interpretability of the model. [Hint: design tasks and justify, selection of subjects, number of users, what will you measure, how do you prove the results]</p>
<p>Designing a user-centered experiment to evaluate the interpretability of a topic model involves several components, including selecting subjects, designing tasks, determining the number of users, and measuring performance. Here’s an outline for such an experiment:</p>
<ol>
<li><p>Define the goal: The primary goal of the experiment is to evaluate the interpretability of the topic model in terms of the coherence and relevance of the identified topics within the context of university communications.</p>
</li>
<li><p>Selection of subjects: Choose participants who have some familiarity with the university environment, such as students, faculty, and administrative staff. This will ensure that they can understand and assess the relevance of the topics generated by the model.</p>
</li>
<li><p>Number of users: To ensure the results are reliable and generalizable, aim for a diverse sample of participants. A sample size of 30-50 participants is typically considered sufficient for user-centered experiments, but the optimal number may vary depending on factors such as the complexity of the tasks and the desired statistical power.</p>
</li>
<li><p>Design tasks: Create tasks that help assess the interpretability of the topics generated by the model. Example tasks include:</p>
<p>a. Topic labeling: Ask participants to assign meaningful labels to a given set of topics. This assesses whether users can understand and make sense of the topics generated by the model.</p>
<p>b. Topic ranking: Ask participants to rank a list of topics based on their relevance or importance to the university’s communications. This helps evaluate the model’s ability to identify meaningful and relevant topics.</p>
<p>c. Document-topic assignment: Provide participants with a set of documents and ask them to assign the most relevant topic from the model to each document. This task assesses whether users can effectively map the generated topics to real-world documents.</p>
</li>
<li><p>Measurement: Collect quantitative and qualitative data to evaluate the interpretability of the model.</p>
<p>a. Quantitative measures: Calculate agreement scores (e.g., Fleiss’ Kappa or Cohen’s Kappa) to measure the consistency among participants in terms of topic labeling, ranking, and document-topic assignments.</p>
<p>b. Qualitative measures: Collect subjective feedback from participants about the coherence, relevance, and overall interpretability of the topics. This can be done through open-ended questions, interviews, or questionnaires.</p>
</li>
<li><p>Analyze results: Analyze the quantitative and qualitative data to assess the interpretability of the model. High agreement scores and positive feedback from participants would indicate that the model generates interpretable topics.</p>
</li>
<li><p>Prove the results: To prove the results, compare the performance of the topic model with alternative models or baseline approaches (e.g., LDA, NMF). Conduct a similar user-centered experiment for the alternative models and compare the agreement scores and subjective feedback. A higher performance of the developed topic model compared to the alternatives would provide evidence for its interpretability.</p>
</li>
</ol>
<p>By carefully designing and executing a user-centered experiment, you can evaluate the interpretability of a topic model in the context of university communications, ensuring that the model generates meaningful and relevant topics for the users.</p>
<p>(d)You have collected tweets and newspaper articles from Scotland for the last month.</p>
<p>Describe a method to develop topic models from these datasets. [Hint identify issues in dealing with such heterogenous datasets; how would you handle such issues]</p>
<p>l Prepare the tweets data, Pre-process of the data. </p>
<p>l Create a bigram model and trigram model. Then use the data with bigrams and trigrams to create the dictionary which will be used in model training.</p>
<p>l Use dictionary to create the corpus.</p>
<p>l Use LDA model to run topic modelling by the previous data which has been processed.</p>
<p>l Use different measures which including KL divergence, perplexity, and coherence to evaluate the model. This step will also help us to determine the number of topics.</p>
<p>l Update the model parameter by the result of evaluation.</p>
<p>l Visualize the model. The topic keywords will be displayed by a chart or a word cloud.</p>
<p><strong>Handling heterogeneity:</strong> Tweets and newspaper articles have different lengths, styles, and contexts. To address these issues:</p>
<p>a. Length normalization: To mitigate the differences in length between tweets and newspaper articles, consider using techniques like document sampling or text chunking. For instance, divide newspaper articles into smaller chunks of approximately the same size as tweets.</p>
<p>b. Text representation: Use a suitable text representation method that can capture the context and semantics of both short and long texts. Techniques like TF-IDF, word embeddings (e.g., Word2Vec, GloVe), or even more advanced methods like BERT embeddings can be used.</p>
<p>c. Combining datasets: Combine the preprocessed tweets and newspaper article chunks into a single dataset to build a unified topic model.</p>
<p>3.Applying clustering (e.g., Single-pass clustering) on Twitter data stream will create groups of similar tweets of varying sizes. Design an algorithm to detect events from such groups. Specifically, answer the following questions.</p>
<p><strong>（i）What role do entities play in detecting events? How would you reduce the cost of detecting entities?</strong></p>
<p>Entities can include named entities like people, organizations, locations, or other relevant terms specific to an event. By identifying and tracking entities within the tweet clusters, we can recognize emerging events and monitor their development. Entities can help:</p>
<ol>
<li>Identify the key components of an event: Entities can represent the primary subjects or objects related to an event, enabling us to understand the event’s main focus.</li>
<li>Differentiate between events: Entities can help distinguish between different events by providing context-specific information, which allows us to separate events with similar keywords but different contexts.</li>
<li>Track the progression of events: Monitoring the frequency and co-occurrence of entities over time can provide insights into how an event is evolving and help identify new developments or trends.</li>
</ol>
<p>Reducing the cost of detecting entities:</p>
<p>Detecting entities in real-time can be computationally expensive, especially for large-scale Twitter data streams. To reduce the cost of detecting entities, consider the following strategies:</p>
<ol>
<li>Entity extraction optimization: Use efficient named entity recognition (NER) tools or libraries that can handle streaming data, like spaCy or the Stanford NER. These libraries are optimized for performance and can handle large-scale text data efficiently.</li>
<li>Filter irrelevant data: Preprocess the Twitter data stream to remove irrelevant information, such as URLs, hashtags, user mentions, and stop words. This reduces the volume of data to process and allows the entity extraction to focus on relevant content.</li>
<li>Keyword-based entity detection: Instead of using full-fledged NER models, you can create a list of relevant keywords or entities specific to the domain of interest. This can help in detecting events of interest with lower computational cost.</li>
<li>Incremental entity extraction: Instead of processing the entire data stream at once, perform entity extraction incrementally as new tweets arrive. This can help distribute the computational load over time, making it more manageable.</li>
<li>Parallelization: Utilize parallel processing techniques to distribute the entity extraction task across multiple cores or machines, which can significantly speed up the process and reduce the overall computational cost.</li>
</ol>
<p>By incorporating these strategies, you can reduce the cost of detecting entities in Twitter data streams while still effectively identifying and tracking events.</p>
<p><strong>(ii)If you were to use tf-idf concepts for representation, how would you capture them?</strong></p>
<p>To capture TF-IDF concepts for representation in the context of detecting events from Twitter data, follow these steps:</p>
<ol>
<li><p>Data preprocessing: Preprocess the tweets by removing irrelevant information (e.g., URLs, hashtags, user mentions), tokenizing the text, removing stop words, converting all text to lowercase, and performing lemmatization or stemming.</p>
</li>
<li><p>Term Frequency (TF): Calculate the term frequency for each term in each tweet. The term frequency is the number of times a term appears in a tweet divided by the total number of terms in that tweet. This step normalizes the frequency of terms in each tweet, accounting for varying tweet lengths.</p>
</li>
<li><p>Inverse Document Frequency (IDF): Calculate the inverse document frequency for each term across the entire Twitter data stream. The IDF measures the importance of a term by considering its rarity in the entire dataset. To calculate IDF, first compute the document frequency (DF) – the number of tweets containing a particular term. Then, compute the IDF as the logarithm of the total number of tweets divided by the DF.</p>
</li>
<li><p>TF-IDF representation: Compute the TF-IDF score for each term in each tweet by multiplying the TF and IDF values. This score represents the importance of a term in a tweet while considering its rarity in the entire dataset.</p>
</li>
<li><p>Feature vectors: For each tweet, create a feature vector with the TF-IDF scores of its terms. This can be represented as a sparse vector where each dimension corresponds to a unique term from the entire vocabulary across all tweets, and its value is the TF-IDF score for that term in the specific tweet. If a term is not present in a tweet, its value in the vector will be zero.</p>
</li>
<li><p>计算TF（Term Frequency，词频）：对于给定的文档d和词语t，它的TF值可以通过如下公式计算：</p>
<p>TF(t, d) &#x3D; (词语t在文档d中出现的次数) &#x2F; (文档d中词语总数)</p>
<p>其中，分子表示词语t在文档d中出现的次数，分母表示文档d中所有词语的总数。TF值反映了词语在当前文档中的重要程度，即出现次数越多，TF值越大。</p>
</li>
<li><p>计算IDF（Inverse Document Frequency，逆文档频率）：对于语料库中的所有文档和词语t，它的IDF值可以通过如下公式计算：</p>
<p>IDF(t) &#x3D; log((语料库中文档的总数) &#x2F; (包含词语t的文档数+1))</p>
<p>其中，分子表示语料库中所有文档的总数，分母表示包含词语t的文档数（加1是为了避免分母为0）。IDF值反映了词语在整个语料库中的重要程度，即出现文档数越少，IDF值越大。</p>
</li>
<li><p>计算TF-IDF：将TF和IDF相乘，得到词语t在文档d中的TF-IDF值。</p>
<p>TF-IDF(t, d) &#x3D; TF(t, d) * IDF(t)</p>
<p>TF-IDF值反映了词语t在文档d中的重要程度，同时也考虑了词语在整个语料库中的出现情况。在计算TF-IDF时，还可以对TF值进行平滑处理，例如使用下面的公式：</p>
<p>TF(t, d) &#x3D; 0.5 + 0.5 * (词语t在文档d中出现的次数) &#x2F; (文档d中词语总数)</p>
<p>这种平滑处理可以避免长文档中某个词语的TF值过高的问题。</p>
</li>
</ol>
<p><strong>(iii) How do you remove noisy or spam groups?</strong></p>
<p>Removing noisy or spam groups from a dataset involves filtering out irrelevant or low-quality content. Here are some strategies to identify and remove such groups:</p>
<ol>
<li>Text-based filtering: Analyze the content of the groups and apply filters to eliminate groups containing certain keywords or patterns that are commonly associated with spam or noise. For example, you can create a list of common spam keywords, phrases, or patterns, and remove groups that contain a high frequency of these terms.</li>
<li>Frequency-based filtering: Analyze the posting frequency of the groups. Spam or noisy groups often exhibit unusual posting patterns, such as posting the same content repeatedly, or posting at extremely high frequencies. Set a threshold for acceptable posting frequency and filter out groups that exceed this limit.</li>
<li>User-based filtering: Analyze the users contributing to the groups. If a group consists mostly of users with suspicious behavior or characteristics (e.g., newly created accounts, accounts with very few followers or following a large number of users), it might be a spam or noisy group. You can create a scoring system to rate the credibility of users and filter out groups with a high proportion of low-credibility users.</li>
<li>Group size: Small groups or groups with very few members might be more likely to be noisy or spammy. You can set a minimum group size threshold and remove groups that fall below this limit.</li>
<li>Language-based filtering: Analyze the language used in the groups. Spam or noisy groups may contain a high proportion of irrelevant    r nonsensical text, or text in a language that is not of interest for your analysis. Use natural language processing techniques, such as language detection, to filter out groups with content in unwanted languages or with a high proportion of unintelligible text.</li>
<li>Machine learning techniques: Train a machine learning model to classify groups as spam, noisy, or relevant based on features like text content, posting frequency, user characteristics, group size, and language. This approach can be more adaptive and effective in identifying spam and noisy groups, especially if the model is regularly updated with new data.</li>
</ol>
<p>By applying these strategies, you can identify and remove noisy or spam groups from your dataset, allowing for more accurate and meaningful analysis of the remaining content.</p>
<p><strong>(iv) How would you identify categories of events?</strong></p>
<p>1.Visualization, use diagram to demonstrate the top 20 most frequent words in a group, this can help us understand the topic of a group and help us to categorize the groups. Or use the PCA to reduce the dimensionality of the data and project it to a lower space, find the overlaps.</p>
<p>2.Cluster labeling, Assign descriptive labels to the groups based on the representative information extracted in the previous step. You can manually analyze the most frequent terms, key phrases, or named entities in each group and assign a suitable category label. Alternatively, you can use an automated approach like extracting the most frequent terms or key phrases as labels.</p>
<p><strong>(v) Provide an algorithm for combining similar groups of tweets (e.g., tweets containing same entities).</strong></p>
<ol>
<li>Extract entities from each group:<ul>
<li>For each group, extract the named entities (e.g., people, organizations, locations) from the text of the tweets and articles.</li>
<li>You can use a Named Entity Recognition (NER) library like spaCy or Stanford NER to perform this task.</li>
</ul>
</li>
<li>Calculate entity similarity between groups:<ul>
<li>Create a function to compute the similarity between two groups based on the shared entities.</li>
<li>You can use the Jaccard similarity coefficient, which is the size of the intersection of entities divided by the size of the union of entities for each pair of groups.</li>
</ul>
</li>
<li>Combine similar groups based on a similarity threshold:<ul>
<li>Set a similarity threshold (e.g., 0.5) to decide whether two groups should be combined.</li>
<li>For each pair of groups:<ul>
<li>Compute the entity similarity using the function created in step 2.</li>
<li>If the similarity score is greater than or equal to the threshold:<ul>
<li>Combine the two groups into one.</li>
<li>Update the entity set of the combined group.</li>
<li>Remove the original groups from the list of groups.</li>
</ul>
</li>
</ul>
</li>
<li>Repeat this process until no more groups can be combined based on the similarity threshold.</li>
</ul>
</li>
</ol>
<p> <strong>here are some other features than entities you can use to combine similar groups:</strong></p>
<ol>
<li>Term Frequency (TF):<ul>
<li>Use the frequency of terms within each group as a feature. Calculate the similarity between groups based on the overlap of their most frequent terms.</li>
</ul>
</li>
<li>Key phrases:<ul>
<li>Extract key phrases from the text in each group using techniques like RAKE (Rapid Automatic Keyword Extraction) or TextRank. Compare the groups based on the overlap of their key phrases.</li>
</ul>
</li>
<li>Sentiment analysis:<ul>
<li>Calculate the average sentiment score of each group using a sentiment analysis library or pre-trained model. Combine groups with similar sentiment scores.</li>
</ul>
</li>
<li>Topic modeling:<ul>
<li>Apply topic modeling techniques like Latent Dirichlet Allocation (LDA) to the dataset. Compare groups based on the distribution of topics within each group.</li>
</ul>
</li>
<li>Word embeddings:<ul>
<li>Use pre-trained word embeddings like Word2Vec, GloVe, or BERT to represent the text within each group. Calculate the average embedding for each group and compare groups using cosine similarity or other distance metrics.</li>
</ul>
</li>
<li>N-grams:<ul>
<li>Extract N-grams (sequences of N consecutive words) from the text within each group. Compare groups based on the overlap of their most frequent N-grams.</li>
</ul>
</li>
<li>Text similarity:<ul>
<li>Calculate the average pairwise text similarity within each group using a text similarity measure like cosine similarity, Jaccard similarity, or edit distance. Combine groups with similar average text similarity scores.</li>
</ul>
</li>
<li>Hashtags and user mentions:<ul>
<li>For Twitter data, extract hashtags and user mentions from the tweets within each group. Compare groups based on the overlap of their most frequent hashtags and user mentions.</li>
</ul>
</li>
</ol>
<p>(vi) how do we find the brusting clusters?</p>
<p>To find bursting clusters, you can use a sliding window algorithm combined with a clustering method. The idea is to divide the data into time windows and apply clustering within each window to identify groups of similar items. By comparing the clusters across different time windows, you can detect bursts of activity. Here’s an outline of the algorithm:</p>
<ol>
<li>Divide the data into time windows:<ul>
<li>Choose an appropriate window size and step size based on the dataset and the expected duration of bursts.</li>
<li>Divide the data into non-overlapping or overlapping time windows accordingly.</li>
</ul>
</li>
<li>Apply clustering within each time window:<ul>
<li>For each time window, preprocess the data (e.g., tokenize, remove stop words, stemming&#x2F;lemmatization) and create feature vectors using methods like TF-IDF or word embeddings.</li>
<li>Apply a clustering algorithm (e.g., K-means, DBSCAN) to the feature vectors within the window to group similar items.</li>
</ul>
</li>
<li>Detect bursts by comparing clusters across adjacent time windows:<ul>
<li>Define a burst detection criterion, such as a significant increase in the number of items within a cluster or the emergence of a new cluster with a large number of items.</li>
<li>For each pair of adjacent time windows, compare the clusters and identify those that meet the burst detection criterion.</li>
</ul>
</li>
</ol>
<p>Here’s a pseudo-code for the algorithm:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">phpCopy code</span><br><span class="line">function preprocess_and_vectorize(data):</span><br><span class="line">    preprocessed_data = preprocess_text(data)</span><br><span class="line">    feature_vectors = create_feature_vectors(preprocessed_data)</span><br><span class="line">    return feature_vectors</span><br><span class="line"></span><br><span class="line">function cluster_data(feature_vectors):</span><br><span class="line">    clusters = apply_clustering_algorithm(feature_vectors)</span><br><span class="line">    return clusters</span><br><span class="line"></span><br><span class="line">function detect_bursts(window_clusters, burst_threshold):</span><br><span class="line">    bursts = []</span><br><span class="line">    for i in range(len(window_clusters) - 1):</span><br><span class="line">        for cluster in window_clusters[i]:</span><br><span class="line">            next_window_cluster = find_corresponding_cluster(cluster, window_clusters[i + 1])</span><br><span class="line">            if not next_window_cluster:</span><br><span class="line">                continue</span><br><span class="line">            growth = len(next_window_cluster) - len(cluster)</span><br><span class="line">            if growth &gt;= burst_threshold:</span><br><span class="line">                bursts.append((cluster, next_window_cluster))</span><br><span class="line">    return bursts</span><br><span class="line"></span><br><span class="line">data = load_data()</span><br><span class="line">window_size = ...</span><br><span class="line">step_size = ...</span><br><span class="line">burst_threshold = ...</span><br><span class="line"></span><br><span class="line">time_windows = create_time_windows(data, window_size, step_size)</span><br><span class="line">window_clusters = []</span><br><span class="line"></span><br><span class="line">for window in time_windows:</span><br><span class="line">    feature_vectors = preprocess_and_vectorize(window)</span><br><span class="line">    clusters = cluster_data(feature_vectors)</span><br><span class="line">    window_clusters.append(clusters)</span><br><span class="line"></span><br><span class="line">bursts = detect_bursts(window_clusters, burst_threshold)</span><br></pre></td></tr></table></figure>

<p>This algorithm divides the data into time windows, applies clustering within each window, and detects bursts based on changes in cluster sizes across adjacent windows. You can customize the window size, step size, clustering algorithm, and burst detection criterion based on your specific dataset and use case.</p>
<p>(b) Describe a methodology to predict stock trend prediction from social media data</p>
<p>StockNet (Deep Learning method)</p>
<p>StockNet is a hypothetical term that could refer to a network or system that aims to predict stock trends. While I’m not aware of a specific tool called “StockNet,” there are many approaches to predicting stock trends using machine learning and artificial intelligence techniques. One such approach is using deep learning models like recurrent neural networks (RNNs), long short-term memory (LSTM) networks, or convolutional neural networks (CNNs).</p>
<p>To use a deep learning model like “StockNet” to predict stock trends, follow these general steps:</p>
<ol>
<li>Data collection: Gather historical stock data, such as stock prices, trading volumes, and other relevant financial indicators. You may obtain this data from financial data providers, public financial statements, or web scraping.</li>
<li>Data preprocessing: Clean and preprocess the data to eliminate noise, handle missing values, and convert categorical data into numerical formats. This step may also involve feature engineering to create new features that may be relevant for prediction.</li>
<li>Feature scaling: Scale or normalize the features to ensure that they have similar ranges and are suitable for input into a deep learning model.</li>
<li>Train-test split: Split the dataset into training and testing sets. The training set will be used to train the model, while the testing set will be used to evaluate its performance.</li>
<li>Model selection: Choose an appropriate deep learning model based on your data and problem. Common choices include RNNs, LSTMs, and CNNs.</li>
<li>Model training: Train the selected model on the training data. This involves adjusting the model’s parameters to minimize the prediction error. You may need to experiment with different hyperparameters, such as learning rate, batch size, and the number of hidden layers.</li>
<li>Model evaluation: Evaluate the model’s performance on the testing data. Common evaluation metrics include mean squared error (MSE), mean absolute error (MAE), and R-squared.</li>
<li>Fine-tuning: If the model’s performance is unsatisfactory, fine-tune it by adjusting the hyperparameters, modifying the model architecture, or changing the features used.</li>
<li>Prediction: Once the model has been fine-tuned and performs well on the testing data, use it to predict future stock trends based on the input features.</li>
</ol>
<p>Keep in mind that predicting stock trends is inherently difficult due to the complex and dynamic nature of financial markets. No model can guarantee accurate predictions, and it is essential to manage risks and avoid relying solely on model predictions for making investment decisions.</p>
]]></content>
      <categories>
        <category>Courses</category>
      </categories>
      <tags>
        <tag>Courses</tag>
      </tags>
  </entry>
</search>
